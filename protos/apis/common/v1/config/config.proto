/*
 * Generated file common/v1/config/config.proto.
 *
 * Product version: 1.0-SNAPSHOT
 *
 * Part of the Content Management System APIs
 *
 * (c) 2023 Nutanix Inc.  All rights reserved
 *
 */

syntax = "proto2";

package common.v1.config;

option java_multiple_files = true;
option java_package = "common.v1.config";
option go_package = "common/v1/config";


/*
 * Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of object must have an attribute called x-bounded-map-keys that tells which flags are actually present for that entity. 
 */

message Flag {
  /*
   * 
   */

  optional string name = 1001;
  /*
   * 
   */

  optional bool value = 1002 [default = false];
}
/*
 * OneOf item wrapper message
 */

message StringWrapper {
  /*
   * Value field in oneOf item wrapper message
   */

  optional string value = 1000;
}
/*
 * OneOf item wrapper message
 */

message IntegerWrapper {
  /*
   * Value field in oneOf item wrapper message
   */

  optional int32 value = 1000;
}
/*
 * OneOf item wrapper message
 */

message BooleanWrapper {
  /*
   * Value field in oneOf item wrapper message
   */

  optional bool value = 1000;
}
/*
 * Array wrapper message
 */

message StringArrayWrapper {
  /*
   * Value field in wrapper message
   */

  repeated string value = 1000;
  }
/*
 * OneOf item wrapper message
 */

message StringMapWrapper {
  /*
   * Value field in oneOf item wrapper message
   */

  map<string, string> value = 1000;
  }
/*
 * A map describing a set of keys and their corresponding values. 
 */

message KVPair {
  /*
   * A map describing a set of keys and their corresponding values. 
   */
  oneof value {
    /*
     * 
     */
    common.v1.config.StringWrapper string_value = 1002;
    /*
     * 
     */
    common.v1.config.IntegerWrapper integer_value = 1003;
    /*
     * 
     */
    common.v1.config.BooleanWrapper boolean_value = 1004;
    /*
     * 
     */
    common.v1.config.StringArrayWrapper string_array_value = 1005;
    /*
     * 
     */
    common.v1.config.StringMapWrapper string_map_value = 1006;
  }
    /*
   * The key of this key-value pair
   */

  optional string name = 1001;
}
/*
 * 
 */

message Message {
  /*
   * A code that uniquely identifies a message. 
   */

  optional string code = 1001;
  /*
   * 
   */

  optional string message = 1002;
  /*
   * The locale for the message description. 
   */

  optional string locale = 1003 [default = "en_US"];
  /*
   * 
   */

  optional common.v1.config.MessageSeverityMessage.MessageSeverity severity = 1004;
}
/*
 * The message severity. 
 */
message MessageSeverityMessage {
  enum MessageSeverity {
    UNKNOWN = 0;
    REDACTED = 1;
    INFO = 1001;
    WARNING = 1002;
    ERROR = 1003;
  }
}

/*
 * Metadata associated with this resource. 
 */

message Metadata {
  /*
   * A globally unique identifier that represents the owner of this resource. 
   */

  optional string owner_reference_id = 1001;
  /*
   * The userName of the owner of this resource. 
   */

  optional string owner_user_name = 1002;
  /*
   * A globally unique identifier that represents the project this resource belongs to. 
   */

  optional string project_reference_id = 1003;
  /*
   * The name of the project this resource belongs to. 
   */

  optional string project_name = 1004;
  /*
   * A list of globally unique identifiers that represent all the categories the resource is associated with. 
   */

  optional common.v1.config.StringArrayWrapper category_ids = 1005;
}
/*
 * A model base class whose instances are bound to a specific tenant.  This model adds a tenantId to the base model class that it extends and is automatically set by the server. 
 */

message TenantAwareModel {
  /*
   * A globally unique identifier that represents the tenant that owns this entity.  It is automatically assigned by the system and is immutable from an API consumer perspective (some use cases may cause this Id to change - for instance a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server). 
   */

  optional string tenant_id = 1001;
}
/*
 * Array wrapper message
 */

message FlagArrayWrapper {
  /*
   * Value field in wrapper message
   */

  repeated common.v1.config.Flag value = 1000;
  }
/*
 * Array wrapper message
 */

message MessageArrayWrapper {
  /*
   * Value field in wrapper message
   */

  repeated common.v1.config.Message value = 1000;
  }
/*
 * Array wrapper message
 */

message KVPairArrayWrapper {
  /*
   * Value field in wrapper message
   */

  repeated common.v1.config.KVPair value = 1000;
  }