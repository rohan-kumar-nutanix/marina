/*
 * Copyright (c) 2022 Nutanix Inc. All rights reserved.
 *
 * Author: rajesh.battala@nutanix.com
 */

syntax = "proto2";

package protos.marina;

option go_package = "protos/marina";

import "protos/marina/marina_types.proto";

message PcTaskWalRecordCatalogItemData {
  // Catalog item UUID.
  optional bytes catalog_item_uuid = 1;

  // Catalog item's logical timestamp
  optional int64 version = 2 [ default = -1 ];

  // List of UUIDs of files created in the file repository as the result of a
  // task.
  repeated bytes file_uuid_list = 3;

  // Catalog item UUID.
  optional bytes global_catalog_item_uuid = 4;

  // Cluster UUIDs where the image RPC is fanned out. Used by the PC version
  // of the forward image task.
  repeated bytes cluster_uuid_list = 5;

  // New Catalog item UUID.
  optional bytes new_catalog_item_uuid = 6;

  // List of SourceGroupSpec.
  repeated SourceGroupSpec add_source_group_list = 7;
}

message PcTaskWalRecordMigrateTaskData {
  enum TaskPhase {
    kCreateEntries = 1;
    kChangeOwnership = 2;
    kCommitOwnership = 3;
    kPublishImages = 4;
    kCreateSpecs = 5;
    kMigrationComplete = 6;
  }

  // Current phase of the migrate taks.
  optional TaskPhase task_phase = 1;

  // List of all catalog items being migrated from PE.
  repeated bytes catalog_item_uuid_list = 2;

  // List of image uuids to be published.
  repeated bytes image_uuid_list = 3;

  // List of catalog item global uuids for which the PC
  // owned spec needs to be created.
  repeated bytes create_spec_uuid_list = 4;

  optional bool registration_reconciliation_required = 5 [ default = false ];
}

message PcTaskWalRecordData {
  // WAL data for catalog item related tasks.
  optional PcTaskWalRecordCatalogItemData catalog_item = 1;

  // WAL data for file repository related tasks.
  // optional PcTaskWalRecordFileRepoData file_repo = 3;

  // WAL data for the ForwardImageRpcTask.
  // optional PcTaskWalRecordForwardImageTaskData forward_image = 4;

  // List of catalog tasks created on PEs
  repeated EndpointTask task_list = 5;

  // WAL data for migrate task.
  optional PcTaskWalRecordMigrateTaskData migrate = 6;
}

// Marina task WAL.
message PcTaskWalRecord {
  // The current task state.
  //  optional Task task = 1;

  // Additional data logged by operations.
  optional PcTaskWalRecordData data = 2;

  // Whether the entry has been deleted. Used by the refactored python task
  // library.
  optional bool deleted = 3;

  // The proxy task WAL.
  optional ProxyTaskWal proxy_task_wal = 4;

  // Request UUID.
  optional bytes request_uuid = 5;

  // The WarehouseWal
  optional WarehouseWal warehouse_wal = 6;

  // The SecurityPolicyWal
  optional SecurityPolicyWal security_policy_wal = 7;

  // The ScannerConfig Wal
  optional ScannerConfigWal scanner_config_wal = 8;

  // The SyncOperationWal
  optional SyncWal sync_wal = 9;
}

// Proxy task WAL.
message ProxyTaskWal {
  // The UUID of the Catalog task.
  optional bytes task_uuid = 1;

  // The serialization token of the task.
  optional string serialization_token = 2;
}

// Warehouse task WAL.
message WarehouseWal {
  // Warehouse UUID
  optional bytes warehouse_uuid = 1;

  // WarehouseItem UUID
  optional bytes warehouse_item_uuid = 2;

  // Warehouse logical timestamp for the request.
  optional int64 logical_timestamp = 3;
}

// Sync task WAL
message SyncWal {
  //Upto which file sync operation is completed
  optional bytes file_completed = 1;
}

// Security Policy task WAL.
message SecurityPolicyWal {
  // Security Policy UUID
  optional bytes security_policy_uuid = 1;

  // Security Policy logical timestamp for the request.
  optional int64 logical_timestamp = 2;
}

// Scanner Config Tool task WAL.
message ScannerConfigWal {
  // Scanner Config UUID
  optional bytes scanner_config_uuid = 1;

  // Scanner Config logical timestamp for the request.
  optional int64 logical_timestamp = 2;
}
