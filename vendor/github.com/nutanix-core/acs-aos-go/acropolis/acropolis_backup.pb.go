// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acropolis/acropolis_backup.proto

package acropolis

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VmBackupInfo struct {
	// The basic VM information. Network adapter IP addresses are included, but
	// vmdisk sizes are not.
	VmInfo *VmInfo `protobuf:"bytes,1,opt,name=vm_info,json=vmInfo" json:"vm_info,omitempty"`
	// The snapshot tree structure, with embedded snapshot information in the
	// snapshot_link_list field. This field may be omitted if no VM snapshots are
	// included in the VM.
	VmSnapshotTreeInfo *VmSnapshotTreeInfo `protobuf:"bytes,2,opt,name=vm_snapshot_tree_info,json=vmSnapshotTreeInfo" json:"vm_snapshot_tree_info,omitempty"`
	// VM Group information. Similar to 'vm_info', the whole VmBackupInfo is an
	// opaque data to cerebro.
	VmGroup              *VmGroup `protobuf:"bytes,4,opt,name=vm_group,json=vmGroup" json:"vm_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmBackupInfo) Reset()         { *m = VmBackupInfo{} }
func (m *VmBackupInfo) String() string { return proto.CompactTextString(m) }
func (*VmBackupInfo) ProtoMessage()    {}
func (*VmBackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2fb90612b1735b2, []int{0}
}

func (m *VmBackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmBackupInfo.Unmarshal(m, b)
}
func (m *VmBackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmBackupInfo.Marshal(b, m, deterministic)
}
func (m *VmBackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmBackupInfo.Merge(m, src)
}
func (m *VmBackupInfo) XXX_Size() int {
	return xxx_messageInfo_VmBackupInfo.Size(m)
}
func (m *VmBackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VmBackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VmBackupInfo proto.InternalMessageInfo

func (m *VmBackupInfo) GetVmInfo() *VmInfo {
	if m != nil {
		return m.VmInfo
	}
	return nil
}

func (m *VmBackupInfo) GetVmSnapshotTreeInfo() *VmSnapshotTreeInfo {
	if m != nil {
		return m.VmSnapshotTreeInfo
	}
	return nil
}

func (m *VmBackupInfo) GetVmGroup() *VmGroup {
	if m != nil {
		return m.VmGroup
	}
	return nil
}

func init() {
	proto.RegisterType((*VmBackupInfo)(nil), "nutanix.acropolis.VmBackupInfo")
}

func init() { proto.RegisterFile("acropolis/acropolis_backup.proto", fileDescriptor_d2fb90612b1735b2) }

var fileDescriptor_d2fb90612b1735b2 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0x4c, 0x2e, 0xca,
	0x2f, 0xc8, 0xcf, 0xc9, 0x2c, 0xd6, 0x87, 0xb3, 0xe2, 0x93, 0x12, 0x93, 0xb3, 0x4b, 0x0b, 0xf4,
	0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x04, 0xf3, 0x4a, 0x4b, 0x12, 0xf3, 0x32, 0x2b, 0xf4, 0xe0,
	0xf2, 0x52, 0xf2, 0xd8, 0x34, 0x95, 0x54, 0x16, 0xa4, 0x16, 0x43, 0xf4, 0x28, 0x5d, 0x66, 0xe4,
	0xe2, 0x09, 0xcb, 0x75, 0x02, 0x1b, 0xe3, 0x99, 0x97, 0x96, 0x2f, 0x64, 0xc4, 0xc5, 0x5e, 0x96,
	0x1b, 0x9f, 0x99, 0x97, 0x96, 0x2f, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa9, 0x87, 0x61,
	0xac, 0x5e, 0x58, 0x2e, 0x48, 0x6d, 0x10, 0x5b, 0x19, 0x98, 0x16, 0x8a, 0xe0, 0x12, 0x2d, 0xcb,
	0x8d, 0x2f, 0xce, 0x4b, 0x2c, 0x28, 0xce, 0xc8, 0x2f, 0x89, 0x2f, 0x29, 0x4a, 0x4d, 0x85, 0x98,
	0xc0, 0x04, 0x36, 0x41, 0x15, 0xab, 0x09, 0xc1, 0x50, 0xe5, 0x21, 0x45, 0xa9, 0xa9, 0x60, 0xd3,
	0x84, 0xca, 0x30, 0xc4, 0x84, 0x4c, 0xb9, 0x38, 0xca, 0x72, 0xe3, 0xd3, 0x8b, 0xf2, 0x4b, 0x0b,
	0x24, 0x58, 0xc0, 0x86, 0x49, 0x61, 0x35, 0xcc, 0x1d, 0xa4, 0x22, 0x88, 0xbd, 0x0c, 0xc2, 0x70,
	0xe2, 0x8e, 0xe2, 0x84, 0xcb, 0x02, 0x02, 0x00, 0x00, 0xff, 0xff, 0x96, 0x17, 0xae, 0xa1, 0x39,
	0x01, 0x00, 0x00,
}
