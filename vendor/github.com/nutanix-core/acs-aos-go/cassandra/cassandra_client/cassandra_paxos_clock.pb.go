// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cassandra/cassandra_client/cassandra_paxos_clock.proto

package util_cassandra

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PaxosVersionClockProto_PaxosValueState int32

const (
	PaxosVersionClockProto_kOnlyPromiseForAValueExists  PaxosVersionClockProto_PaxosValueState = 0
	PaxosVersionClockProto_kValueExists                 PaxosVersionClockProto_PaxosValueState = 1
	PaxosVersionClockProto_kDeleteForCell               PaxosVersionClockProto_PaxosValueState = 2
	PaxosVersionClockProto_kDeleteChosenCellToBeRemoved PaxosVersionClockProto_PaxosValueState = 3
	PaxosVersionClockProto_kDeleteChosenCellRemoved     PaxosVersionClockProto_PaxosValueState = 4
	PaxosVersionClockProto_kDeleteChosenCellTombstoned  PaxosVersionClockProto_PaxosValueState = 5
	PaxosVersionClockProto_kValueChosen                 PaxosVersionClockProto_PaxosValueState = 6
)

var PaxosVersionClockProto_PaxosValueState_name = map[int32]string{
	0: "kOnlyPromiseForAValueExists",
	1: "kValueExists",
	2: "kDeleteForCell",
	3: "kDeleteChosenCellToBeRemoved",
	4: "kDeleteChosenCellRemoved",
	5: "kDeleteChosenCellTombstoned",
	6: "kValueChosen",
}

var PaxosVersionClockProto_PaxosValueState_value = map[string]int32{
	"kOnlyPromiseForAValueExists":  0,
	"kValueExists":                 1,
	"kDeleteForCell":               2,
	"kDeleteChosenCellToBeRemoved": 3,
	"kDeleteChosenCellRemoved":     4,
	"kDeleteChosenCellTombstoned":  5,
	"kValueChosen":                 6,
}

func (x PaxosVersionClockProto_PaxosValueState) Enum() *PaxosVersionClockProto_PaxosValueState {
	p := new(PaxosVersionClockProto_PaxosValueState)
	*p = x
	return p
}

func (x PaxosVersionClockProto_PaxosValueState) String() string {
	return proto.EnumName(PaxosVersionClockProto_PaxosValueState_name, int32(x))
}

func (x *PaxosVersionClockProto_PaxosValueState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaxosVersionClockProto_PaxosValueState_value, data, "PaxosVersionClockProto_PaxosValueState")
	if err != nil {
		return err
	}
	*x = PaxosVersionClockProto_PaxosValueState(value)
	return nil
}

func (PaxosVersionClockProto_PaxosValueState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_efb2cf34ae958ef4, []int{0, 0}
}

type PaxosVersionClockProto struct {
	Version              *int32                                           `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	CurrentEpoch         *int64                                           `protobuf:"varint,2,req,name=current_epoch,json=currentEpoch" json:"current_epoch,omitempty"`
	CurrentPaxosInstance *int64                                           `protobuf:"varint,3,req,name=current_paxos_instance,json=currentPaxosInstance" json:"current_paxos_instance,omitempty"`
	NextEpoch            *int64                                           `protobuf:"varint,4,req,name=next_epoch,json=nextEpoch" json:"next_epoch,omitempty"`
	NextPaxosInstance    *int64                                           `protobuf:"varint,5,req,name=next_paxos_instance,json=nextPaxosInstance" json:"next_paxos_instance,omitempty"`
	CurrentValueProposal *PaxosVersionClockProto_PaxosProposalNumberProto `protobuf:"bytes,6,req,name=current_value_proposal,json=currentValueProposal" json:"current_value_proposal,omitempty"`
	Promise              *PaxosVersionClockProto_PaxosProposalNumberProto `protobuf:"bytes,7,req,name=promise" json:"promise,omitempty"`
	CurrentValueState    *PaxosVersionClockProto_PaxosValueState          `protobuf:"varint,8,req,name=current_value_state,json=currentValueState,enum=apache.cassandra.db.paxos.PaxosVersionClockProto_PaxosValueState" json:"current_value_state,omitempty"`
	ReadRequiresPaxosRun *bool                                            `protobuf:"varint,9,opt,name=read_requires_paxos_run,json=readRequiresPaxosRun,def=0" json:"read_requires_paxos_run,omitempty"`
	// Adler32 checksum of the column value.
	Checksum *int64 `protobuf:"varint,10,opt,name=checksum,def=0" json:"checksum,omitempty"`
	// Flag to indicate whether the value is corrupt.
	IsValueCorrupt *bool                                       `protobuf:"varint,11,opt,name=is_value_corrupt,json=isValueCorrupt,def=0" json:"is_value_corrupt,omitempty"`
	ClientMetadata *PaxosVersionClockProto_ClientMetadataProto `protobuf:"bytes,12,opt,name=client_metadata,json=clientMetadata" json:"client_metadata,omitempty"`
	// Adler32 checksum of the row key and the column including column name and
	// paxos clock.
	KeyColumnChecksum    *int32   `protobuf:"varint,13,opt,name=key_column_checksum,json=keyColumnChecksum,def=0" json:"key_column_checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaxosVersionClockProto) Reset()         { *m = PaxosVersionClockProto{} }
func (m *PaxosVersionClockProto) String() string { return proto.CompactTextString(m) }
func (*PaxosVersionClockProto) ProtoMessage()    {}
func (*PaxosVersionClockProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb2cf34ae958ef4, []int{0}
}

func (m *PaxosVersionClockProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaxosVersionClockProto.Unmarshal(m, b)
}
func (m *PaxosVersionClockProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaxosVersionClockProto.Marshal(b, m, deterministic)
}
func (m *PaxosVersionClockProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaxosVersionClockProto.Merge(m, src)
}
func (m *PaxosVersionClockProto) XXX_Size() int {
	return xxx_messageInfo_PaxosVersionClockProto.Size(m)
}
func (m *PaxosVersionClockProto) XXX_DiscardUnknown() {
	xxx_messageInfo_PaxosVersionClockProto.DiscardUnknown(m)
}

var xxx_messageInfo_PaxosVersionClockProto proto.InternalMessageInfo

const Default_PaxosVersionClockProto_ReadRequiresPaxosRun bool = false
const Default_PaxosVersionClockProto_Checksum int64 = 0
const Default_PaxosVersionClockProto_IsValueCorrupt bool = false
const Default_PaxosVersionClockProto_KeyColumnChecksum int32 = 0

func (m *PaxosVersionClockProto) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *PaxosVersionClockProto) GetCurrentEpoch() int64 {
	if m != nil && m.CurrentEpoch != nil {
		return *m.CurrentEpoch
	}
	return 0
}

func (m *PaxosVersionClockProto) GetCurrentPaxosInstance() int64 {
	if m != nil && m.CurrentPaxosInstance != nil {
		return *m.CurrentPaxosInstance
	}
	return 0
}

func (m *PaxosVersionClockProto) GetNextEpoch() int64 {
	if m != nil && m.NextEpoch != nil {
		return *m.NextEpoch
	}
	return 0
}

func (m *PaxosVersionClockProto) GetNextPaxosInstance() int64 {
	if m != nil && m.NextPaxosInstance != nil {
		return *m.NextPaxosInstance
	}
	return 0
}

func (m *PaxosVersionClockProto) GetCurrentValueProposal() *PaxosVersionClockProto_PaxosProposalNumberProto {
	if m != nil {
		return m.CurrentValueProposal
	}
	return nil
}

func (m *PaxosVersionClockProto) GetPromise() *PaxosVersionClockProto_PaxosProposalNumberProto {
	if m != nil {
		return m.Promise
	}
	return nil
}

func (m *PaxosVersionClockProto) GetCurrentValueState() PaxosVersionClockProto_PaxosValueState {
	if m != nil && m.CurrentValueState != nil {
		return *m.CurrentValueState
	}
	return PaxosVersionClockProto_kOnlyPromiseForAValueExists
}

func (m *PaxosVersionClockProto) GetReadRequiresPaxosRun() bool {
	if m != nil && m.ReadRequiresPaxosRun != nil {
		return *m.ReadRequiresPaxosRun
	}
	return Default_PaxosVersionClockProto_ReadRequiresPaxosRun
}

func (m *PaxosVersionClockProto) GetChecksum() int64 {
	if m != nil && m.Checksum != nil {
		return *m.Checksum
	}
	return Default_PaxosVersionClockProto_Checksum
}

func (m *PaxosVersionClockProto) GetIsValueCorrupt() bool {
	if m != nil && m.IsValueCorrupt != nil {
		return *m.IsValueCorrupt
	}
	return Default_PaxosVersionClockProto_IsValueCorrupt
}

func (m *PaxosVersionClockProto) GetClientMetadata() *PaxosVersionClockProto_ClientMetadataProto {
	if m != nil {
		return m.ClientMetadata
	}
	return nil
}

func (m *PaxosVersionClockProto) GetKeyColumnChecksum() int32 {
	if m != nil && m.KeyColumnChecksum != nil {
		return *m.KeyColumnChecksum
	}
	return Default_PaxosVersionClockProto_KeyColumnChecksum
}

type PaxosVersionClockProto_PaxosProposalNumberProto struct {
	ProposalNumber       *int64   `protobuf:"varint,1,req,name=proposal_number,json=proposalNumber" json:"proposal_number,omitempty"`
	NodeId               *int64   `protobuf:"varint,2,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaxosVersionClockProto_PaxosProposalNumberProto) Reset() {
	*m = PaxosVersionClockProto_PaxosProposalNumberProto{}
}
func (m *PaxosVersionClockProto_PaxosProposalNumberProto) String() string {
	return proto.CompactTextString(m)
}
func (*PaxosVersionClockProto_PaxosProposalNumberProto) ProtoMessage() {}
func (*PaxosVersionClockProto_PaxosProposalNumberProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb2cf34ae958ef4, []int{0, 0}
}

func (m *PaxosVersionClockProto_PaxosProposalNumberProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaxosVersionClockProto_PaxosProposalNumberProto.Unmarshal(m, b)
}
func (m *PaxosVersionClockProto_PaxosProposalNumberProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaxosVersionClockProto_PaxosProposalNumberProto.Marshal(b, m, deterministic)
}
func (m *PaxosVersionClockProto_PaxosProposalNumberProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaxosVersionClockProto_PaxosProposalNumberProto.Merge(m, src)
}
func (m *PaxosVersionClockProto_PaxosProposalNumberProto) XXX_Size() int {
	return xxx_messageInfo_PaxosVersionClockProto_PaxosProposalNumberProto.Size(m)
}
func (m *PaxosVersionClockProto_PaxosProposalNumberProto) XXX_DiscardUnknown() {
	xxx_messageInfo_PaxosVersionClockProto_PaxosProposalNumberProto.DiscardUnknown(m)
}

var xxx_messageInfo_PaxosVersionClockProto_PaxosProposalNumberProto proto.InternalMessageInfo

func (m *PaxosVersionClockProto_PaxosProposalNumberProto) GetProposalNumber() int64 {
	if m != nil && m.ProposalNumber != nil {
		return *m.ProposalNumber
	}
	return 0
}

func (m *PaxosVersionClockProto_PaxosProposalNumberProto) GetNodeId() int64 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

type PaxosVersionClockProto_ClientMetadataProto struct {
	// If set, the CassandraValue contains a transformed value prepended with a
	// header (CassandraTransformationInfoProto) that describes the
	// transformation. The length of the header is 'transformed_length'.
	TransformedLength    *int32   `protobuf:"varint,1,opt,name=transformed_length,json=transformedLength,def=-1" json:"transformed_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaxosVersionClockProto_ClientMetadataProto) Reset() {
	*m = PaxosVersionClockProto_ClientMetadataProto{}
}
func (m *PaxosVersionClockProto_ClientMetadataProto) String() string {
	return proto.CompactTextString(m)
}
func (*PaxosVersionClockProto_ClientMetadataProto) ProtoMessage() {}
func (*PaxosVersionClockProto_ClientMetadataProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_efb2cf34ae958ef4, []int{0, 1}
}

func (m *PaxosVersionClockProto_ClientMetadataProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaxosVersionClockProto_ClientMetadataProto.Unmarshal(m, b)
}
func (m *PaxosVersionClockProto_ClientMetadataProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaxosVersionClockProto_ClientMetadataProto.Marshal(b, m, deterministic)
}
func (m *PaxosVersionClockProto_ClientMetadataProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaxosVersionClockProto_ClientMetadataProto.Merge(m, src)
}
func (m *PaxosVersionClockProto_ClientMetadataProto) XXX_Size() int {
	return xxx_messageInfo_PaxosVersionClockProto_ClientMetadataProto.Size(m)
}
func (m *PaxosVersionClockProto_ClientMetadataProto) XXX_DiscardUnknown() {
	xxx_messageInfo_PaxosVersionClockProto_ClientMetadataProto.DiscardUnknown(m)
}

var xxx_messageInfo_PaxosVersionClockProto_ClientMetadataProto proto.InternalMessageInfo

const Default_PaxosVersionClockProto_ClientMetadataProto_TransformedLength int32 = -1

func (m *PaxosVersionClockProto_ClientMetadataProto) GetTransformedLength() int32 {
	if m != nil && m.TransformedLength != nil {
		return *m.TransformedLength
	}
	return Default_PaxosVersionClockProto_ClientMetadataProto_TransformedLength
}

func init() {
	proto.RegisterEnum("apache.cassandra.db.paxos.PaxosVersionClockProto_PaxosValueState", PaxosVersionClockProto_PaxosValueState_name, PaxosVersionClockProto_PaxosValueState_value)
	proto.RegisterType((*PaxosVersionClockProto)(nil), "apache.cassandra.db.paxos.PaxosVersionClockProto")
	proto.RegisterType((*PaxosVersionClockProto_PaxosProposalNumberProto)(nil), "apache.cassandra.db.paxos.PaxosVersionClockProto.PaxosProposalNumberProto")
	proto.RegisterType((*PaxosVersionClockProto_ClientMetadataProto)(nil), "apache.cassandra.db.paxos.PaxosVersionClockProto.ClientMetadataProto")
}

func init() {
	proto.RegisterFile("cassandra/cassandra_client/cassandra_paxos_clock.proto", fileDescriptor_efb2cf34ae958ef4)
}

var fileDescriptor_efb2cf34ae958ef4 = []byte{
	// 641 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x4f, 0xdc, 0x3a,
	0x14, 0x7d, 0x99, 0x61, 0x18, 0xb8, 0xc0, 0x30, 0xe3, 0x41, 0xe0, 0xc7, 0x03, 0xbd, 0x88, 0xb7,
	0x78, 0xd9, 0x34, 0x14, 0x54, 0x75, 0x81, 0xba, 0x81, 0x40, 0x55, 0xaa, 0x7e, 0x8c, 0xd2, 0x8a,
	0x45, 0x55, 0x29, 0x32, 0xc9, 0x85, 0x89, 0x92, 0xd8, 0xc1, 0x76, 0x10, 0xec, 0xfa, 0xff, 0xfa,
	0x23, 0xfa, 0x57, 0xaa, 0x38, 0xc9, 0x30, 0xc3, 0xc7, 0xa2, 0x55, 0x77, 0xf6, 0x39, 0xc7, 0xe7,
	0xde, 0x63, 0x5f, 0xc3, 0xcb, 0x90, 0x29, 0xc5, 0x78, 0x24, 0xd9, 0xee, 0x64, 0x15, 0x84, 0x69,
	0x8c, 0x5c, 0x4f, 0x01, 0x39, 0xbb, 0x11, 0x2a, 0x08, 0x53, 0x11, 0x26, 0x6e, 0x2e, 0x85, 0x16,
	0xe4, 0x6f, 0x96, 0xb3, 0x70, 0x8c, 0xee, 0x44, 0xe3, 0x46, 0xe7, 0xae, 0x91, 0xed, 0xfc, 0x58,
	0x84, 0xf5, 0x51, 0xb9, 0x3a, 0x43, 0xa9, 0x62, 0xc1, 0xbd, 0xf2, 0xd8, 0xc8, 0x9c, 0xa2, 0xd0,
	0xbd, 0xae, 0x40, 0x6a, 0xd9, 0x2d, 0xa7, 0xe3, 0x37, 0x5b, 0xf2, 0x1f, 0xac, 0x84, 0x85, 0x94,
	0xc8, 0x75, 0x80, 0xb9, 0x08, 0xc7, 0xb4, 0x65, 0xb7, 0x9c, 0xb6, 0xbf, 0x5c, 0x83, 0x27, 0x25,
	0x46, 0x5e, 0xc0, 0x7a, 0x23, 0xaa, 0x3a, 0x8a, 0xb9, 0xd2, 0x8c, 0x87, 0x48, 0xdb, 0x46, 0xbd,
	0x56, 0xb3, 0xa6, 0xfa, 0x69, 0xcd, 0x91, 0x6d, 0x00, 0x8e, 0x37, 0x8d, 0xef, 0x9c, 0x51, 0x2e,
	0x96, 0x48, 0x65, 0xea, 0xc2, 0xd0, 0xd0, 0xf7, 0x1c, 0x3b, 0x46, 0x37, 0x28, 0xa9, 0x59, 0xbb,
	0x6f, 0xd6, 0x5d, 0x17, 0xd7, 0x2c, 0x2d, 0x30, 0xc8, 0xa5, 0xc8, 0x85, 0x62, 0x29, 0x9d, 0xb7,
	0x5b, 0xce, 0xd2, 0xfe, 0x5b, 0xf7, 0xc9, 0xbb, 0x71, 0x1f, 0xbf, 0x97, 0x0a, 0x1e, 0xd5, 0x36,
	0x1f, 0x8a, 0xec, 0x1c, 0xa5, 0x21, 0x26, 0x89, 0xce, 0xca, 0x42, 0x8d, 0x80, 0x44, 0xd0, 0xcd,
	0xa5, 0xc8, 0x62, 0x85, 0xb4, 0xfb, 0xc7, 0x4b, 0x36, 0xd6, 0xe4, 0x0a, 0x86, 0xb3, 0x39, 0x95,
	0x66, 0x1a, 0xe9, 0x82, 0xdd, 0x72, 0x7a, 0xfb, 0x87, 0xbf, 0x59, 0xd1, 0x04, 0xf9, 0x54, 0x1a,
	0xf9, 0x83, 0xe9, 0x6c, 0x06, 0x22, 0xaf, 0x60, 0x43, 0x22, 0x8b, 0x02, 0x89, 0x57, 0x45, 0x2c,
	0x51, 0xd5, 0x8f, 0x22, 0x0b, 0x4e, 0x17, 0x6d, 0xcb, 0x59, 0x38, 0xe8, 0x5c, 0xb0, 0x54, 0xa1,
	0xbf, 0x56, 0xaa, 0xfc, 0x5a, 0x64, 0x7c, 0xfd, 0x82, 0x93, 0x6d, 0x58, 0x08, 0xc7, 0x18, 0x26,
	0xaa, 0xc8, 0x28, 0xd8, 0x96, 0xd3, 0x3e, 0xb0, 0x9e, 0xfb, 0x13, 0x88, 0xec, 0x42, 0x3f, 0x56,
	0x75, 0x94, 0x50, 0x48, 0x59, 0xe4, 0x9a, 0x2e, 0x4d, 0xbb, 0xf6, 0xe2, 0xaa, 0x3d, 0xaf, 0x22,
	0x09, 0x87, 0xd5, 0xea, 0x27, 0x04, 0x19, 0x6a, 0x16, 0x31, 0xcd, 0xe8, 0xb2, 0x6d, 0x39, 0x4b,
	0xfb, 0x27, 0xbf, 0x1e, 0xde, 0x33, 0x46, 0xef, 0x6b, 0x9f, 0xea, 0xa6, 0x7b, 0xe1, 0x0c, 0x48,
	0xf6, 0x60, 0x98, 0xe0, 0x6d, 0x10, 0x8a, 0xb4, 0xc8, 0x78, 0x30, 0x89, 0xb2, 0x62, 0x5b, 0x4e,
	0xa7, 0x8c, 0x32, 0x48, 0xf0, 0xd6, 0x33, 0xa4, 0x57, 0x73, 0x9b, 0x5f, 0x81, 0x3e, 0xf5, 0x90,
	0xe4, 0x7f, 0x58, 0x6d, 0x26, 0x33, 0xe0, 0x06, 0x37, 0x9f, 0xae, 0xed, 0xf7, 0xf2, 0x19, 0x35,
	0xd9, 0x80, 0x2e, 0x17, 0x11, 0x06, 0x71, 0x54, 0xff, 0xba, 0xf9, 0x72, 0x7b, 0x1a, 0x6d, 0xbe,
	0x81, 0xe1, 0x23, 0x7d, 0x93, 0x3d, 0x20, 0x5a, 0x32, 0xae, 0x2e, 0x84, 0xcc, 0x30, 0x0a, 0x52,
	0xe4, 0x97, 0x7a, 0x4c, 0x2d, 0xd3, 0x66, 0xeb, 0xd9, 0x9e, 0x3f, 0x98, 0x62, 0xdf, 0x19, 0x72,
	0xe7, 0xbb, 0x05, 0xab, 0xf7, 0xde, 0x9f, 0xfc, 0x0b, 0xff, 0x24, 0x1f, 0x79, 0x7a, 0x3b, 0xaa,
	0xe6, 0xed, 0xb5, 0x90, 0x87, 0x86, 0x3d, 0xb9, 0x89, 0x95, 0x56, 0xfd, 0xbf, 0x48, 0x1f, 0x96,
	0x93, 0x69, 0xc4, 0x22, 0x04, 0x7a, 0xc9, 0x31, 0xa6, 0xa8, 0x4b, 0xb5, 0x87, 0x69, 0xda, 0x6f,
	0x11, 0x1b, 0xb6, 0x6a, 0xcc, 0x1b, 0x0b, 0x85, 0xbc, 0x84, 0x3f, 0x8b, 0x23, 0xf4, 0x31, 0x13,
	0xd7, 0x18, 0xf5, 0xdb, 0x64, 0x0b, 0xe8, 0x03, 0x45, 0xc3, 0xce, 0x99, 0x36, 0x1e, 0x9e, 0xcf,
	0xce, 0x95, 0x16, 0x1c, 0xa3, 0x7e, 0xe7, 0xae, 0x8d, 0x8a, 0xef, 0xcf, 0x1f, 0x1d, 0xc3, 0xb6,
	0x90, 0x97, 0x4f, 0x0f, 0xc1, 0xd1, 0xd0, 0x6b, 0x30, 0x13, 0xda, 0xcc, 0xc1, 0x97, 0x5e, 0xa1,
	0xe3, 0xf4, 0x4e, 0xfd, 0x33, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xd7, 0x37, 0x20, 0x7b, 0x05, 0x00,
	0x00,
}
