// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ergon/ergon_error.proto

package ergon

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErgonError_Type int32

const (
	ErgonError_kNoError                       ErgonError_Type = 0
	ErgonError_kCanceled                      ErgonError_Type = 1
	ErgonError_kRetry                         ErgonError_Type = 2
	ErgonError_kTimeout                       ErgonError_Type = 3
	ErgonError_kNotSupported                  ErgonError_Type = 4
	ErgonError_kUncaughtException             ErgonError_Type = 5
	ErgonError_kInvalidArgument               ErgonError_Type = 6
	ErgonError_kInvalidState                  ErgonError_Type = 7
	ErgonError_kLogicalTimestampMismatch      ErgonError_Type = 8
	ErgonError_kExists                        ErgonError_Type = 9
	ErgonError_kNotFound                      ErgonError_Type = 10
	ErgonError_kNotMaster                     ErgonError_Type = 11
	ErgonError_kTransportError                ErgonError_Type = 12
	ErgonError_kTaskCanceled                  ErgonError_Type = 13
	ErgonError_kTaskHasPendingSubtasks        ErgonError_Type = 14
	ErgonError_kNotAuthorized                 ErgonError_Type = 15
	ErgonError_kInvalidRequestOnCompletedTask ErgonError_Type = 16
)

var ErgonError_Type_name = map[int32]string{
	0:  "kNoError",
	1:  "kCanceled",
	2:  "kRetry",
	3:  "kTimeout",
	4:  "kNotSupported",
	5:  "kUncaughtException",
	6:  "kInvalidArgument",
	7:  "kInvalidState",
	8:  "kLogicalTimestampMismatch",
	9:  "kExists",
	10: "kNotFound",
	11: "kNotMaster",
	12: "kTransportError",
	13: "kTaskCanceled",
	14: "kTaskHasPendingSubtasks",
	15: "kNotAuthorized",
	16: "kInvalidRequestOnCompletedTask",
}

var ErgonError_Type_value = map[string]int32{
	"kNoError":                       0,
	"kCanceled":                      1,
	"kRetry":                         2,
	"kTimeout":                       3,
	"kNotSupported":                  4,
	"kUncaughtException":             5,
	"kInvalidArgument":               6,
	"kInvalidState":                  7,
	"kLogicalTimestampMismatch":      8,
	"kExists":                        9,
	"kNotFound":                      10,
	"kNotMaster":                     11,
	"kTransportError":                12,
	"kTaskCanceled":                  13,
	"kTaskHasPendingSubtasks":        14,
	"kNotAuthorized":                 15,
	"kInvalidRequestOnCompletedTask": 16,
}

func (x ErgonError_Type) Enum() *ErgonError_Type {
	p := new(ErgonError_Type)
	*p = x
	return p
}

func (x ErgonError_Type) String() string {
	return proto.EnumName(ErgonError_Type_name, int32(x))
}

func (x *ErgonError_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErgonError_Type_value, data, "ErgonError_Type")
	if err != nil {
		return err
	}
	*x = ErgonError_Type(value)
	return nil
}

func (ErgonError_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13fcaa0b385ae892, []int{0, 0}
}

type ErgonError struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErgonError) Reset()         { *m = ErgonError{} }
func (m *ErgonError) String() string { return proto.CompactTextString(m) }
func (*ErgonError) ProtoMessage()    {}
func (*ErgonError) Descriptor() ([]byte, []int) {
	return fileDescriptor_13fcaa0b385ae892, []int{0}
}

func (m *ErgonError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErgonError.Unmarshal(m, b)
}
func (m *ErgonError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErgonError.Marshal(b, m, deterministic)
}
func (m *ErgonError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErgonError.Merge(m, src)
}
func (m *ErgonError) XXX_Size() int {
	return xxx_messageInfo_ErgonError.Size(m)
}
func (m *ErgonError) XXX_DiscardUnknown() {
	xxx_messageInfo_ErgonError.DiscardUnknown(m)
}

var xxx_messageInfo_ErgonError proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("nutanix.ergon.ErgonError_Type", ErgonError_Type_name, ErgonError_Type_value)
	proto.RegisterType((*ErgonError)(nil), "nutanix.ergon.ErgonError")
}

func init() { proto.RegisterFile("ergon/ergon_error.proto", fileDescriptor_13fcaa0b385ae892) }

var fileDescriptor_13fcaa0b385ae892 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xdf, 0xaa, 0x13, 0x31,
	0x10, 0xc6, 0xb5, 0x9e, 0xbf, 0x73, 0xce, 0xb6, 0x73, 0x46, 0xf1, 0x20, 0xa2, 0x17, 0xbd, 0x15,
	0xea, 0x33, 0xb4, 0x65, 0x45, 0xc1, 0xd6, 0xd2, 0xae, 0x37, 0xde, 0x48, 0xdc, 0x1d, 0xb6, 0x21,
	0xbb, 0xc9, 0x9a, 0x4c, 0xa4, 0xf5, 0x4d, 0x7d, 0x03, 0x1f, 0x43, 0x12, 0x95, 0x72, 0x6e, 0x42,
	0xf2, 0xcb, 0xf0, 0xcd, 0x37, 0xdf, 0xc0, 0x3d, 0xfb, 0xd6, 0xd9, 0xb7, 0xf9, 0xfc, 0xca, 0xde,
	0x3b, 0x3f, 0x1b, 0xbc, 0x13, 0x47, 0x85, 0x8d, 0xa2, 0xac, 0x3e, 0xcc, 0xf2, 0xd7, 0xf4, 0xf7,
	0x08, 0xa0, 0x4c, 0xb7, 0x32, 0xd5, 0x4c, 0x7f, 0x8d, 0xe0, 0xac, 0x3a, 0x0e, 0x4c, 0xb7, 0x70,
	0x65, 0xd6, 0x2e, 0x43, 0x7c, 0x44, 0x05, 0x5c, 0x9b, 0xa5, 0xb2, 0x35, 0x77, 0xdc, 0xe0, 0x63,
	0x02, 0xb8, 0x30, 0x5b, 0x16, 0x7f, 0xc4, 0x51, 0x2e, 0xac, 0x74, 0xcf, 0x2e, 0x0a, 0x3e, 0xa1,
	0x3b, 0x28, 0xcc, 0xda, 0xc9, 0x2e, 0x0e, 0x83, 0xf3, 0xc2, 0x0d, 0x9e, 0xd1, 0x73, 0x20, 0xf3,
	0xd9, 0xd6, 0x2a, 0xb6, 0x7b, 0x29, 0x0f, 0x35, 0x0f, 0xa2, 0x9d, 0xc5, 0x73, 0x7a, 0x06, 0x68,
	0x3e, 0xd8, 0x1f, 0xaa, 0xd3, 0xcd, 0xdc, 0xb7, 0xb1, 0x67, 0x2b, 0x78, 0x91, 0x05, 0xfe, 0xd1,
	0x9d, 0x28, 0x61, 0xbc, 0xa4, 0x57, 0xf0, 0xc2, 0x7c, 0x74, 0xad, 0xae, 0x55, 0x97, 0x1a, 0x05,
	0x51, 0xfd, 0xb0, 0xd2, 0xa1, 0x57, 0x52, 0xef, 0xf1, 0x8a, 0x6e, 0xe0, 0xd2, 0x94, 0x07, 0x1d,
	0x24, 0xe0, 0x75, 0x36, 0xba, 0x76, 0xf2, 0xce, 0x45, 0xdb, 0x20, 0xd0, 0x18, 0x20, 0x3d, 0x57,
	0x2a, 0x08, 0x7b, 0xbc, 0xa1, 0xa7, 0x30, 0x31, 0x95, 0x57, 0x36, 0x24, 0x77, 0x7f, 0x87, 0xbb,
	0xcd, 0x2d, 0x2b, 0x15, 0x4e, 0x03, 0x16, 0xf4, 0x12, 0xee, 0x33, 0x7a, 0xaf, 0xc2, 0x86, 0x6d,
	0xa3, 0x6d, 0xbb, 0x8b, 0xdf, 0x44, 0x05, 0x13, 0x70, 0x4c, 0x04, 0xe3, 0x24, 0x3a, 0x8f, 0xb2,
	0x77, 0x5e, 0xff, 0xe4, 0x06, 0x27, 0x34, 0x85, 0xd7, 0xff, 0x6d, 0x6f, 0xf9, 0x7b, 0xe4, 0x20,
	0x9f, 0xec, 0xd2, 0xf5, 0x43, 0xc7, 0xc2, 0x4d, 0x52, 0x42, 0x5c, 0xbc, 0x81, 0xbb, 0xda, 0xf5,
	0xb3, 0x07, 0xf9, 0x2f, 0x26, 0xa7, 0xf0, 0x37, 0x69, 0x3f, 0x5f, 0xce, 0x33, 0xff, 0x13, 0x00,
	0x00, 0xff, 0xff, 0xa6, 0x09, 0xa0, 0x63, 0xc0, 0x01, 0x00, 0x00,
}
