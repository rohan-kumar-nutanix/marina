// Code generated by protoc-gen-go. DO NOT EDIT.
// source: util/sl_bufs/base/data_transformation_type.proto

package base

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataTransformation_Type int32

const (
	// No data transformation applied.
	DataTransformation_kNone DataTransformation_Type = 0
	// The data is compressed using Snappy.
	DataTransformation_kCompressionSnappy DataTransformation_Type = 1
	// The data is compressed using Zlib.
	DataTransformation_kCompressionZlib DataTransformation_Type = 2
	// The data is compressed using Bzip2.
	DataTransformation_kCompressionBzip2 DataTransformation_Type = 3
	// The data is compressed using LZ4.
	DataTransformation_kCompressionLZ4 DataTransformation_Type = 4
	// The data is compressed using LZ4HC.
	DataTransformation_kCompressionLZ4HC DataTransformation_Type = 5
	// The data is encrypted using 128-bit AES CBC.
	DataTransformation_kEncryptionAES128CBC DataTransformation_Type = 1024
	// The data is encrypted using 192-bit AES CBC.
	DataTransformation_kEncryptionAES192CBC DataTransformation_Type = 1025
	// The data is encrypted using 256-bit AES CBC.
	DataTransformation_kEncryptionAES256CBC DataTransformation_Type = 1026
	// The data is encrypted using 256-bit AES CTR.
	DataTransformation_kEncryptionAES256CTR DataTransformation_Type = 1027
	// The data is encrypted using 256-bit AES GCM.
	DataTransformation_kEncryptionAES256GCM DataTransformation_Type = 1028
	// The data is encrypted using 256-bit AES XTS.
	DataTransformation_kEncryptionAES256XTS DataTransformation_Type = 1029
)

var DataTransformation_Type_name = map[int32]string{
	0:    "kNone",
	1:    "kCompressionSnappy",
	2:    "kCompressionZlib",
	3:    "kCompressionBzip2",
	4:    "kCompressionLZ4",
	5:    "kCompressionLZ4HC",
	1024: "kEncryptionAES128CBC",
	1025: "kEncryptionAES192CBC",
	1026: "kEncryptionAES256CBC",
	1027: "kEncryptionAES256CTR",
	1028: "kEncryptionAES256GCM",
	1029: "kEncryptionAES256XTS",
}

var DataTransformation_Type_value = map[string]int32{
	"kNone":                0,
	"kCompressionSnappy":   1,
	"kCompressionZlib":     2,
	"kCompressionBzip2":    3,
	"kCompressionLZ4":      4,
	"kCompressionLZ4HC":    5,
	"kEncryptionAES128CBC": 1024,
	"kEncryptionAES192CBC": 1025,
	"kEncryptionAES256CBC": 1026,
	"kEncryptionAES256CTR": 1027,
	"kEncryptionAES256GCM": 1028,
	"kEncryptionAES256XTS": 1029,
}

func (x DataTransformation_Type) Enum() *DataTransformation_Type {
	p := new(DataTransformation_Type)
	*p = x
	return p
}

func (x DataTransformation_Type) String() string {
	return proto.EnumName(DataTransformation_Type_name, int32(x))
}

func (x *DataTransformation_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataTransformation_Type_value, data, "DataTransformation_Type")
	if err != nil {
		return err
	}
	*x = DataTransformation_Type(value)
	return nil
}

func (DataTransformation_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9fdd301e57bfe1a, []int{0, 0}
}

// Define the start and end enum values for different transformation types.
type DataTransformation_TypeStartEndEnumValue int32

const (
	// The start enum value for compresson.
	DataTransformation_kCompressionStartEnumValue DataTransformation_TypeStartEndEnumValue = 1
	// The end enum value for compresson.
	DataTransformation_kCompressionEndEnumValue DataTransformation_TypeStartEndEnumValue = 5
	// The start enum value for encryption.
	DataTransformation_kEncryptionStartEnumValue DataTransformation_TypeStartEndEnumValue = 1024
	// The end enum value for encryption.
	DataTransformation_kEncryptionEndEnumValue DataTransformation_TypeStartEndEnumValue = 1029
)

var DataTransformation_TypeStartEndEnumValue_name = map[int32]string{
	1:    "kCompressionStartEnumValue",
	5:    "kCompressionEndEnumValue",
	1024: "kEncryptionStartEnumValue",
	1029: "kEncryptionEndEnumValue",
}

var DataTransformation_TypeStartEndEnumValue_value = map[string]int32{
	"kCompressionStartEnumValue": 1,
	"kCompressionEndEnumValue":   5,
	"kEncryptionStartEnumValue":  1024,
	"kEncryptionEndEnumValue":    1029,
}

func (x DataTransformation_TypeStartEndEnumValue) Enum() *DataTransformation_TypeStartEndEnumValue {
	p := new(DataTransformation_TypeStartEndEnumValue)
	*p = x
	return p
}

func (x DataTransformation_TypeStartEndEnumValue) String() string {
	return proto.EnumName(DataTransformation_TypeStartEndEnumValue_name, int32(x))
}

func (x *DataTransformation_TypeStartEndEnumValue) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataTransformation_TypeStartEndEnumValue_value, data, "DataTransformation_TypeStartEndEnumValue")
	if err != nil {
		return err
	}
	*x = DataTransformation_TypeStartEndEnumValue(value)
	return nil
}

func (DataTransformation_TypeStartEndEnumValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9fdd301e57bfe1a, []int{0, 1}
}

type DataTransformation struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataTransformation) Reset()         { *m = DataTransformation{} }
func (m *DataTransformation) String() string { return proto.CompactTextString(m) }
func (*DataTransformation) ProtoMessage()    {}
func (*DataTransformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9fdd301e57bfe1a, []int{0}
}

func (m *DataTransformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTransformation.Unmarshal(m, b)
}
func (m *DataTransformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTransformation.Marshal(b, m, deterministic)
}
func (m *DataTransformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTransformation.Merge(m, src)
}
func (m *DataTransformation) XXX_Size() int {
	return xxx_messageInfo_DataTransformation.Size(m)
}
func (m *DataTransformation) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTransformation.DiscardUnknown(m)
}

var xxx_messageInfo_DataTransformation proto.InternalMessageInfo

type DataTransformationInfoProto struct {
	// Describes the data transformations applied on data associated to the
	// instance of this protobuf. The order in the repeated field specifies the
	// order in which the transformation types are applied. For example:
	// [kCompressionX, kEncryptionY] means compression X is applied before
	// encryption Y.
	TransformationTypeList []DataTransformation_Type `protobuf:"varint,1,rep,name=transformation_type_list,json=transformationTypeList,enum=nutanix.DataTransformation_Type" json:"transformation_type_list,omitempty"`
	// Cipher key id that is used to lookup the cipher key in a key management
	// service like Mantle.
	CipherKeyId []byte `protobuf:"bytes,2,opt,name=cipher_key_id,json=cipherKeyId" json:"cipher_key_id,omitempty"`
	// Initialization vector for encryption.
	InitializationVector []byte `protobuf:"bytes,3,opt,name=initialization_vector,json=initializationVector" json:"initialization_vector,omitempty"`
	// Encryption types like AES-XTS has minimum input data size. Therefore,
	// cushion is needed if the data to encrypt is less than minimum input data
	// size.
	CushionBytes *int32 `protobuf:"varint,4,opt,name=cushion_bytes,json=cushionBytes" json:"cushion_bytes,omitempty"`
	// Encryption types like AES-GCM produces an authentication tag. It is used
	// to validate against data tampering of the encrypted buffer.
	AuthenticationTag    []byte   `protobuf:"bytes,5,opt,name=authentication_tag,json=authenticationTag" json:"authentication_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataTransformationInfoProto) Reset()         { *m = DataTransformationInfoProto{} }
func (m *DataTransformationInfoProto) String() string { return proto.CompactTextString(m) }
func (*DataTransformationInfoProto) ProtoMessage()    {}
func (*DataTransformationInfoProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9fdd301e57bfe1a, []int{1}
}

func (m *DataTransformationInfoProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTransformationInfoProto.Unmarshal(m, b)
}
func (m *DataTransformationInfoProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTransformationInfoProto.Marshal(b, m, deterministic)
}
func (m *DataTransformationInfoProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTransformationInfoProto.Merge(m, src)
}
func (m *DataTransformationInfoProto) XXX_Size() int {
	return xxx_messageInfo_DataTransformationInfoProto.Size(m)
}
func (m *DataTransformationInfoProto) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTransformationInfoProto.DiscardUnknown(m)
}

var xxx_messageInfo_DataTransformationInfoProto proto.InternalMessageInfo

func (m *DataTransformationInfoProto) GetTransformationTypeList() []DataTransformation_Type {
	if m != nil {
		return m.TransformationTypeList
	}
	return nil
}

func (m *DataTransformationInfoProto) GetCipherKeyId() []byte {
	if m != nil {
		return m.CipherKeyId
	}
	return nil
}

func (m *DataTransformationInfoProto) GetInitializationVector() []byte {
	if m != nil {
		return m.InitializationVector
	}
	return nil
}

func (m *DataTransformationInfoProto) GetCushionBytes() int32 {
	if m != nil && m.CushionBytes != nil {
		return *m.CushionBytes
	}
	return 0
}

func (m *DataTransformationInfoProto) GetAuthenticationTag() []byte {
	if m != nil {
		return m.AuthenticationTag
	}
	return nil
}

func init() {
	proto.RegisterEnum("nutanix.DataTransformation_Type", DataTransformation_Type_name, DataTransformation_Type_value)
	proto.RegisterEnum("nutanix.DataTransformation_TypeStartEndEnumValue", DataTransformation_TypeStartEndEnumValue_name, DataTransformation_TypeStartEndEnumValue_value)
	proto.RegisterType((*DataTransformation)(nil), "nutanix.DataTransformation")
	proto.RegisterType((*DataTransformationInfoProto)(nil), "nutanix.DataTransformationInfoProto")
}

func init() {
	proto.RegisterFile("util/sl_bufs/base/data_transformation_type.proto", fileDescriptor_e9fdd301e57bfe1a)
}

var fileDescriptor_e9fdd301e57bfe1a = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x49, 0xbb, 0x8a, 0x72, 0xb6, 0x81, 0x67, 0xda, 0x91, 0xc1, 0x34, 0x55, 0xe5, 0xa6,
	0x37, 0x6b, 0xa1, 0x0c, 0x04, 0x12, 0x37, 0xb4, 0x54, 0x30, 0x51, 0x10, 0x6a, 0xab, 0x09, 0xe5,
	0x26, 0x72, 0x52, 0xb7, 0xb5, 0x92, 0xd8, 0x51, 0xec, 0x20, 0xb2, 0xab, 0xf1, 0x67, 0x4f, 0xc0,
	0x2b, 0x20, 0xde, 0x87, 0xb7, 0xe1, 0x12, 0x39, 0x0d, 0x28, 0x59, 0xc3, 0x5d, 0xf4, 0xfd, 0xbe,
	0x73, 0x9c, 0xf3, 0xd9, 0x07, 0x1e, 0xc4, 0x8a, 0xf9, 0x3d, 0xe9, 0xdb, 0x4e, 0xbc, 0x90, 0x3d,
	0x87, 0x48, 0xda, 0x9b, 0x13, 0x45, 0x6c, 0x15, 0x11, 0x2e, 0x17, 0x22, 0x0a, 0x88, 0x62, 0x82,
	0xdb, 0x2a, 0x09, 0x69, 0x37, 0x8c, 0x84, 0x12, 0xf8, 0x3a, 0x8f, 0x15, 0xe1, 0xec, 0x53, 0xfb,
	0x57, 0x15, 0xf0, 0x4b, 0xa2, 0xc8, 0xac, 0x60, 0x6d, 0xff, 0xa8, 0xc0, 0xd6, 0x2c, 0x09, 0x29,
	0xbe, 0x01, 0x35, 0xef, 0x9d, 0xe0, 0x14, 0x5d, 0xc3, 0xfb, 0x80, 0xbd, 0xa1, 0x08, 0xc2, 0x88,
	0x4a, 0xc9, 0x04, 0x9f, 0x72, 0x12, 0x86, 0x09, 0x32, 0x70, 0x03, 0x50, 0x5e, 0xb7, 0x7c, 0xe6,
	0xa0, 0x0a, 0x6e, 0xc2, 0x5e, 0x5e, 0x1d, 0x9c, 0xb3, 0xb0, 0x8f, 0xaa, 0xf8, 0x36, 0xdc, 0xca,
	0xcb, 0x63, 0xeb, 0x04, 0x6d, 0x5d, 0xf5, 0x8e, 0xad, 0x93, 0xd7, 0x43, 0x54, 0xc3, 0x07, 0xd0,
	0xf0, 0x46, 0xdc, 0x8d, 0x92, 0x50, 0xff, 0xd3, 0x8b, 0xd1, 0xf4, 0x61, 0xff, 0xe9, 0x70, 0x30,
	0x44, 0x17, 0xf5, 0x12, 0xf4, 0xac, 0xaf, 0xd1, 0xe7, 0x12, 0xd4, 0x7f, 0xfc, 0x44, 0xa3, 0x2f,
	0xff, 0x41, 0xb3, 0x09, 0xfa, 0x5a, 0x8e, 0x5e, 0x0d, 0xdf, 0xa2, 0x6f, 0xe5, 0xe8, 0xc3, 0x6c,
	0x8a, 0x2e, 0xeb, 0xed, 0xef, 0x06, 0x34, 0x75, 0x4c, 0x53, 0x45, 0x22, 0x35, 0xe2, 0xf3, 0x11,
	0x8f, 0x83, 0x33, 0xe2, 0xc7, 0x14, 0x1f, 0xc1, 0xdd, 0x42, 0x58, 0x6b, 0x43, 0x46, 0x91, 0x81,
	0x0f, 0xc1, 0xcc, 0xf3, 0x7c, 0x2d, 0xaa, 0xe1, 0x23, 0x38, 0xc8, 0x1d, 0x79, 0xa5, 0xf8, 0xa2,
	0x8e, 0x0f, 0xe1, 0x4e, 0x8e, 0x17, 0x8a, 0x2f, 0xeb, 0xed, 0x9f, 0x15, 0xb8, 0xb7, 0x79, 0xa7,
	0xa7, 0x7c, 0x21, 0xde, 0xa7, 0x97, 0x6f, 0x81, 0x59, 0xf2, 0x32, 0x6c, 0x9f, 0x49, 0x65, 0x1a,
	0xad, 0x6a, 0xe7, 0x66, 0xbf, 0xd5, 0xcd, 0xde, 0x47, 0x77, 0xb3, 0x4f, 0x57, 0x0f, 0x3c, 0xd9,
	0x2f, 0x76, 0xd0, 0xda, 0x98, 0x49, 0x85, 0xdb, 0xb0, 0xeb, 0xb2, 0x70, 0x45, 0x23, 0xdb, 0xa3,
	0x89, 0xcd, 0xe6, 0x66, 0xa5, 0x65, 0x74, 0x76, 0x26, 0xdb, 0x6b, 0xf1, 0x0d, 0x4d, 0x4e, 0xe7,
	0xf8, 0x11, 0x34, 0x19, 0x67, 0x8a, 0x11, 0x9f, 0x9d, 0xaf, 0xcf, 0xff, 0x48, 0x5d, 0x25, 0x22,
	0xb3, 0x9a, 0x7a, 0x1b, 0x45, 0x78, 0x96, 0x32, 0x7c, 0x1f, 0x76, 0xdd, 0x58, 0xae, 0xb4, 0xdb,
	0x49, 0x14, 0x95, 0xe6, 0x56, 0xcb, 0xe8, 0xd4, 0x26, 0x3b, 0x99, 0x38, 0xd0, 0x1a, 0x3e, 0x06,
	0x4c, 0x62, 0xb5, 0xa2, 0x5c, 0x31, 0x37, 0x9b, 0x8c, 0x2c, 0xcd, 0x5a, 0xda, 0x76, 0xaf, 0x48,
	0x66, 0x64, 0x39, 0xf0, 0x60, 0xdb, 0x15, 0xc1, 0xdf, 0x59, 0x07, 0x25, 0xa1, 0xe9, 0xb9, 0xd2,
	0xd0, 0xac, 0xe7, 0x4b, 0xa6, 0x56, 0xb1, 0xd3, 0xa5, 0x7c, 0xf9, 0x2f, 0x1c, 0x57, 0x04, 0xbd,
	0xec, 0xbb, 0xa7, 0x57, 0xf0, 0x58, 0xfa, 0xe9, 0x06, 0x6e, 0xac, 0xe3, 0x6f, 0xc3, 0xf8, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0x6d, 0x91, 0x25, 0xa5, 0x03, 0x00, 0x00,
}
