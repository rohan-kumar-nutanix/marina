// Code generated by protoc-gen-go. DO NOT EDIT.
// source: catalog/catalog_error.proto

package catalog

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CatalogError_Type int32

const (
	CatalogError_kNoError                     CatalogError_Type = 0
	CatalogError_kCanceled                    CatalogError_Type = 1
	CatalogError_kRetry                       CatalogError_Type = 2
	CatalogError_kTimeout                     CatalogError_Type = 3
	CatalogError_kUncaughtException           CatalogError_Type = 4
	CatalogError_kInvalidArgument             CatalogError_Type = 5
	CatalogError_kLogicalTimestampMismatch    CatalogError_Type = 6
	CatalogError_kNotFound                    CatalogError_Type = 7
	CatalogError_kNotMaster                   CatalogError_Type = 8
	CatalogError_kExists                      CatalogError_Type = 9
	CatalogError_kImportError                 CatalogError_Type = 10
	CatalogError_kImageRpcForwardError        CatalogError_Type = 11
	CatalogError_kCatalogUploadFailure        CatalogError_Type = 12
	CatalogError_kCatalogTaskForwardError     CatalogError_Type = 13
	CatalogError_kCatalogFileLockError        CatalogError_Type = 14
	CatalogError_kCatalogFileUnlockError      CatalogError_Type = 15
	CatalogError_kCatalogItemCheckoutError    CatalogError_Type = 16
	CatalogError_kCatalogItemMigrateError     CatalogError_Type = 17
	CatalogError_kCatalogUnregCleanupError    CatalogError_Type = 18
	CatalogError_kNotSupported                CatalogError_Type = 19
	CatalogError_kCasError                    CatalogError_Type = 20
	CatalogError_kInternal                    CatalogError_Type = 21
	CatalogError_kCatalogFileCheckoutError    CatalogError_Type = 22
	CatalogError_kCatalogRemoteSeedingError   CatalogError_Type = 23
	CatalogError_kCatalogPlacementPolicyError CatalogError_Type = 24
	CatalogError_kCatalogItemUncheckoutError  CatalogError_Type = 25
	CatalogError_kImageCheckoutError          CatalogError_Type = 26
	CatalogError_kCatalogItemRegUpdateError   CatalogError_Type = 27
	CatalogError_kCatalogRateLimitError       CatalogError_Type = 28
)

var CatalogError_Type_name = map[int32]string{
	0:  "kNoError",
	1:  "kCanceled",
	2:  "kRetry",
	3:  "kTimeout",
	4:  "kUncaughtException",
	5:  "kInvalidArgument",
	6:  "kLogicalTimestampMismatch",
	7:  "kNotFound",
	8:  "kNotMaster",
	9:  "kExists",
	10: "kImportError",
	11: "kImageRpcForwardError",
	12: "kCatalogUploadFailure",
	13: "kCatalogTaskForwardError",
	14: "kCatalogFileLockError",
	15: "kCatalogFileUnlockError",
	16: "kCatalogItemCheckoutError",
	17: "kCatalogItemMigrateError",
	18: "kCatalogUnregCleanupError",
	19: "kNotSupported",
	20: "kCasError",
	21: "kInternal",
	22: "kCatalogFileCheckoutError",
	23: "kCatalogRemoteSeedingError",
	24: "kCatalogPlacementPolicyError",
	25: "kCatalogItemUncheckoutError",
	26: "kImageCheckoutError",
	27: "kCatalogItemRegUpdateError",
	28: "kCatalogRateLimitError",
}

var CatalogError_Type_value = map[string]int32{
	"kNoError":                     0,
	"kCanceled":                    1,
	"kRetry":                       2,
	"kTimeout":                     3,
	"kUncaughtException":           4,
	"kInvalidArgument":             5,
	"kLogicalTimestampMismatch":    6,
	"kNotFound":                    7,
	"kNotMaster":                   8,
	"kExists":                      9,
	"kImportError":                 10,
	"kImageRpcForwardError":        11,
	"kCatalogUploadFailure":        12,
	"kCatalogTaskForwardError":     13,
	"kCatalogFileLockError":        14,
	"kCatalogFileUnlockError":      15,
	"kCatalogItemCheckoutError":    16,
	"kCatalogItemMigrateError":     17,
	"kCatalogUnregCleanupError":    18,
	"kNotSupported":                19,
	"kCasError":                    20,
	"kInternal":                    21,
	"kCatalogFileCheckoutError":    22,
	"kCatalogRemoteSeedingError":   23,
	"kCatalogPlacementPolicyError": 24,
	"kCatalogItemUncheckoutError":  25,
	"kImageCheckoutError":          26,
	"kCatalogItemRegUpdateError":   27,
	"kCatalogRateLimitError":       28,
}

func (x CatalogError_Type) Enum() *CatalogError_Type {
	p := new(CatalogError_Type)
	*p = x
	return p
}

func (x CatalogError_Type) String() string {
	return proto.EnumName(CatalogError_Type_name, int32(x))
}

func (x *CatalogError_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CatalogError_Type_value, data, "CatalogError_Type")
	if err != nil {
		return err
	}
	*x = CatalogError_Type(value)
	return nil
}

func (CatalogError_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ca683dc6500171dd, []int{0, 0}
}

type CatalogError struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CatalogError) Reset()         { *m = CatalogError{} }
func (m *CatalogError) String() string { return proto.CompactTextString(m) }
func (*CatalogError) ProtoMessage()    {}
func (*CatalogError) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca683dc6500171dd, []int{0}
}

func (m *CatalogError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogError.Unmarshal(m, b)
}
func (m *CatalogError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogError.Marshal(b, m, deterministic)
}
func (m *CatalogError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogError.Merge(m, src)
}
func (m *CatalogError) XXX_Size() int {
	return xxx_messageInfo_CatalogError.Size(m)
}
func (m *CatalogError) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogError.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogError proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("nutanix.catalog.CatalogError_Type", CatalogError_Type_name, CatalogError_Type_value)
	proto.RegisterType((*CatalogError)(nil), "nutanix.catalog.CatalogError")
}

func init() { proto.RegisterFile("catalog/catalog_error.proto", fileDescriptor_ca683dc6500171dd) }

var fileDescriptor_ca683dc6500171dd = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0xdb, 0x6e, 0xe2, 0x30,
	0x10, 0x86, 0xf7, 0x50, 0x4a, 0x3b, 0x85, 0xd6, 0x0c, 0x2d, 0x94, 0xc3, 0x1e, 0xd4, 0x07, 0x60,
	0xb5, 0x8f, 0xb0, 0x45, 0x20, 0x21, 0x41, 0x85, 0x28, 0xb9, 0xd9, 0x9b, 0x95, 0xe5, 0x8c, 0x82,
	0x65, 0xc7, 0x8e, 0x1c, 0x67, 0x17, 0xde, 0x6c, 0x5f, 0x61, 0xdf, 0x6a, 0x95, 0x03, 0x28, 0xf4,
	0x2a, 0x71, 0xbe, 0xf9, 0xfd, 0xff, 0x63, 0x4f, 0x60, 0x24, 0xb8, 0xe7, 0xda, 0x46, 0xdf, 0xaa,
	0xe7, 0x2f, 0x72, 0xce, 0xba, 0x49, 0xe2, 0xac, 0xb7, 0x78, 0x67, 0x32, 0xcf, 0x8d, 0xdc, 0x4f,
	0x2a, 0xf8, 0xf4, 0xaf, 0x01, 0xad, 0x69, 0xf9, 0x3e, 0xcb, 0xeb, 0x9e, 0xfe, 0x36, 0xe0, 0x62,
	0x7b, 0x48, 0x08, 0x5b, 0x70, 0xa5, 0x5e, 0x6c, 0xf1, 0x91, 0xbd, 0xc3, 0x36, 0x5c, 0xab, 0x29,
	0x37, 0x82, 0x34, 0x85, 0xec, 0x3d, 0x02, 0x5c, 0xaa, 0x0d, 0x79, 0x77, 0x60, 0x1f, 0x8a, 0xc2,
	0xad, 0x8c, 0xc9, 0x66, 0x9e, 0x7d, 0xc4, 0x1e, 0xa0, 0x0a, 0x8c, 0xe0, 0x59, 0xb4, 0xf3, 0xb3,
	0xbd, 0xa0, 0xc4, 0x4b, 0x6b, 0xd8, 0x05, 0xde, 0x03, 0x53, 0x0b, 0xf3, 0x9b, 0x6b, 0x19, 0xfe,
	0x70, 0x51, 0x16, 0x93, 0xf1, 0xac, 0x81, 0x9f, 0x60, 0xa0, 0x96, 0x36, 0x92, 0x82, 0xeb, 0x7c,
	0x8b, 0xd4, 0xf3, 0x38, 0x59, 0xc9, 0x34, 0xe6, 0x5e, 0xec, 0xd8, 0x65, 0xe1, 0xfa, 0x62, 0xfd,
	0xdc, 0x66, 0x26, 0x64, 0x4d, 0xbc, 0x05, 0xc8, 0x97, 0x2b, 0x9e, 0x7a, 0x72, 0xec, 0x0a, 0x6f,
	0xa0, 0xa9, 0x66, 0x7b, 0x99, 0xfa, 0x94, 0x5d, 0x23, 0x83, 0x96, 0x5a, 0xc4, 0x89, 0x75, 0xbe,
	0xcc, 0x0c, 0x38, 0x80, 0x07, 0xb5, 0x88, 0x79, 0x44, 0x9b, 0x44, 0xcc, 0xad, 0xfb, 0xc3, 0x5d,
	0x58, 0xa2, 0x9b, 0x02, 0x55, 0x6d, 0x07, 0x89, 0xb6, 0x3c, 0x9c, 0x73, 0xa9, 0x33, 0x47, 0xac,
	0x85, 0x63, 0x78, 0x3c, 0xa2, 0x2d, 0x4f, 0xd5, 0x99, 0xb0, 0x5d, 0x17, 0xce, 0xa5, 0xa6, 0xa5,
	0x15, 0xaa, 0x44, 0xb7, 0x38, 0x82, 0x7e, 0x1d, 0x05, 0x46, 0x9f, 0xe0, 0x5d, 0xd1, 0x68, 0x05,
	0x17, 0x9e, 0xe2, 0xe9, 0x8e, 0x84, 0xb2, 0x59, 0x15, 0x95, 0xd5, 0x4d, 0x73, 0xbc, 0x92, 0x91,
	0xe3, 0x9e, 0x4a, 0xda, 0xa9, 0x8b, 0x03, 0xe3, 0x28, 0x9a, 0x6a, 0xe2, 0x26, 0x4b, 0x4a, 0x8c,
	0xd8, 0x81, 0x76, 0x7e, 0x2c, 0xaf, 0x59, 0x92, 0x77, 0x4f, 0x21, 0xeb, 0x56, 0xd7, 0x95, 0x96,
	0x15, 0xf7, 0xc5, 0x72, 0x61, 0x3c, 0x39, 0xc3, 0x35, 0x7b, 0xa8, 0xef, 0x97, 0x27, 0x3d, 0x0f,
	0xd3, 0xc3, 0xcf, 0x30, 0x3c, 0xe2, 0x0d, 0xc5, 0xd6, 0xd3, 0x2b, 0x51, 0x28, 0x4d, 0x39, 0x20,
	0xac, 0x8f, 0x5f, 0x61, 0x7c, 0xe4, 0x6b, 0xcd, 0x05, 0xe5, 0x77, 0xb9, 0xb6, 0x5a, 0x8a, 0x43,
	0x59, 0xf1, 0x88, 0x5f, 0x60, 0x54, 0x6f, 0x27, 0x30, 0xe2, 0xcc, 0x62, 0x80, 0x7d, 0xe8, 0x96,
	0x57, 0x73, 0xee, 0x3d, 0xac, 0x7b, 0xe7, 0xca, 0x0d, 0x45, 0x41, 0x12, 0x9e, 0x8e, 0x62, 0x84,
	0x43, 0xe8, 0x9d, 0xb2, 0x71, 0x4f, 0x4b, 0x19, 0xcb, 0x4a, 0x3b, 0x7e, 0xfe, 0x0e, 0x5d, 0x61,
	0xe3, 0xc9, 0x9b, 0x11, 0x7f, 0xee, 0xd4, 0xe7, 0x7b, 0x9d, 0xff, 0x06, 0x3f, 0x9b, 0x15, 0xfb,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xdb, 0x77, 0x6a, 0x2d, 0x03, 0x00, 0x00,
}
