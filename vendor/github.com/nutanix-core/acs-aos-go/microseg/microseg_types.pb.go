// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microseg/microseg_types.proto

package microseg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	net "github.com/nutanix-core/acs-aos-go/nutanix/util-slbufs/util/sl_bufs/net"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetworkSecurityRuleType int32

const (
	// App rule.
	NetworkSecurityRuleType_kApp NetworkSecurityRuleType = 1
	// Rule for isolating environments.
	NetworkSecurityRuleType_kIsolation NetworkSecurityRuleType = 2
	// Rule for quarantining workloads.
	NetworkSecurityRuleType_kQuarantine NetworkSecurityRuleType = 3
	// AD rule.
	NetworkSecurityRuleType_kAd NetworkSecurityRuleType = 4
)

var NetworkSecurityRuleType_name = map[int32]string{
	1: "kApp",
	2: "kIsolation",
	3: "kQuarantine",
	4: "kAd",
}

var NetworkSecurityRuleType_value = map[string]int32{
	"kApp":        1,
	"kIsolation":  2,
	"kQuarantine": 3,
	"kAd":         4,
}

func (x NetworkSecurityRuleType) Enum() *NetworkSecurityRuleType {
	p := new(NetworkSecurityRuleType)
	*p = x
	return p
}

func (x NetworkSecurityRuleType) String() string {
	return proto.EnumName(NetworkSecurityRuleType_name, int32(x))
}

func (x *NetworkSecurityRuleType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleType_value, data, "NetworkSecurityRuleType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleType(value)
	return nil
}

func (NetworkSecurityRuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{0}
}

// Mode of deploying the rule.
type NetworkSecurityRuleMode int32

const (
	NetworkSecurityRuleMode_kMonitor NetworkSecurityRuleMode = 1
	NetworkSecurityRuleMode_kApply   NetworkSecurityRuleMode = 2
)

var NetworkSecurityRuleMode_name = map[int32]string{
	1: "kMonitor",
	2: "kApply",
}

var NetworkSecurityRuleMode_value = map[string]int32{
	"kMonitor": 1,
	"kApply":   2,
}

func (x NetworkSecurityRuleMode) Enum() *NetworkSecurityRuleMode {
	p := new(NetworkSecurityRuleMode)
	*p = x
	return p
}

func (x NetworkSecurityRuleMode) String() string {
	return proto.EnumName(NetworkSecurityRuleMode_name, int32(x))
}

func (x *NetworkSecurityRuleMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleMode_value, data, "NetworkSecurityRuleMode")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleMode(value)
	return nil
}

func (NetworkSecurityRuleMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{1}
}

// Type of inbound/outbound.
type NetworkSecurityRuleInboundOutboundType int32

const (
	NetworkSecurityRuleInboundOutboundType_kTypeAll      NetworkSecurityRuleInboundOutboundType = 1
	NetworkSecurityRuleInboundOutboundType_kTypeFilter   NetworkSecurityRuleInboundOutboundType = 2
	NetworkSecurityRuleInboundOutboundType_kTypeIPSubnet NetworkSecurityRuleInboundOutboundType = 3
	NetworkSecurityRuleInboundOutboundType_kTypeNone     NetworkSecurityRuleInboundOutboundType = 4
)

var NetworkSecurityRuleInboundOutboundType_name = map[int32]string{
	1: "kTypeAll",
	2: "kTypeFilter",
	3: "kTypeIPSubnet",
	4: "kTypeNone",
}

var NetworkSecurityRuleInboundOutboundType_value = map[string]int32{
	"kTypeAll":      1,
	"kTypeFilter":   2,
	"kTypeIPSubnet": 3,
	"kTypeNone":     4,
}

func (x NetworkSecurityRuleInboundOutboundType) Enum() *NetworkSecurityRuleInboundOutboundType {
	p := new(NetworkSecurityRuleInboundOutboundType)
	*p = x
	return p
}

func (x NetworkSecurityRuleInboundOutboundType) String() string {
	return proto.EnumName(NetworkSecurityRuleInboundOutboundType_name, int32(x))
}

func (x *NetworkSecurityRuleInboundOutboundType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleInboundOutboundType_value, data, "NetworkSecurityRuleInboundOutboundType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleInboundOutboundType(value)
	return nil
}

func (NetworkSecurityRuleInboundOutboundType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{2}
}

// Inbound/outbound protocol.
type NetworkSecurityRuleInboundOutboundProtocol int32

const (
	NetworkSecurityRuleInboundOutboundProtocol_kAll  NetworkSecurityRuleInboundOutboundProtocol = 1
	NetworkSecurityRuleInboundOutboundProtocol_kICMP NetworkSecurityRuleInboundOutboundProtocol = 2
	NetworkSecurityRuleInboundOutboundProtocol_kTCP  NetworkSecurityRuleInboundOutboundProtocol = 3
	NetworkSecurityRuleInboundOutboundProtocol_kUDP  NetworkSecurityRuleInboundOutboundProtocol = 4
	NetworkSecurityRuleInboundOutboundProtocol_kNone NetworkSecurityRuleInboundOutboundProtocol = 5
)

var NetworkSecurityRuleInboundOutboundProtocol_name = map[int32]string{
	1: "kAll",
	2: "kICMP",
	3: "kTCP",
	4: "kUDP",
	5: "kNone",
}

var NetworkSecurityRuleInboundOutboundProtocol_value = map[string]int32{
	"kAll":  1,
	"kICMP": 2,
	"kTCP":  3,
	"kUDP":  4,
	"kNone": 5,
}

func (x NetworkSecurityRuleInboundOutboundProtocol) Enum() *NetworkSecurityRuleInboundOutboundProtocol {
	p := new(NetworkSecurityRuleInboundOutboundProtocol)
	*p = x
	return p
}

func (x NetworkSecurityRuleInboundOutboundProtocol) String() string {
	return proto.EnumName(NetworkSecurityRuleInboundOutboundProtocol_name, int32(x))
}

func (x *NetworkSecurityRuleInboundOutboundProtocol) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleInboundOutboundProtocol_value, data, "NetworkSecurityRuleInboundOutboundProtocol")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleInboundOutboundProtocol(value)
	return nil
}

func (NetworkSecurityRuleInboundOutboundProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{3}
}

// Type of the target group.
type NetworkSecurityRuleTargetGroupType int32

const (
	NetworkSecurityRuleTargetGroupType_kDeploymentReference NetworkSecurityRuleTargetGroupType = 1
	NetworkSecurityRuleTargetGroupType_kFilter              NetworkSecurityRuleTargetGroupType = 2
)

var NetworkSecurityRuleTargetGroupType_name = map[int32]string{
	1: "kDeploymentReference",
	2: "kFilter",
}

var NetworkSecurityRuleTargetGroupType_value = map[string]int32{
	"kDeploymentReference": 1,
	"kFilter":              2,
}

func (x NetworkSecurityRuleTargetGroupType) Enum() *NetworkSecurityRuleTargetGroupType {
	p := new(NetworkSecurityRuleTargetGroupType)
	*p = x
	return p
}

func (x NetworkSecurityRuleTargetGroupType) String() string {
	return proto.EnumName(NetworkSecurityRuleTargetGroupType_name, int32(x))
}

func (x *NetworkSecurityRuleTargetGroupType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleTargetGroupType_value, data, "NetworkSecurityRuleTargetGroupType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleTargetGroupType(value)
	return nil
}

func (NetworkSecurityRuleTargetGroupType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{4}
}

// Communication policy within the target group.
type NetworkSecurityRuleTargetGroupDefaultInternal int32

const (
	NetworkSecurityRuleTargetGroupDefaultInternal_kAllowAll NetworkSecurityRuleTargetGroupDefaultInternal = 1
	NetworkSecurityRuleTargetGroupDefaultInternal_kDenyAll  NetworkSecurityRuleTargetGroupDefaultInternal = 2
)

var NetworkSecurityRuleTargetGroupDefaultInternal_name = map[int32]string{
	1: "kAllowAll",
	2: "kDenyAll",
}

var NetworkSecurityRuleTargetGroupDefaultInternal_value = map[string]int32{
	"kAllowAll": 1,
	"kDenyAll":  2,
}

func (x NetworkSecurityRuleTargetGroupDefaultInternal) Enum() *NetworkSecurityRuleTargetGroupDefaultInternal {
	p := new(NetworkSecurityRuleTargetGroupDefaultInternal)
	*p = x
	return p
}

func (x NetworkSecurityRuleTargetGroupDefaultInternal) String() string {
	return proto.EnumName(NetworkSecurityRuleTargetGroupDefaultInternal_name, int32(x))
}

func (x *NetworkSecurityRuleTargetGroupDefaultInternal) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleTargetGroupDefaultInternal_value, data, "NetworkSecurityRuleTargetGroupDefaultInternal")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleTargetGroupDefaultInternal(value)
	return nil
}

func (NetworkSecurityRuleTargetGroupDefaultInternal) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{5}
}

// Type of the update request.
type NetworkSecurityRuleUpdateRequestType int32

const (
	NetworkSecurityRuleUpdateRequestType_kRuleUpdate      NetworkSecurityRuleUpdateRequestType = 1
	NetworkSecurityRuleUpdateRequestType_kReconcileUpdate NetworkSecurityRuleUpdateRequestType = 2
)

var NetworkSecurityRuleUpdateRequestType_name = map[int32]string{
	1: "kRuleUpdate",
	2: "kReconcileUpdate",
}

var NetworkSecurityRuleUpdateRequestType_value = map[string]int32{
	"kRuleUpdate":      1,
	"kReconcileUpdate": 2,
}

func (x NetworkSecurityRuleUpdateRequestType) Enum() *NetworkSecurityRuleUpdateRequestType {
	p := new(NetworkSecurityRuleUpdateRequestType)
	*p = x
	return p
}

func (x NetworkSecurityRuleUpdateRequestType) String() string {
	return proto.EnumName(NetworkSecurityRuleUpdateRequestType_name, int32(x))
}

func (x *NetworkSecurityRuleUpdateRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRuleUpdateRequestType_value, data, "NetworkSecurityRuleUpdateRequestType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRuleUpdateRequestType(value)
	return nil
}

func (NetworkSecurityRuleUpdateRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{6}
}

// Entities associated with the task.
type Task_Entity int32

const (
	Task_kNetworkSecurityRule Task_Entity = 1
)

var Task_Entity_name = map[int32]string{
	1: "kNetworkSecurityRule",
}

var Task_Entity_value = map[string]int32{
	"kNetworkSecurityRule": 1,
}

func (x Task_Entity) Enum() *Task_Entity {
	p := new(Task_Entity)
	*p = x
	return p
}

func (x Task_Entity) String() string {
	return proto.EnumName(Task_Entity_name, int32(x))
}

func (x *Task_Entity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Task_Entity_value, data, "Task_Entity")
	if err != nil {
		return err
	}
	*x = Task_Entity(value)
	return nil
}

func (Task_Entity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{12, 0}
}

// Type of operation
type Task_OperationType int32

const (
	Task_kNetworkSecurityRuleCreate Task_OperationType = 1
	Task_kNetworkSecurityRuleUpdate Task_OperationType = 2
	Task_kNetworkSecurityRuleDelete Task_OperationType = 3
	Task_kNetworkSecurityRuleImport Task_OperationType = 4
)

var Task_OperationType_name = map[int32]string{
	1: "kNetworkSecurityRuleCreate",
	2: "kNetworkSecurityRuleUpdate",
	3: "kNetworkSecurityRuleDelete",
	4: "kNetworkSecurityRuleImport",
}

var Task_OperationType_value = map[string]int32{
	"kNetworkSecurityRuleCreate": 1,
	"kNetworkSecurityRuleUpdate": 2,
	"kNetworkSecurityRuleDelete": 3,
	"kNetworkSecurityRuleImport": 4,
}

func (x Task_OperationType) Enum() *Task_OperationType {
	p := new(Task_OperationType)
	*p = x
	return p
}

func (x Task_OperationType) String() string {
	return proto.EnumName(Task_OperationType_name, int32(x))
}

func (x *Task_OperationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Task_OperationType_value, data, "Task_OperationType")
	if err != nil {
		return err
	}
	*x = Task_OperationType(value)
	return nil
}

func (Task_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{12, 1}
}

// Current status of this task.
type Task_Status int32

const (
	Task_kQueued    Task_Status = 1
	Task_kRunning   Task_Status = 2
	Task_kSucceeded Task_Status = 3
	Task_kAborted   Task_Status = 4
	Task_kFailed    Task_Status = 5
)

var Task_Status_name = map[int32]string{
	1: "kQueued",
	2: "kRunning",
	3: "kSucceeded",
	4: "kAborted",
	5: "kFailed",
}

var Task_Status_value = map[string]int32{
	"kQueued":    1,
	"kRunning":   2,
	"kSucceeded": 3,
	"kAborted":   4,
	"kFailed":    5,
}

func (x Task_Status) Enum() *Task_Status {
	p := new(Task_Status)
	*p = x
	return p
}

func (x Task_Status) String() string {
	return proto.EnumName(Task_Status_name, int32(x))
}

func (x *Task_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Task_Status_value, data, "Task_Status")
	if err != nil {
		return err
	}
	*x = Task_Status(value)
	return nil
}

func (Task_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{12, 2}
}

type Task_Capability int32

const (
	// This task can be suspended and then subsequently resumed.
	Task_kTaskSuspend Task_Capability = 1
	// This task can be canceled/aborted.
	Task_kTaskCancel Task_Capability = 2
)

var Task_Capability_name = map[int32]string{
	1: "kTaskSuspend",
	2: "kTaskCancel",
}

var Task_Capability_value = map[string]int32{
	"kTaskSuspend": 1,
	"kTaskCancel":  2,
}

func (x Task_Capability) Enum() *Task_Capability {
	p := new(Task_Capability)
	*p = x
	return p
}

func (x Task_Capability) String() string {
	return proto.EnumName(Task_Capability_name, int32(x))
}

func (x *Task_Capability) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Task_Capability_value, data, "Task_Capability")
	if err != nil {
		return err
	}
	*x = Task_Capability(value)
	return nil
}

func (Task_Capability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{12, 3}
}

type NetworkSecurityRulesExportData_ExportFormatVersion int32

const (
	// Versions are ideally monotonically increasing. The gap in values is
	// kept if there is a need to put in a version in between.
	// Note that versions should *only* be bumped for semantically backward
	// incompatible changes, for example the addition of a feature that
	// cannot be supported via graceful degradation.
	NetworkSecurityRulesExportData_kVersion_First  NetworkSecurityRulesExportData_ExportFormatVersion = 10
	NetworkSecurityRulesExportData_kVersion_Second NetworkSecurityRulesExportData_ExportFormatVersion = 20
	// The third version with service groups.
	NetworkSecurityRulesExportData_kVersion_Third NetworkSecurityRulesExportData_ExportFormatVersion = 30
	// The fourth version with address groups.
	NetworkSecurityRulesExportData_kVersion_Fourth NetworkSecurityRulesExportData_ExportFormatVersion = 40
	// The fifth version w/ Default AD rule.
	NetworkSecurityRulesExportData_kVersion_Fifth NetworkSecurityRulesExportData_ExportFormatVersion = 50
)

var NetworkSecurityRulesExportData_ExportFormatVersion_name = map[int32]string{
	10: "kVersion_First",
	20: "kVersion_Second",
	30: "kVersion_Third",
	40: "kVersion_Fourth",
	50: "kVersion_Fifth",
}

var NetworkSecurityRulesExportData_ExportFormatVersion_value = map[string]int32{
	"kVersion_First":  10,
	"kVersion_Second": 20,
	"kVersion_Third":  30,
	"kVersion_Fourth": 40,
	"kVersion_Fifth":  50,
}

func (x NetworkSecurityRulesExportData_ExportFormatVersion) Enum() *NetworkSecurityRulesExportData_ExportFormatVersion {
	p := new(NetworkSecurityRulesExportData_ExportFormatVersion)
	*p = x
	return p
}

func (x NetworkSecurityRulesExportData_ExportFormatVersion) String() string {
	return proto.EnumName(NetworkSecurityRulesExportData_ExportFormatVersion_name, int32(x))
}

func (x *NetworkSecurityRulesExportData_ExportFormatVersion) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRulesExportData_ExportFormatVersion_value, data, "NetworkSecurityRulesExportData_ExportFormatVersion")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRulesExportData_ExportFormatVersion(value)
	return nil
}

func (NetworkSecurityRulesExportData_ExportFormatVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{13, 0}
}

type NetworkSecurityRulesDiff_Entity_EntityType int32

const (
	NetworkSecurityRulesDiff_Entity_kCATEGORY               NetworkSecurityRulesDiff_Entity_EntityType = 1
	NetworkSecurityRulesDiff_Entity_kNETWORK_FUNCTION_CHAIN NetworkSecurityRulesDiff_Entity_EntityType = 2
	NetworkSecurityRulesDiff_Entity_kPOLICY                 NetworkSecurityRulesDiff_Entity_EntityType = 3
	NetworkSecurityRulesDiff_Entity_kSERVICEGROUP           NetworkSecurityRulesDiff_Entity_EntityType = 4
	NetworkSecurityRulesDiff_Entity_kADDRESSGROUP           NetworkSecurityRulesDiff_Entity_EntityType = 5
)

var NetworkSecurityRulesDiff_Entity_EntityType_name = map[int32]string{
	1: "kCATEGORY",
	2: "kNETWORK_FUNCTION_CHAIN",
	3: "kPOLICY",
	4: "kSERVICEGROUP",
	5: "kADDRESSGROUP",
}

var NetworkSecurityRulesDiff_Entity_EntityType_value = map[string]int32{
	"kCATEGORY":               1,
	"kNETWORK_FUNCTION_CHAIN": 2,
	"kPOLICY":                 3,
	"kSERVICEGROUP":           4,
	"kADDRESSGROUP":           5,
}

func (x NetworkSecurityRulesDiff_Entity_EntityType) Enum() *NetworkSecurityRulesDiff_Entity_EntityType {
	p := new(NetworkSecurityRulesDiff_Entity_EntityType)
	*p = x
	return p
}

func (x NetworkSecurityRulesDiff_Entity_EntityType) String() string {
	return proto.EnumName(NetworkSecurityRulesDiff_Entity_EntityType_name, int32(x))
}

func (x *NetworkSecurityRulesDiff_Entity_EntityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRulesDiff_Entity_EntityType_value, data, "NetworkSecurityRulesDiff_Entity_EntityType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRulesDiff_Entity_EntityType(value)
	return nil
}

func (NetworkSecurityRulesDiff_Entity_EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{15, 0, 0}
}

type NetworkSecurityRulesDiff_Entity_EntityUpdateType int32

const (
	NetworkSecurityRulesDiff_Entity_kADDED    NetworkSecurityRulesDiff_Entity_EntityUpdateType = 1
	NetworkSecurityRulesDiff_Entity_kDELETED  NetworkSecurityRulesDiff_Entity_EntityUpdateType = 2
	NetworkSecurityRulesDiff_Entity_kMODIFIED NetworkSecurityRulesDiff_Entity_EntityUpdateType = 3
)

var NetworkSecurityRulesDiff_Entity_EntityUpdateType_name = map[int32]string{
	1: "kADDED",
	2: "kDELETED",
	3: "kMODIFIED",
}

var NetworkSecurityRulesDiff_Entity_EntityUpdateType_value = map[string]int32{
	"kADDED":    1,
	"kDELETED":  2,
	"kMODIFIED": 3,
}

func (x NetworkSecurityRulesDiff_Entity_EntityUpdateType) Enum() *NetworkSecurityRulesDiff_Entity_EntityUpdateType {
	p := new(NetworkSecurityRulesDiff_Entity_EntityUpdateType)
	*p = x
	return p
}

func (x NetworkSecurityRulesDiff_Entity_EntityUpdateType) String() string {
	return proto.EnumName(NetworkSecurityRulesDiff_Entity_EntityUpdateType_name, int32(x))
}

func (x *NetworkSecurityRulesDiff_Entity_EntityUpdateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRulesDiff_Entity_EntityUpdateType_value, data, "NetworkSecurityRulesDiff_Entity_EntityUpdateType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRulesDiff_Entity_EntityUpdateType(value)
	return nil
}

func (NetworkSecurityRulesDiff_Entity_EntityUpdateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{15, 0, 1}
}

type NetworkSecurityRuleInfo struct {
	// Network Security Rule UUID.
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// Network Security Rule name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Annotation describing the network security rule.
	Annotation *string `protobuf:"bytes,3,opt,name=annotation" json:"annotation,omitempty"`
	// Network Security Rule type.
	RuleType *NetworkSecurityRuleType `protobuf:"varint,4,opt,name=rule_type,json=ruleType,enum=nutanix.microseg.NetworkSecurityRuleType" json:"rule_type,omitempty"`
	// The logical timestamp of the network security rule.
	LogicalTimestamp *int64 `protobuf:"varint,5,opt,name=logical_timestamp,json=logicalTimestamp" json:"logical_timestamp,omitempty"`
	// Mode of deploying the rule.
	Mode *NetworkSecurityRuleMode `protobuf:"varint,6,opt,name=mode,enum=nutanix.microseg.NetworkSecurityRuleMode,def=2" json:"mode,omitempty"`
	// Policy filter uuid used to store mapping from all categories that appear
	// in this rule with this rule's uuid.
	PolicyFilterUuid *string `protobuf:"bytes,7,opt,name=policy_filter_uuid,json=policyFilterUuid" json:"policy_filter_uuid,omitempty"`
	// Unique ID for the rule.
	RuleComponentId *uint32 `protobuf:"varint,8,opt,name=rule_component_id,json=ruleComponentId" json:"rule_component_id,omitempty"`
	// Unique ID for the rule used for specific types of rules, ex: isolation.
	RuleComponentId2 *uint32 `protobuf:"varint,9,opt,name=rule_component_id2,json=ruleComponentId2" json:"rule_component_id2,omitempty"`
	// The network security rule.
	Rule *NetworkSecurityRule `protobuf:"bytes,10,opt,name=rule" json:"rule,omitempty"`
	// Flag to enable policy-hit logging.
	IsPolicyHitlogEnabled *bool `protobuf:"varint,11,opt,name=is_policy_hitlog_enabled,json=isPolicyHitlogEnabled,def=0" json:"is_policy_hitlog_enabled,omitempty"`
	// Flag to allow or drop IPV6 traffic.
	AllowIpv6Traffic *bool `protobuf:"varint,12,opt,name=allow_ipv6_traffic,json=allowIpv6Traffic,def=0" json:"allow_ipv6_traffic,omitempty"`
	// Hash value of the network security rule.
	RuleHashValue *string `protobuf:"bytes,15,opt,name=rule_hash_value,json=ruleHashValue" json:"rule_hash_value,omitempty"`
	// List of service group uuids that are associated with this policy.
	ServiceGroupUuidList []string `protobuf:"bytes,13,rep,name=service_group_uuid_list,json=serviceGroupUuidList" json:"service_group_uuid_list,omitempty"`
	// List of address group uuids that are associated with this policy.
	AddressGroupUuidList []string `protobuf:"bytes,14,rep,name=address_group_uuid_list,json=addressGroupUuidList" json:"address_group_uuid_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleInfo) Reset()         { *m = NetworkSecurityRuleInfo{} }
func (m *NetworkSecurityRuleInfo) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleInfo) ProtoMessage()    {}
func (*NetworkSecurityRuleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{0}
}

func (m *NetworkSecurityRuleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleInfo.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleInfo.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleInfo.Merge(m, src)
}
func (m *NetworkSecurityRuleInfo) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleInfo.Size(m)
}
func (m *NetworkSecurityRuleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleInfo proto.InternalMessageInfo

const Default_NetworkSecurityRuleInfo_Mode NetworkSecurityRuleMode = NetworkSecurityRuleMode_kApply
const Default_NetworkSecurityRuleInfo_IsPolicyHitlogEnabled bool = false
const Default_NetworkSecurityRuleInfo_AllowIpv6Traffic bool = false

func (m *NetworkSecurityRuleInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *NetworkSecurityRuleInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkSecurityRuleInfo) GetAnnotation() string {
	if m != nil && m.Annotation != nil {
		return *m.Annotation
	}
	return ""
}

func (m *NetworkSecurityRuleInfo) GetRuleType() NetworkSecurityRuleType {
	if m != nil && m.RuleType != nil {
		return *m.RuleType
	}
	return NetworkSecurityRuleType_kApp
}

func (m *NetworkSecurityRuleInfo) GetLogicalTimestamp() int64 {
	if m != nil && m.LogicalTimestamp != nil {
		return *m.LogicalTimestamp
	}
	return 0
}

func (m *NetworkSecurityRuleInfo) GetMode() NetworkSecurityRuleMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_NetworkSecurityRuleInfo_Mode
}

func (m *NetworkSecurityRuleInfo) GetPolicyFilterUuid() string {
	if m != nil && m.PolicyFilterUuid != nil {
		return *m.PolicyFilterUuid
	}
	return ""
}

func (m *NetworkSecurityRuleInfo) GetRuleComponentId() uint32 {
	if m != nil && m.RuleComponentId != nil {
		return *m.RuleComponentId
	}
	return 0
}

func (m *NetworkSecurityRuleInfo) GetRuleComponentId2() uint32 {
	if m != nil && m.RuleComponentId2 != nil {
		return *m.RuleComponentId2
	}
	return 0
}

func (m *NetworkSecurityRuleInfo) GetRule() *NetworkSecurityRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *NetworkSecurityRuleInfo) GetIsPolicyHitlogEnabled() bool {
	if m != nil && m.IsPolicyHitlogEnabled != nil {
		return *m.IsPolicyHitlogEnabled
	}
	return Default_NetworkSecurityRuleInfo_IsPolicyHitlogEnabled
}

func (m *NetworkSecurityRuleInfo) GetAllowIpv6Traffic() bool {
	if m != nil && m.AllowIpv6Traffic != nil {
		return *m.AllowIpv6Traffic
	}
	return Default_NetworkSecurityRuleInfo_AllowIpv6Traffic
}

func (m *NetworkSecurityRuleInfo) GetRuleHashValue() string {
	if m != nil && m.RuleHashValue != nil {
		return *m.RuleHashValue
	}
	return ""
}

func (m *NetworkSecurityRuleInfo) GetServiceGroupUuidList() []string {
	if m != nil {
		return m.ServiceGroupUuidList
	}
	return nil
}

func (m *NetworkSecurityRuleInfo) GetAddressGroupUuidList() []string {
	if m != nil {
		return m.AddressGroupUuidList
	}
	return nil
}

type NetworkSecurityRuleCreateSpec struct {
	// Network Security Rule UUID for idempotence.
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// Network Security Rule name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Annotation describing the network security rule.
	Annotation *string `protobuf:"bytes,3,opt,name=annotation" json:"annotation,omitempty"`
	// Network Security Rule type.
	RuleType *NetworkSecurityRuleType `protobuf:"varint,4,opt,name=rule_type,json=ruleType,enum=nutanix.microseg.NetworkSecurityRuleType" json:"rule_type,omitempty"`
	// Mode of deploying the rule.
	Mode *NetworkSecurityRuleMode `protobuf:"varint,5,opt,name=mode,enum=nutanix.microseg.NetworkSecurityRuleMode,def=2" json:"mode,omitempty"`
	// Policy filter uuid used to store mapping from all categories that appear
	// in this rule with this rule's uuid.
	PolicyFilterUuid *string `protobuf:"bytes,6,opt,name=policy_filter_uuid,json=policyFilterUuid" json:"policy_filter_uuid,omitempty"`
	// Unique ID for the rule.
	RuleComponentId *int32 `protobuf:"varint,7,opt,name=rule_component_id,json=ruleComponentId" json:"rule_component_id,omitempty"`
	// Unique ID for the rule used for specific types of rules, ex: isolation.
	RuleComponentId2 *uint32 `protobuf:"varint,8,opt,name=rule_component_id2,json=ruleComponentId2" json:"rule_component_id2,omitempty"`
	// The network security rule.
	Rule *NetworkSecurityRule `protobuf:"bytes,9,opt,name=rule" json:"rule,omitempty"`
	// Flag to enable policy-hit logging.
	IsPolicyHitlogEnabled *bool `protobuf:"varint,10,opt,name=is_policy_hitlog_enabled,json=isPolicyHitlogEnabled,def=0" json:"is_policy_hitlog_enabled,omitempty"`
	// Flag to allow or drop IPV6 traffic.
	AllowIpv6Traffic *bool `protobuf:"varint,11,opt,name=allow_ipv6_traffic,json=allowIpv6Traffic,def=0" json:"allow_ipv6_traffic,omitempty"`
	// Hash value of the network security rule.
	RuleHashValue        *string  `protobuf:"bytes,12,opt,name=rule_hash_value,json=ruleHashValue" json:"rule_hash_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleCreateSpec) Reset()         { *m = NetworkSecurityRuleCreateSpec{} }
func (m *NetworkSecurityRuleCreateSpec) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleCreateSpec) ProtoMessage()    {}
func (*NetworkSecurityRuleCreateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{1}
}

func (m *NetworkSecurityRuleCreateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleCreateSpec.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleCreateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleCreateSpec.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleCreateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleCreateSpec.Merge(m, src)
}
func (m *NetworkSecurityRuleCreateSpec) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleCreateSpec.Size(m)
}
func (m *NetworkSecurityRuleCreateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleCreateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleCreateSpec proto.InternalMessageInfo

const Default_NetworkSecurityRuleCreateSpec_Mode NetworkSecurityRuleMode = NetworkSecurityRuleMode_kApply
const Default_NetworkSecurityRuleCreateSpec_IsPolicyHitlogEnabled bool = false
const Default_NetworkSecurityRuleCreateSpec_AllowIpv6Traffic bool = false

func (m *NetworkSecurityRuleCreateSpec) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *NetworkSecurityRuleCreateSpec) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkSecurityRuleCreateSpec) GetAnnotation() string {
	if m != nil && m.Annotation != nil {
		return *m.Annotation
	}
	return ""
}

func (m *NetworkSecurityRuleCreateSpec) GetRuleType() NetworkSecurityRuleType {
	if m != nil && m.RuleType != nil {
		return *m.RuleType
	}
	return NetworkSecurityRuleType_kApp
}

func (m *NetworkSecurityRuleCreateSpec) GetMode() NetworkSecurityRuleMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_NetworkSecurityRuleCreateSpec_Mode
}

func (m *NetworkSecurityRuleCreateSpec) GetPolicyFilterUuid() string {
	if m != nil && m.PolicyFilterUuid != nil {
		return *m.PolicyFilterUuid
	}
	return ""
}

func (m *NetworkSecurityRuleCreateSpec) GetRuleComponentId() int32 {
	if m != nil && m.RuleComponentId != nil {
		return *m.RuleComponentId
	}
	return 0
}

func (m *NetworkSecurityRuleCreateSpec) GetRuleComponentId2() uint32 {
	if m != nil && m.RuleComponentId2 != nil {
		return *m.RuleComponentId2
	}
	return 0
}

func (m *NetworkSecurityRuleCreateSpec) GetRule() *NetworkSecurityRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *NetworkSecurityRuleCreateSpec) GetIsPolicyHitlogEnabled() bool {
	if m != nil && m.IsPolicyHitlogEnabled != nil {
		return *m.IsPolicyHitlogEnabled
	}
	return Default_NetworkSecurityRuleCreateSpec_IsPolicyHitlogEnabled
}

func (m *NetworkSecurityRuleCreateSpec) GetAllowIpv6Traffic() bool {
	if m != nil && m.AllowIpv6Traffic != nil {
		return *m.AllowIpv6Traffic
	}
	return Default_NetworkSecurityRuleCreateSpec_AllowIpv6Traffic
}

func (m *NetworkSecurityRuleCreateSpec) GetRuleHashValue() string {
	if m != nil && m.RuleHashValue != nil {
		return *m.RuleHashValue
	}
	return ""
}

type NetworkSecurityRuleUpdateSpec struct {
	// Network Security Rule UUID.
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// Network Security Rule name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Annotation describing the network security rule.
	Annotation *string `protobuf:"bytes,3,opt,name=annotation" json:"annotation,omitempty"`
	// Network Security Rule type.
	RuleType *NetworkSecurityRuleType `protobuf:"varint,4,opt,name=rule_type,json=ruleType,enum=nutanix.microseg.NetworkSecurityRuleType" json:"rule_type,omitempty"`
	// The logical timestamp of the network security rule.
	LogicalTimestamp *int64 `protobuf:"varint,5,opt,name=logical_timestamp,json=logicalTimestamp,def=-1" json:"logical_timestamp,omitempty"`
	// Mode of deploying the rule.
	Mode *NetworkSecurityRuleMode `protobuf:"varint,6,opt,name=mode,enum=nutanix.microseg.NetworkSecurityRuleMode,def=2" json:"mode,omitempty"`
	// Policy filter uuid used to store mapping from all categories that appear
	// in this rule with this rule's uuid.
	PolicyFilterUuid *string `protobuf:"bytes,7,opt,name=policy_filter_uuid,json=policyFilterUuid" json:"policy_filter_uuid,omitempty"`
	// Unique ID for the rule.
	RuleComponentId *int32 `protobuf:"varint,8,opt,name=rule_component_id,json=ruleComponentId" json:"rule_component_id,omitempty"`
	// Unique ID for the rule used for specific types of rules, ex: isolation.
	RuleComponentId2 *uint32 `protobuf:"varint,9,opt,name=rule_component_id2,json=ruleComponentId2" json:"rule_component_id2,omitempty"`
	// The network security rule.
	Rule *NetworkSecurityRule `protobuf:"bytes,10,opt,name=rule" json:"rule,omitempty"`
	// Flag to enable policy-hit logging.
	IsPolicyHitlogEnabled *bool `protobuf:"varint,11,opt,name=is_policy_hitlog_enabled,json=isPolicyHitlogEnabled,def=0" json:"is_policy_hitlog_enabled,omitempty"`
	// Flag to allow or drop IPV6 traffic.
	AllowIpv6Traffic *bool `protobuf:"varint,12,opt,name=allow_ipv6_traffic,json=allowIpv6Traffic,def=0" json:"allow_ipv6_traffic,omitempty"`
	// Hash value of the network security rule.
	RuleHashValue        *string  `protobuf:"bytes,13,opt,name=rule_hash_value,json=ruleHashValue" json:"rule_hash_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleUpdateSpec) Reset()         { *m = NetworkSecurityRuleUpdateSpec{} }
func (m *NetworkSecurityRuleUpdateSpec) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleUpdateSpec) ProtoMessage()    {}
func (*NetworkSecurityRuleUpdateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{2}
}

func (m *NetworkSecurityRuleUpdateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleUpdateSpec.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleUpdateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleUpdateSpec.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleUpdateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleUpdateSpec.Merge(m, src)
}
func (m *NetworkSecurityRuleUpdateSpec) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleUpdateSpec.Size(m)
}
func (m *NetworkSecurityRuleUpdateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleUpdateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleUpdateSpec proto.InternalMessageInfo

const Default_NetworkSecurityRuleUpdateSpec_LogicalTimestamp int64 = -1
const Default_NetworkSecurityRuleUpdateSpec_Mode NetworkSecurityRuleMode = NetworkSecurityRuleMode_kApply
const Default_NetworkSecurityRuleUpdateSpec_IsPolicyHitlogEnabled bool = false
const Default_NetworkSecurityRuleUpdateSpec_AllowIpv6Traffic bool = false

func (m *NetworkSecurityRuleUpdateSpec) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *NetworkSecurityRuleUpdateSpec) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkSecurityRuleUpdateSpec) GetAnnotation() string {
	if m != nil && m.Annotation != nil {
		return *m.Annotation
	}
	return ""
}

func (m *NetworkSecurityRuleUpdateSpec) GetRuleType() NetworkSecurityRuleType {
	if m != nil && m.RuleType != nil {
		return *m.RuleType
	}
	return NetworkSecurityRuleType_kApp
}

func (m *NetworkSecurityRuleUpdateSpec) GetLogicalTimestamp() int64 {
	if m != nil && m.LogicalTimestamp != nil {
		return *m.LogicalTimestamp
	}
	return Default_NetworkSecurityRuleUpdateSpec_LogicalTimestamp
}

func (m *NetworkSecurityRuleUpdateSpec) GetMode() NetworkSecurityRuleMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_NetworkSecurityRuleUpdateSpec_Mode
}

func (m *NetworkSecurityRuleUpdateSpec) GetPolicyFilterUuid() string {
	if m != nil && m.PolicyFilterUuid != nil {
		return *m.PolicyFilterUuid
	}
	return ""
}

func (m *NetworkSecurityRuleUpdateSpec) GetRuleComponentId() int32 {
	if m != nil && m.RuleComponentId != nil {
		return *m.RuleComponentId
	}
	return 0
}

func (m *NetworkSecurityRuleUpdateSpec) GetRuleComponentId2() uint32 {
	if m != nil && m.RuleComponentId2 != nil {
		return *m.RuleComponentId2
	}
	return 0
}

func (m *NetworkSecurityRuleUpdateSpec) GetRule() *NetworkSecurityRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *NetworkSecurityRuleUpdateSpec) GetIsPolicyHitlogEnabled() bool {
	if m != nil && m.IsPolicyHitlogEnabled != nil {
		return *m.IsPolicyHitlogEnabled
	}
	return Default_NetworkSecurityRuleUpdateSpec_IsPolicyHitlogEnabled
}

func (m *NetworkSecurityRuleUpdateSpec) GetAllowIpv6Traffic() bool {
	if m != nil && m.AllowIpv6Traffic != nil {
		return *m.AllowIpv6Traffic
	}
	return Default_NetworkSecurityRuleUpdateSpec_AllowIpv6Traffic
}

func (m *NetworkSecurityRuleUpdateSpec) GetRuleHashValue() string {
	if m != nil && m.RuleHashValue != nil {
		return *m.RuleHashValue
	}
	return ""
}

// Inbound/outbound TCP/UDP port range.
type NetworkSecurityRuleInboundOutboundPortRange struct {
	// Port range start.
	StartPort *int32 `protobuf:"varint,1,opt,name=start_port,json=startPort" json:"start_port,omitempty"`
	// Port range end.
	EndPort              *int32   `protobuf:"varint,2,opt,name=end_port,json=endPort" json:"end_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleInboundOutboundPortRange) Reset() {
	*m = NetworkSecurityRuleInboundOutboundPortRange{}
}
func (m *NetworkSecurityRuleInboundOutboundPortRange) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkSecurityRuleInboundOutboundPortRange) ProtoMessage() {}
func (*NetworkSecurityRuleInboundOutboundPortRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{3}
}

func (m *NetworkSecurityRuleInboundOutboundPortRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutboundPortRange.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleInboundOutboundPortRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutboundPortRange.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleInboundOutboundPortRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleInboundOutboundPortRange.Merge(m, src)
}
func (m *NetworkSecurityRuleInboundOutboundPortRange) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutboundPortRange.Size(m)
}
func (m *NetworkSecurityRuleInboundOutboundPortRange) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleInboundOutboundPortRange.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleInboundOutboundPortRange proto.InternalMessageInfo

func (m *NetworkSecurityRuleInboundOutboundPortRange) GetStartPort() int32 {
	if m != nil && m.StartPort != nil {
		return *m.StartPort
	}
	return 0
}

func (m *NetworkSecurityRuleInboundOutboundPortRange) GetEndPort() int32 {
	if m != nil && m.EndPort != nil {
		return *m.EndPort
	}
	return 0
}

// Inbound/outbound ICMP type code.
type NetworkSecurityRuleInboundOutboundIcmpTypeCode struct {
	// ICMP type.
	IcmpType *int32 `protobuf:"varint,1,opt,name=icmp_type,json=icmpType" json:"icmp_type,omitempty"`
	// ICMP code.
	IcmpCode             *int32   `protobuf:"varint,2,opt,name=icmp_code,json=icmpCode" json:"icmp_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) Reset() {
	*m = NetworkSecurityRuleInboundOutboundIcmpTypeCode{}
}
func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkSecurityRuleInboundOutboundIcmpTypeCode) ProtoMessage() {}
func (*NetworkSecurityRuleInboundOutboundIcmpTypeCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{4}
}

func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutboundIcmpTypeCode.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutboundIcmpTypeCode.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleInboundOutboundIcmpTypeCode.Merge(m, src)
}
func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutboundIcmpTypeCode.Size(m)
}
func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleInboundOutboundIcmpTypeCode.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleInboundOutboundIcmpTypeCode proto.InternalMessageInfo

func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) GetIcmpType() int32 {
	if m != nil && m.IcmpType != nil {
		return *m.IcmpType
	}
	return 0
}

func (m *NetworkSecurityRuleInboundOutboundIcmpTypeCode) GetIcmpCode() int32 {
	if m != nil && m.IcmpCode != nil {
		return *m.IcmpCode
	}
	return 0
}

// Inbound/outbound.
type NetworkSecurityRuleInboundOutbound struct {
	// Inbound/outbound type.
	PeerSpecificationType *NetworkSecurityRuleInboundOutboundType `protobuf:"varint,1,opt,name=peer_specification_type,json=peerSpecificationType,enum=nutanix.microseg.NetworkSecurityRuleInboundOutboundType,def=4" json:"peer_specification_type,omitempty"`
	// Categories.
	CategoryUuidList []string `protobuf:"bytes,2,rep,name=category_uuid_list,json=categoryUuidList" json:"category_uuid_list,omitempty"`
	// IP subnet.
	IpSubnet *string `protobuf:"bytes,3,opt,name=ip_subnet,json=ipSubnet" json:"ip_subnet,omitempty"`
	// Protocol.
	Protocol *NetworkSecurityRuleInboundOutboundProtocol `protobuf:"varint,4,opt,name=protocol,enum=nutanix.microseg.NetworkSecurityRuleInboundOutboundProtocol,def=5" json:"protocol,omitempty"`
	// TCP port range.
	TcpPortRangeList []*NetworkSecurityRuleInboundOutboundPortRange `protobuf:"bytes,5,rep,name=tcp_port_range_list,json=tcpPortRangeList" json:"tcp_port_range_list,omitempty"`
	// UDP port range.
	UdpPortRangeList []*NetworkSecurityRuleInboundOutboundPortRange `protobuf:"bytes,6,rep,name=udp_port_range_list,json=udpPortRangeList" json:"udp_port_range_list,omitempty"`
	// ICMP type and code.
	IcmpTypeCodeList []*NetworkSecurityRuleInboundOutboundIcmpTypeCode `protobuf:"bytes,7,rep,name=icmp_type_code_list,json=icmpTypeCodeList" json:"icmp_type_code_list,omitempty"`
	// Network function chain.
	NetworkFunctionChainUuid *string `protobuf:"bytes,8,opt,name=network_function_chain_uuid,json=networkFunctionChainUuid" json:"network_function_chain_uuid,omitempty"`
	// Time allowed.
	ExpirationTimestamp *string `protobuf:"bytes,9,opt,name=expiration_timestamp,json=expirationTimestamp" json:"expiration_timestamp,omitempty"`
	// List of service group uuids that are associated with this policy.
	ServiceGroupUuidList []string `protobuf:"bytes,10,rep,name=service_group_uuid_list,json=serviceGroupUuidList" json:"service_group_uuid_list,omitempty"`
	// Description for this inbound/outbound
	Description *string `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	// List of address group uuids that are associated with this policy.
	AddressGroupUuidList []string `protobuf:"bytes,12,rep,name=address_group_uuid_list,json=addressGroupUuidList" json:"address_group_uuid_list,omitempty"`
	// Unique identifier for inbound/outbound
	// Valid value for rule_id: 4096 > rule_id > 0
	RuleId               *uint32  `protobuf:"varint,13,opt,name=rule_id,json=ruleId" json:"rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleInboundOutbound) Reset()         { *m = NetworkSecurityRuleInboundOutbound{} }
func (m *NetworkSecurityRuleInboundOutbound) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleInboundOutbound) ProtoMessage()    {}
func (*NetworkSecurityRuleInboundOutbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{5}
}

func (m *NetworkSecurityRuleInboundOutbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutbound.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleInboundOutbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutbound.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleInboundOutbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleInboundOutbound.Merge(m, src)
}
func (m *NetworkSecurityRuleInboundOutbound) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleInboundOutbound.Size(m)
}
func (m *NetworkSecurityRuleInboundOutbound) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleInboundOutbound.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleInboundOutbound proto.InternalMessageInfo

const Default_NetworkSecurityRuleInboundOutbound_PeerSpecificationType NetworkSecurityRuleInboundOutboundType = NetworkSecurityRuleInboundOutboundType_kTypeNone
const Default_NetworkSecurityRuleInboundOutbound_Protocol NetworkSecurityRuleInboundOutboundProtocol = NetworkSecurityRuleInboundOutboundProtocol_kNone

func (m *NetworkSecurityRuleInboundOutbound) GetPeerSpecificationType() NetworkSecurityRuleInboundOutboundType {
	if m != nil && m.PeerSpecificationType != nil {
		return *m.PeerSpecificationType
	}
	return Default_NetworkSecurityRuleInboundOutbound_PeerSpecificationType
}

func (m *NetworkSecurityRuleInboundOutbound) GetCategoryUuidList() []string {
	if m != nil {
		return m.CategoryUuidList
	}
	return nil
}

func (m *NetworkSecurityRuleInboundOutbound) GetIpSubnet() string {
	if m != nil && m.IpSubnet != nil {
		return *m.IpSubnet
	}
	return ""
}

func (m *NetworkSecurityRuleInboundOutbound) GetProtocol() NetworkSecurityRuleInboundOutboundProtocol {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return Default_NetworkSecurityRuleInboundOutbound_Protocol
}

func (m *NetworkSecurityRuleInboundOutbound) GetTcpPortRangeList() []*NetworkSecurityRuleInboundOutboundPortRange {
	if m != nil {
		return m.TcpPortRangeList
	}
	return nil
}

func (m *NetworkSecurityRuleInboundOutbound) GetUdpPortRangeList() []*NetworkSecurityRuleInboundOutboundPortRange {
	if m != nil {
		return m.UdpPortRangeList
	}
	return nil
}

func (m *NetworkSecurityRuleInboundOutbound) GetIcmpTypeCodeList() []*NetworkSecurityRuleInboundOutboundIcmpTypeCode {
	if m != nil {
		return m.IcmpTypeCodeList
	}
	return nil
}

func (m *NetworkSecurityRuleInboundOutbound) GetNetworkFunctionChainUuid() string {
	if m != nil && m.NetworkFunctionChainUuid != nil {
		return *m.NetworkFunctionChainUuid
	}
	return ""
}

func (m *NetworkSecurityRuleInboundOutbound) GetExpirationTimestamp() string {
	if m != nil && m.ExpirationTimestamp != nil {
		return *m.ExpirationTimestamp
	}
	return ""
}

func (m *NetworkSecurityRuleInboundOutbound) GetServiceGroupUuidList() []string {
	if m != nil {
		return m.ServiceGroupUuidList
	}
	return nil
}

func (m *NetworkSecurityRuleInboundOutbound) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *NetworkSecurityRuleInboundOutbound) GetAddressGroupUuidList() []string {
	if m != nil {
		return m.AddressGroupUuidList
	}
	return nil
}

func (m *NetworkSecurityRuleInboundOutbound) GetRuleId() uint32 {
	if m != nil && m.RuleId != nil {
		return *m.RuleId
	}
	return 0
}

// Target group.
type NetworkSecurityRuleTargetGroup struct {
	// Target group type.
	PeerSpecificationType *NetworkSecurityRuleTargetGroupType `protobuf:"varint,1,opt,name=peer_specification_type,json=peerSpecificationType,enum=nutanix.microseg.NetworkSecurityRuleTargetGroupType,def=2" json:"peer_specification_type,omitempty"`
	// Deployment reference.
	DeploymentReferenceUuid *string `protobuf:"bytes,2,opt,name=deployment_reference_uuid,json=deploymentReferenceUuid" json:"deployment_reference_uuid,omitempty"`
	// Categories.
	CategoryUuidList []string `protobuf:"bytes,3,rep,name=category_uuid_list,json=categoryUuidList" json:"category_uuid_list,omitempty"`
	// Default internal policy for communication within target group.
	DefaultInternal      *NetworkSecurityRuleTargetGroupDefaultInternal `protobuf:"varint,4,opt,name=default_internal,json=defaultInternal,enum=nutanix.microseg.NetworkSecurityRuleTargetGroupDefaultInternal,def=1" json:"default_internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *NetworkSecurityRuleTargetGroup) Reset()         { *m = NetworkSecurityRuleTargetGroup{} }
func (m *NetworkSecurityRuleTargetGroup) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleTargetGroup) ProtoMessage()    {}
func (*NetworkSecurityRuleTargetGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{6}
}

func (m *NetworkSecurityRuleTargetGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleTargetGroup.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleTargetGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleTargetGroup.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleTargetGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleTargetGroup.Merge(m, src)
}
func (m *NetworkSecurityRuleTargetGroup) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleTargetGroup.Size(m)
}
func (m *NetworkSecurityRuleTargetGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleTargetGroup.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleTargetGroup proto.InternalMessageInfo

const Default_NetworkSecurityRuleTargetGroup_PeerSpecificationType NetworkSecurityRuleTargetGroupType = NetworkSecurityRuleTargetGroupType_kFilter
const Default_NetworkSecurityRuleTargetGroup_DefaultInternal NetworkSecurityRuleTargetGroupDefaultInternal = NetworkSecurityRuleTargetGroupDefaultInternal_kAllowAll

func (m *NetworkSecurityRuleTargetGroup) GetPeerSpecificationType() NetworkSecurityRuleTargetGroupType {
	if m != nil && m.PeerSpecificationType != nil {
		return *m.PeerSpecificationType
	}
	return Default_NetworkSecurityRuleTargetGroup_PeerSpecificationType
}

func (m *NetworkSecurityRuleTargetGroup) GetDeploymentReferenceUuid() string {
	if m != nil && m.DeploymentReferenceUuid != nil {
		return *m.DeploymentReferenceUuid
	}
	return ""
}

func (m *NetworkSecurityRuleTargetGroup) GetCategoryUuidList() []string {
	if m != nil {
		return m.CategoryUuidList
	}
	return nil
}

func (m *NetworkSecurityRuleTargetGroup) GetDefaultInternal() NetworkSecurityRuleTargetGroupDefaultInternal {
	if m != nil && m.DefaultInternal != nil {
		return *m.DefaultInternal
	}
	return Default_NetworkSecurityRuleTargetGroup_DefaultInternal
}

type NetworkSecurityRule struct {
	// Target group, used in app, app-ref, quarantine rules.
	TargetGroup *NetworkSecurityRuleTargetGroup `protobuf:"bytes,1,opt,name=target_group,json=targetGroup" json:"target_group,omitempty"`
	// Inbound list, used in app, app-ref, quarantine rules.
	InboundList []*NetworkSecurityRuleInboundOutbound `protobuf:"bytes,2,rep,name=inbound_list,json=inboundList" json:"inbound_list,omitempty"`
	// Outbound list, used in app, app-ref, quarantine rules.
	OutboundList []*NetworkSecurityRuleInboundOutbound `protobuf:"bytes,3,rep,name=outbound_list,json=outboundList" json:"outbound_list,omitempty"`
	// First entity filter, used in isolation rules. This is a list of
	// categories that VMs need to have for matching first part of
	// an environment separation or isolation rule.
	FirstEntityFilterList []string `protobuf:"bytes,4,rep,name=first_entity_filter_list,json=firstEntityFilterList" json:"first_entity_filter_list,omitempty"`
	// Second entity filter, used in isolation rules. This is a list of
	// categories that VMs need to have for matching second part of
	// an environment separation or isolation rule.
	SecondEntityFilterList []string `protobuf:"bytes,5,rep,name=second_entity_filter_list,json=secondEntityFilterList" json:"second_entity_filter_list,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *NetworkSecurityRule) Reset()         { *m = NetworkSecurityRule{} }
func (m *NetworkSecurityRule) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRule) ProtoMessage()    {}
func (*NetworkSecurityRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{7}
}

func (m *NetworkSecurityRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRule.Unmarshal(m, b)
}
func (m *NetworkSecurityRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRule.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRule.Merge(m, src)
}
func (m *NetworkSecurityRule) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRule.Size(m)
}
func (m *NetworkSecurityRule) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRule.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRule proto.InternalMessageInfo

func (m *NetworkSecurityRule) GetTargetGroup() *NetworkSecurityRuleTargetGroup {
	if m != nil {
		return m.TargetGroup
	}
	return nil
}

func (m *NetworkSecurityRule) GetInboundList() []*NetworkSecurityRuleInboundOutbound {
	if m != nil {
		return m.InboundList
	}
	return nil
}

func (m *NetworkSecurityRule) GetOutboundList() []*NetworkSecurityRuleInboundOutbound {
	if m != nil {
		return m.OutboundList
	}
	return nil
}

func (m *NetworkSecurityRule) GetFirstEntityFilterList() []string {
	if m != nil {
		return m.FirstEntityFilterList
	}
	return nil
}

func (m *NetworkSecurityRule) GetSecondEntityFilterList() []string {
	if m != nil {
		return m.SecondEntityFilterList
	}
	return nil
}

type PayloadValue struct {
	// The offset of the value in the payload.
	Offset *uint64 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	// The size of the value in the payload.
	Size                 *uint64  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayloadValue) Reset()         { *m = PayloadValue{} }
func (m *PayloadValue) String() string { return proto.CompactTextString(m) }
func (*PayloadValue) ProtoMessage()    {}
func (*PayloadValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{8}
}

func (m *PayloadValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayloadValue.Unmarshal(m, b)
}
func (m *PayloadValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayloadValue.Marshal(b, m, deterministic)
}
func (m *PayloadValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayloadValue.Merge(m, src)
}
func (m *PayloadValue) XXX_Size() int {
	return xxx_messageInfo_PayloadValue.Size(m)
}
func (m *PayloadValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PayloadValue.DiscardUnknown(m)
}

var xxx_messageInfo_PayloadValue proto.InternalMessageInfo

func (m *PayloadValue) GetOffset() uint64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *PayloadValue) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type PayloadOrEmbeddedValue struct {
	// Instructions on how to find value in the payload.
	Payload *PayloadValue `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	// Embedded value.
	Embedded             []byte   `protobuf:"bytes,2,opt,name=embedded" json:"embedded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayloadOrEmbeddedValue) Reset()         { *m = PayloadOrEmbeddedValue{} }
func (m *PayloadOrEmbeddedValue) String() string { return proto.CompactTextString(m) }
func (*PayloadOrEmbeddedValue) ProtoMessage()    {}
func (*PayloadOrEmbeddedValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{9}
}

func (m *PayloadOrEmbeddedValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayloadOrEmbeddedValue.Unmarshal(m, b)
}
func (m *PayloadOrEmbeddedValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayloadOrEmbeddedValue.Marshal(b, m, deterministic)
}
func (m *PayloadOrEmbeddedValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayloadOrEmbeddedValue.Merge(m, src)
}
func (m *PayloadOrEmbeddedValue) XXX_Size() int {
	return xxx_messageInfo_PayloadOrEmbeddedValue.Size(m)
}
func (m *PayloadOrEmbeddedValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PayloadOrEmbeddedValue.DiscardUnknown(m)
}

var xxx_messageInfo_PayloadOrEmbeddedValue proto.InternalMessageInfo

func (m *PayloadOrEmbeddedValue) GetPayload() *PayloadValue {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PayloadOrEmbeddedValue) GetEmbedded() []byte {
	if m != nil {
		return m.Embedded
	}
	return nil
}

type MetaRequest struct {
	// Method name.
	MethodName *string `protobuf:"bytes,1,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	// Serialized argument.
	Arg *PayloadOrEmbeddedValue `protobuf:"bytes,2,opt,name=arg" json:"arg,omitempty"`
	// Whether the RPC was forwarded from another Microseg instance.
	Forwarded            *bool    `protobuf:"varint,3,opt,name=forwarded" json:"forwarded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaRequest) Reset()         { *m = MetaRequest{} }
func (m *MetaRequest) String() string { return proto.CompactTextString(m) }
func (*MetaRequest) ProtoMessage()    {}
func (*MetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{10}
}

func (m *MetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaRequest.Unmarshal(m, b)
}
func (m *MetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaRequest.Marshal(b, m, deterministic)
}
func (m *MetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaRequest.Merge(m, src)
}
func (m *MetaRequest) XXX_Size() int {
	return xxx_messageInfo_MetaRequest.Size(m)
}
func (m *MetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaRequest proto.InternalMessageInfo

func (m *MetaRequest) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *MetaRequest) GetArg() *PayloadOrEmbeddedValue {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (m *MetaRequest) GetForwarded() bool {
	if m != nil && m.Forwarded != nil {
		return *m.Forwarded
	}
	return false
}

type MetaResponse struct {
	// An error code indicating whether the RPC was successful.
	ErrorCode *MicrosegError_Type `protobuf:"varint,1,opt,name=error_code,json=errorCode,enum=nutanix.microseg.MicrosegError_Type" json:"error_code,omitempty"`
	// An optional additional string describing the error, if the RPC was not
	// successful.
	ErrorDetail *string `protobuf:"bytes,2,opt,name=error_detail,json=errorDetail" json:"error_detail,omitempty"`
	// The serialized response, if any.
	Ret                  *PayloadOrEmbeddedValue `protobuf:"bytes,3,opt,name=ret" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MetaResponse) Reset()         { *m = MetaResponse{} }
func (m *MetaResponse) String() string { return proto.CompactTextString(m) }
func (*MetaResponse) ProtoMessage()    {}
func (*MetaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{11}
}

func (m *MetaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaResponse.Unmarshal(m, b)
}
func (m *MetaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaResponse.Marshal(b, m, deterministic)
}
func (m *MetaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaResponse.Merge(m, src)
}
func (m *MetaResponse) XXX_Size() int {
	return xxx_messageInfo_MetaResponse.Size(m)
}
func (m *MetaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetaResponse proto.InternalMessageInfo

func (m *MetaResponse) GetErrorCode() MicrosegError_Type {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return MicrosegError_kNoError
}

func (m *MetaResponse) GetErrorDetail() string {
	if m != nil && m.ErrorDetail != nil {
		return *m.ErrorDetail
	}
	return ""
}

func (m *MetaResponse) GetRet() *PayloadOrEmbeddedValue {
	if m != nil {
		return m.Ret
	}
	return nil
}

type Task struct {
	// The task identifier.
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// The request that spawned the task.
	Request *MetaRequest `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	// The task completion information.
	Response *MetaResponse `protobuf:"bytes,3,opt,name=response" json:"response,omitempty"`
	// Creation time in microseconds from epoch.
	CreateTime *uint64 `protobuf:"fixed64,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Start time in microseconds from epoch.
	StartTime *uint64 `protobuf:"fixed64,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// Completion time in microseconds from epoch. Unset for ongoing tasks.
	CompleteTime *uint64 `protobuf:"fixed64,6,opt,name=complete_time,json=completeTime" json:"complete_time,omitempty"`
	// Last time the task was updated from epoch.
	LastUpdatedTime *uint64             `protobuf:"fixed64,7,opt,name=last_updated_time,json=lastUpdatedTime" json:"last_updated_time,omitempty"`
	EntityList      []*Task_EntityId    `protobuf:"bytes,8,rep,name=entity_list,json=entityList" json:"entity_list,omitempty"`
	OperationType   *Task_OperationType `protobuf:"varint,9,opt,name=operation_type,json=operationType,enum=nutanix.microseg.Task_OperationType" json:"operation_type,omitempty"`
	// Message describing the task. It should attempt to be more specific about
	// the kind of entities involved with the task.
	Message *string `protobuf:"bytes,10,opt,name=message" json:"message,omitempty"`
	// Percentage of task completed.
	PercentageComplete *int32       `protobuf:"varint,11,opt,name=percentage_complete,json=percentageComplete" json:"percentage_complete,omitempty"`
	ProgressStatus     *Task_Status `protobuf:"varint,12,opt,name=progress_status,json=progressStatus,enum=nutanix.microseg.Task_Status" json:"progress_status,omitempty"`
	// The parent task UUID. This is for internal use only, and should not be
	// exposed at the presentation layer.
	ParentTaskUuid []byte `protobuf:"bytes,13,opt,name=parent_task_uuid,json=parentTaskUuid" json:"parent_task_uuid,omitempty"`
	// A list of subtask UUIDs, ordered by creation time.
	SubtaskUuidList [][]byte `protobuf:"bytes,14,rep,name=subtask_uuid_list,json=subtaskUuidList" json:"subtask_uuid_list,omitempty"`
	// If this flag is set, then this is an internal task and is not meant
	// to be displayed in UI.
	InternalTask *bool `protobuf:"varint,15,opt,name=internal_task,json=internalTask,def=0" json:"internal_task,omitempty"`
	// If the canceled flag is set, then user has indicated the task to be
	// canceled. It is up to task executor whether to move the task to
	// kAborted or let it continue running until its completion.
	Canceled *bool `protobuf:"varint,16,opt,name=canceled,def=0" json:"canceled,omitempty"`
	// The task operation name to be displayed on UI. This allows the
	// task to optionally specify the name of its operation. In case it isn't
	// specified, Prism parses the name from the operation type.
	// (For e.g., "Network Security Rule create" for the
	// kNetworkSecurityRuleCreate.)
	DisplayName *string `protobuf:"bytes,17,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Only set when parent_task_uuid is set.  Sequence ID of this child
	// among all the children of the parent task.
	SubtaskSequenceId *uint64 `protobuf:"varint,18,opt,name=subtask_sequence_id,json=subtaskSequenceId" json:"subtask_sequence_id,omitempty"`
	// Whether UI should display failures from this task.
	DisplayFailures *bool `protobuf:"varint,19,opt,name=display_failures,json=displayFailures,def=1" json:"display_failures,omitempty"`
	// Set of capabilities of a task.
	Capabilities []Task_Capability `protobuf:"varint,20,rep,name=capabilities,enum=nutanix.microseg.Task_Capability" json:"capabilities,omitempty"`
	// Context about the request that spawned the task such as the
	// user name, client ip, etc.
	RequestContext *net.RpcRequestContext `protobuf:"bytes,21,opt,name=request_context,json=requestContext" json:"request_context,omitempty"`
	// Whether to use barrier updates for this task's completion.
	UseSyncBarrier       *bool    `protobuf:"varint,22,opt,name=use_sync_barrier,json=useSyncBarrier,def=0" json:"use_sync_barrier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{12}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

const Default_Task_InternalTask bool = false
const Default_Task_Canceled bool = false
const Default_Task_DisplayFailures bool = true
const Default_Task_UseSyncBarrier bool = false

func (m *Task) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *Task) GetRequest() *MetaRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Task) GetResponse() *MetaResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Task) GetCreateTime() uint64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Task) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *Task) GetCompleteTime() uint64 {
	if m != nil && m.CompleteTime != nil {
		return *m.CompleteTime
	}
	return 0
}

func (m *Task) GetLastUpdatedTime() uint64 {
	if m != nil && m.LastUpdatedTime != nil {
		return *m.LastUpdatedTime
	}
	return 0
}

func (m *Task) GetEntityList() []*Task_EntityId {
	if m != nil {
		return m.EntityList
	}
	return nil
}

func (m *Task) GetOperationType() Task_OperationType {
	if m != nil && m.OperationType != nil {
		return *m.OperationType
	}
	return Task_kNetworkSecurityRuleCreate
}

func (m *Task) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Task) GetPercentageComplete() int32 {
	if m != nil && m.PercentageComplete != nil {
		return *m.PercentageComplete
	}
	return 0
}

func (m *Task) GetProgressStatus() Task_Status {
	if m != nil && m.ProgressStatus != nil {
		return *m.ProgressStatus
	}
	return Task_kQueued
}

func (m *Task) GetParentTaskUuid() []byte {
	if m != nil {
		return m.ParentTaskUuid
	}
	return nil
}

func (m *Task) GetSubtaskUuidList() [][]byte {
	if m != nil {
		return m.SubtaskUuidList
	}
	return nil
}

func (m *Task) GetInternalTask() bool {
	if m != nil && m.InternalTask != nil {
		return *m.InternalTask
	}
	return Default_Task_InternalTask
}

func (m *Task) GetCanceled() bool {
	if m != nil && m.Canceled != nil {
		return *m.Canceled
	}
	return Default_Task_Canceled
}

func (m *Task) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *Task) GetSubtaskSequenceId() uint64 {
	if m != nil && m.SubtaskSequenceId != nil {
		return *m.SubtaskSequenceId
	}
	return 0
}

func (m *Task) GetDisplayFailures() bool {
	if m != nil && m.DisplayFailures != nil {
		return *m.DisplayFailures
	}
	return Default_Task_DisplayFailures
}

func (m *Task) GetCapabilities() []Task_Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *Task) GetRequestContext() *net.RpcRequestContext {
	if m != nil {
		return m.RequestContext
	}
	return nil
}

func (m *Task) GetUseSyncBarrier() bool {
	if m != nil && m.UseSyncBarrier != nil {
		return *m.UseSyncBarrier
	}
	return Default_Task_UseSyncBarrier
}

type Task_EntityId struct {
	// UUID of the entity.
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// Entity type.
	EntityType *Task_Entity `protobuf:"varint,2,opt,name=entity_type,json=entityType,enum=nutanix.microseg.Task_Entity" json:"entity_type,omitempty"`
	// Entity name. This is not stored to the database, but resolved on demand.
	EntityName           *string  `protobuf:"bytes,3,opt,name=entity_name,json=entityName" json:"entity_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task_EntityId) Reset()         { *m = Task_EntityId{} }
func (m *Task_EntityId) String() string { return proto.CompactTextString(m) }
func (*Task_EntityId) ProtoMessage()    {}
func (*Task_EntityId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{12, 0}
}

func (m *Task_EntityId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_EntityId.Unmarshal(m, b)
}
func (m *Task_EntityId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_EntityId.Marshal(b, m, deterministic)
}
func (m *Task_EntityId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_EntityId.Merge(m, src)
}
func (m *Task_EntityId) XXX_Size() int {
	return xxx_messageInfo_Task_EntityId.Size(m)
}
func (m *Task_EntityId) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_EntityId.DiscardUnknown(m)
}

var xxx_messageInfo_Task_EntityId proto.InternalMessageInfo

func (m *Task_EntityId) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *Task_EntityId) GetEntityType() Task_Entity {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return Task_kNetworkSecurityRule
}

func (m *Task_EntityId) GetEntityName() string {
	if m != nil && m.EntityName != nil {
		return *m.EntityName
	}
	return ""
}

// Exported network security rule proto.
type NetworkSecurityRulesExportData struct {
	// (Required) Export format version. The default value is the lowest
	// supported version.
	// Applicable versions: >= 0
	ExportFormatVersion *int32 `protobuf:"varint,1,opt,name=export_format_version,json=exportFormatVersion,def=10" json:"export_format_version,omitempty"`
	// (Required) Hash of serialized proto to check against corruption.
	// Applicable versions: >= 10
	HashValue []byte `protobuf:"bytes,2,opt,name=hash_value,json=hashValue" json:"hash_value,omitempty"`
	// (Required) Serialized policy proto.
	// Applicable versions: >= 10
	Data []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	// (Required) Hash of serialized AD export data.
	// Applicable versions: >= 20
	AdDataHashValue []byte `protobuf:"bytes,4,opt,name=ad_data_hash_value,json=adDataHashValue" json:"ad_data_hash_value,omitempty"`
	// (Required) Serialized AD export data.
	// Applicable versions: >= 20
	AdData []byte `protobuf:"bytes,5,opt,name=ad_data,json=adData" json:"ad_data,omitempty"`
	// (Optional) Serialized Service group export data.
	ServiceGroupData []byte `protobuf:"bytes,6,opt,name=service_group_data,json=serviceGroupData" json:"service_group_data,omitempty"`
	// (Optional) Hash of serialized service group export data.
	ServiceGroupDataHashValue []byte `protobuf:"bytes,7,opt,name=service_group_data_hash_value,json=serviceGroupDataHashValue" json:"service_group_data_hash_value,omitempty"`
	// (Optional) Serialized Address group export data.
	AddressGroupData []byte `protobuf:"bytes,8,opt,name=address_group_data,json=addressGroupData" json:"address_group_data,omitempty"`
	// (Optional) Hash of serialized address group export data.
	AddressGroupDataHashValue []byte   `protobuf:"bytes,9,opt,name=address_group_data_hash_value,json=addressGroupDataHashValue" json:"address_group_data_hash_value,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *NetworkSecurityRulesExportData) Reset()         { *m = NetworkSecurityRulesExportData{} }
func (m *NetworkSecurityRulesExportData) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesExportData) ProtoMessage()    {}
func (*NetworkSecurityRulesExportData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{13}
}

func (m *NetworkSecurityRulesExportData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesExportData.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesExportData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesExportData.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesExportData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesExportData.Merge(m, src)
}
func (m *NetworkSecurityRulesExportData) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesExportData.Size(m)
}
func (m *NetworkSecurityRulesExportData) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesExportData.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesExportData proto.InternalMessageInfo

const Default_NetworkSecurityRulesExportData_ExportFormatVersion int32 = 10

func (m *NetworkSecurityRulesExportData) GetExportFormatVersion() int32 {
	if m != nil && m.ExportFormatVersion != nil {
		return *m.ExportFormatVersion
	}
	return Default_NetworkSecurityRulesExportData_ExportFormatVersion
}

func (m *NetworkSecurityRulesExportData) GetHashValue() []byte {
	if m != nil {
		return m.HashValue
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetAdDataHashValue() []byte {
	if m != nil {
		return m.AdDataHashValue
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetAdData() []byte {
	if m != nil {
		return m.AdData
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetServiceGroupData() []byte {
	if m != nil {
		return m.ServiceGroupData
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetServiceGroupDataHashValue() []byte {
	if m != nil {
		return m.ServiceGroupDataHashValue
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetAddressGroupData() []byte {
	if m != nil {
		return m.AddressGroupData
	}
	return nil
}

func (m *NetworkSecurityRulesExportData) GetAddressGroupDataHashValue() []byte {
	if m != nil {
		return m.AddressGroupDataHashValue
	}
	return nil
}

// Exported policy proto.
type NetworkSecurityRulesExportProto struct {
	// List of categories used by exported policies.
	CategoryList []*NetworkSecurityRulesExportProto_Category `protobuf:"bytes,1,rep,name=category_list,json=categoryList" json:"category_list,omitempty"`
	// List of network function chains used by exported policies.
	NetworkFunctionChainList []*NetworkSecurityRulesExportProto_NetworkFunctionChain `protobuf:"bytes,2,rep,name=network_function_chain_list,json=networkFunctionChainList" json:"network_function_chain_list,omitempty"`
	// List of security policies.
	PolicyList           []*NetworkSecurityRuleInfo `protobuf:"bytes,3,rep,name=policy_list,json=policyList" json:"policy_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NetworkSecurityRulesExportProto) Reset()         { *m = NetworkSecurityRulesExportProto{} }
func (m *NetworkSecurityRulesExportProto) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesExportProto) ProtoMessage()    {}
func (*NetworkSecurityRulesExportProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{14}
}

func (m *NetworkSecurityRulesExportProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesExportProto.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesExportProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesExportProto.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesExportProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesExportProto.Merge(m, src)
}
func (m *NetworkSecurityRulesExportProto) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesExportProto.Size(m)
}
func (m *NetworkSecurityRulesExportProto) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesExportProto.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesExportProto proto.InternalMessageInfo

func (m *NetworkSecurityRulesExportProto) GetCategoryList() []*NetworkSecurityRulesExportProto_Category {
	if m != nil {
		return m.CategoryList
	}
	return nil
}

func (m *NetworkSecurityRulesExportProto) GetNetworkFunctionChainList() []*NetworkSecurityRulesExportProto_NetworkFunctionChain {
	if m != nil {
		return m.NetworkFunctionChainList
	}
	return nil
}

func (m *NetworkSecurityRulesExportProto) GetPolicyList() []*NetworkSecurityRuleInfo {
	if m != nil {
		return m.PolicyList
	}
	return nil
}

type NetworkSecurityRulesExportProto_Category struct {
	// (Required) Category uuid.
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// (Required) Category name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// (Required) Category Value.
	Value                *string  `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRulesExportProto_Category) Reset() {
	*m = NetworkSecurityRulesExportProto_Category{}
}
func (m *NetworkSecurityRulesExportProto_Category) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesExportProto_Category) ProtoMessage()    {}
func (*NetworkSecurityRulesExportProto_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{14, 0}
}

func (m *NetworkSecurityRulesExportProto_Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesExportProto_Category.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesExportProto_Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesExportProto_Category.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesExportProto_Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesExportProto_Category.Merge(m, src)
}
func (m *NetworkSecurityRulesExportProto_Category) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesExportProto_Category.Size(m)
}
func (m *NetworkSecurityRulesExportProto_Category) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesExportProto_Category.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesExportProto_Category proto.InternalMessageInfo

func (m *NetworkSecurityRulesExportProto_Category) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *NetworkSecurityRulesExportProto_Category) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkSecurityRulesExportProto_Category) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkSecurityRulesExportProto_NetworkFunctionChain struct {
	// (Required) network function chain uuid.
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// (Required) network function chain name.
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) Reset() {
	*m = NetworkSecurityRulesExportProto_NetworkFunctionChain{}
}
func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkSecurityRulesExportProto_NetworkFunctionChain) ProtoMessage() {}
func (*NetworkSecurityRulesExportProto_NetworkFunctionChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{14, 1}
}

func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesExportProto_NetworkFunctionChain.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesExportProto_NetworkFunctionChain.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesExportProto_NetworkFunctionChain.Merge(m, src)
}
func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesExportProto_NetworkFunctionChain.Size(m)
}
func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesExportProto_NetworkFunctionChain.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesExportProto_NetworkFunctionChain proto.InternalMessageInfo

func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *NetworkSecurityRulesExportProto_NetworkFunctionChain) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// Policy diff proto, sent as response to import request.
type NetworkSecurityRulesDiff struct {
	EntityList           []*NetworkSecurityRulesDiff_Entity `protobuf:"bytes,1,rep,name=entity_list,json=entityList" json:"entity_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *NetworkSecurityRulesDiff) Reset()         { *m = NetworkSecurityRulesDiff{} }
func (m *NetworkSecurityRulesDiff) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesDiff) ProtoMessage()    {}
func (*NetworkSecurityRulesDiff) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{15}
}

func (m *NetworkSecurityRulesDiff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesDiff.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesDiff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesDiff.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesDiff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesDiff.Merge(m, src)
}
func (m *NetworkSecurityRulesDiff) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesDiff.Size(m)
}
func (m *NetworkSecurityRulesDiff) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesDiff.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesDiff proto.InternalMessageInfo

func (m *NetworkSecurityRulesDiff) GetEntityList() []*NetworkSecurityRulesDiff_Entity {
	if m != nil {
		return m.EntityList
	}
	return nil
}

type NetworkSecurityRulesDiff_Entity struct {
	// (Required) Entity type.
	EntityType *NetworkSecurityRulesDiff_Entity_EntityType `protobuf:"varint,1,opt,name=entity_type,json=entityType,enum=nutanix.microseg.NetworkSecurityRulesDiff_Entity_EntityType" json:"entity_type,omitempty"`
	// (Required) Entity name.
	EntityName *string `protobuf:"bytes,2,opt,name=entity_name,json=entityName" json:"entity_name,omitempty"`
	// (Required) type of update on entity.
	EntityUpdateType     *NetworkSecurityRulesDiff_Entity_EntityUpdateType `protobuf:"varint,3,opt,name=entity_update_type,json=entityUpdateType,enum=nutanix.microseg.NetworkSecurityRulesDiff_Entity_EntityUpdateType" json:"entity_update_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *NetworkSecurityRulesDiff_Entity) Reset()         { *m = NetworkSecurityRulesDiff_Entity{} }
func (m *NetworkSecurityRulesDiff_Entity) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesDiff_Entity) ProtoMessage()    {}
func (*NetworkSecurityRulesDiff_Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_2df9aa679b562f62, []int{15, 0}
}

func (m *NetworkSecurityRulesDiff_Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesDiff_Entity.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesDiff_Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesDiff_Entity.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesDiff_Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesDiff_Entity.Merge(m, src)
}
func (m *NetworkSecurityRulesDiff_Entity) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesDiff_Entity.Size(m)
}
func (m *NetworkSecurityRulesDiff_Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesDiff_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesDiff_Entity proto.InternalMessageInfo

func (m *NetworkSecurityRulesDiff_Entity) GetEntityType() NetworkSecurityRulesDiff_Entity_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return NetworkSecurityRulesDiff_Entity_kCATEGORY
}

func (m *NetworkSecurityRulesDiff_Entity) GetEntityName() string {
	if m != nil && m.EntityName != nil {
		return *m.EntityName
	}
	return ""
}

func (m *NetworkSecurityRulesDiff_Entity) GetEntityUpdateType() NetworkSecurityRulesDiff_Entity_EntityUpdateType {
	if m != nil && m.EntityUpdateType != nil {
		return *m.EntityUpdateType
	}
	return NetworkSecurityRulesDiff_Entity_kADDED
}

func init() {
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleType", NetworkSecurityRuleType_name, NetworkSecurityRuleType_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleMode", NetworkSecurityRuleMode_name, NetworkSecurityRuleMode_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleInboundOutboundType", NetworkSecurityRuleInboundOutboundType_name, NetworkSecurityRuleInboundOutboundType_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleInboundOutboundProtocol", NetworkSecurityRuleInboundOutboundProtocol_name, NetworkSecurityRuleInboundOutboundProtocol_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleTargetGroupType", NetworkSecurityRuleTargetGroupType_name, NetworkSecurityRuleTargetGroupType_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleTargetGroupDefaultInternal", NetworkSecurityRuleTargetGroupDefaultInternal_name, NetworkSecurityRuleTargetGroupDefaultInternal_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRuleUpdateRequestType", NetworkSecurityRuleUpdateRequestType_name, NetworkSecurityRuleUpdateRequestType_value)
	proto.RegisterEnum("nutanix.microseg.Task_Entity", Task_Entity_name, Task_Entity_value)
	proto.RegisterEnum("nutanix.microseg.Task_OperationType", Task_OperationType_name, Task_OperationType_value)
	proto.RegisterEnum("nutanix.microseg.Task_Status", Task_Status_name, Task_Status_value)
	proto.RegisterEnum("nutanix.microseg.Task_Capability", Task_Capability_name, Task_Capability_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRulesExportData_ExportFormatVersion", NetworkSecurityRulesExportData_ExportFormatVersion_name, NetworkSecurityRulesExportData_ExportFormatVersion_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRulesDiff_Entity_EntityType", NetworkSecurityRulesDiff_Entity_EntityType_name, NetworkSecurityRulesDiff_Entity_EntityType_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRulesDiff_Entity_EntityUpdateType", NetworkSecurityRulesDiff_Entity_EntityUpdateType_name, NetworkSecurityRulesDiff_Entity_EntityUpdateType_value)
	proto.RegisterType((*NetworkSecurityRuleInfo)(nil), "nutanix.microseg.NetworkSecurityRuleInfo")
	proto.RegisterType((*NetworkSecurityRuleCreateSpec)(nil), "nutanix.microseg.NetworkSecurityRuleCreateSpec")
	proto.RegisterType((*NetworkSecurityRuleUpdateSpec)(nil), "nutanix.microseg.NetworkSecurityRuleUpdateSpec")
	proto.RegisterType((*NetworkSecurityRuleInboundOutboundPortRange)(nil), "nutanix.microseg.NetworkSecurityRuleInboundOutboundPortRange")
	proto.RegisterType((*NetworkSecurityRuleInboundOutboundIcmpTypeCode)(nil), "nutanix.microseg.NetworkSecurityRuleInboundOutboundIcmpTypeCode")
	proto.RegisterType((*NetworkSecurityRuleInboundOutbound)(nil), "nutanix.microseg.NetworkSecurityRuleInboundOutbound")
	proto.RegisterType((*NetworkSecurityRuleTargetGroup)(nil), "nutanix.microseg.NetworkSecurityRuleTargetGroup")
	proto.RegisterType((*NetworkSecurityRule)(nil), "nutanix.microseg.NetworkSecurityRule")
	proto.RegisterType((*PayloadValue)(nil), "nutanix.microseg.PayloadValue")
	proto.RegisterType((*PayloadOrEmbeddedValue)(nil), "nutanix.microseg.PayloadOrEmbeddedValue")
	proto.RegisterType((*MetaRequest)(nil), "nutanix.microseg.MetaRequest")
	proto.RegisterType((*MetaResponse)(nil), "nutanix.microseg.MetaResponse")
	proto.RegisterType((*Task)(nil), "nutanix.microseg.Task")
	proto.RegisterType((*Task_EntityId)(nil), "nutanix.microseg.Task.EntityId")
	proto.RegisterType((*NetworkSecurityRulesExportData)(nil), "nutanix.microseg.NetworkSecurityRulesExportData")
	proto.RegisterType((*NetworkSecurityRulesExportProto)(nil), "nutanix.microseg.NetworkSecurityRulesExportProto")
	proto.RegisterType((*NetworkSecurityRulesExportProto_Category)(nil), "nutanix.microseg.NetworkSecurityRulesExportProto.Category")
	proto.RegisterType((*NetworkSecurityRulesExportProto_NetworkFunctionChain)(nil), "nutanix.microseg.NetworkSecurityRulesExportProto.NetworkFunctionChain")
	proto.RegisterType((*NetworkSecurityRulesDiff)(nil), "nutanix.microseg.NetworkSecurityRulesDiff")
	proto.RegisterType((*NetworkSecurityRulesDiff_Entity)(nil), "nutanix.microseg.NetworkSecurityRulesDiff.Entity")
}

func init() { proto.RegisterFile("microseg/microseg_types.proto", fileDescriptor_2df9aa679b562f62) }

var fileDescriptor_2df9aa679b562f62 = []byte{
	// 2672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x19, 0x4b, 0x73, 0x23, 0x47,
	0xb9, 0xf4, 0x96, 0x3e, 0x49, 0x76, 0x6f, 0xdb, 0xbb, 0xd6, 0x3a, 0xec, 0xae, 0x23, 0x42, 0xca,
	0x71, 0x12, 0x3b, 0xeb, 0x40, 0x1e, 0x86, 0x84, 0x38, 0x92, 0xbc, 0x2b, 0xb2, 0x7e, 0x64, 0xe4,
	0x4d, 0x2a, 0x54, 0x51, 0x43, 0x7b, 0xa6, 0x25, 0x0f, 0x1a, 0xcd, 0x0c, 0x3d, 0x3d, 0x9b, 0x15,
	0x39, 0x70, 0xa2, 0xe0, 0x46, 0x15, 0x55, 0xfc, 0x03, 0xce, 0x1c, 0xa8, 0xe2, 0xaf, 0x70, 0xe6,
	0xc0, 0x8d, 0x3f, 0xc0, 0x91, 0xea, 0xaf, 0x67, 0xa4, 0xb1, 0x2c, 0xed, 0xda, 0xae, 0x50, 0x95,
	0x03, 0x27, 0x4d, 0x7f, 0xef, 0xfe, 0xfa, 0x7b, 0x75, 0x0b, 0xee, 0x8d, 0x1c, 0x4b, 0xf8, 0x21,
	0x1f, 0xec, 0x24, 0x1f, 0xa6, 0x1c, 0x07, 0x3c, 0xdc, 0x0e, 0x84, 0x2f, 0x7d, 0x4a, 0xbc, 0x48,
	0x32, 0xcf, 0x79, 0xbe, 0x9d, 0x60, 0xd7, 0xe7, 0x30, 0x70, 0x21, 0x7c, 0xa1, 0x19, 0xd6, 0xd7,
	0x23, 0xe9, 0xb8, 0x3b, 0xa1, 0x6b, 0x9e, 0x45, 0xfd, 0x70, 0xc7, 0xe3, 0x72, 0x47, 0x04, 0x96,
	0xc6, 0x35, 0xff, 0x5d, 0x80, 0xb5, 0x23, 0x2e, 0xbf, 0xf6, 0xc5, 0xb0, 0xc7, 0xad, 0x48, 0x38,
	0x72, 0x6c, 0x44, 0x2e, 0xef, 0x7a, 0x7d, 0x9f, 0x52, 0xc8, 0x47, 0x91, 0x63, 0x37, 0x32, 0x1b,
	0x99, 0xcd, 0x8a, 0x81, 0xdf, 0x0a, 0xe6, 0xb1, 0x11, 0x6f, 0x64, 0x35, 0x4c, 0x7d, 0xd3, 0xfb,
	0x00, 0xcc, 0xf3, 0x7c, 0xc9, 0xa4, 0xe3, 0x7b, 0x8d, 0x1c, 0x62, 0x52, 0x10, 0x7a, 0x00, 0x15,
	0x11, 0xb9, 0x1c, 0x37, 0xd1, 0xc8, 0x6f, 0x64, 0x36, 0x97, 0x76, 0xdf, 0xd8, 0x9e, 0xdd, 0xc4,
	0xf6, 0x1c, 0x2b, 0x4e, 0xc7, 0x01, 0x37, 0xca, 0x22, 0xfe, 0xa2, 0x6f, 0xc2, 0x2d, 0xd7, 0x1f,
	0x38, 0x16, 0x73, 0x4d, 0xe9, 0x8c, 0x78, 0x28, 0xd9, 0x28, 0x68, 0x14, 0x36, 0x32, 0x9b, 0x39,
	0x83, 0xc4, 0x88, 0xd3, 0x04, 0x4e, 0x3b, 0x90, 0x1f, 0xf9, 0x36, 0x6f, 0x14, 0xaf, 0xa1, 0xef,
	0xd0, 0xb7, 0xf9, 0x5e, 0x71, 0xb8, 0x1f, 0x04, 0xee, 0xd8, 0x40, 0x76, 0xfa, 0x16, 0xd0, 0xc0,
	0x77, 0x1d, 0x6b, 0x6c, 0xf6, 0x1d, 0x57, 0x72, 0x61, 0xa2, 0x47, 0x4a, 0xb8, 0x47, 0xa2, 0x31,
	0x07, 0x88, 0x78, 0xaa, 0xbc, 0xb3, 0x05, 0xb7, 0x70, 0xa7, 0x96, 0x3f, 0x0a, 0x7c, 0x8f, 0x7b,
	0xd2, 0x74, 0xec, 0x46, 0x79, 0x23, 0xb3, 0x59, 0x37, 0x96, 0x15, 0xa2, 0x95, 0xc0, 0xbb, 0xb6,
	0x92, 0x7c, 0x89, 0x76, 0xb7, 0x51, 0x41, 0x62, 0x32, 0x43, 0xbc, 0x4b, 0x3f, 0x84, 0xbc, 0x82,
	0x35, 0x60, 0x23, 0xb3, 0x59, 0xdd, 0xfd, 0xc1, 0x95, 0xb6, 0x63, 0x20, 0x0b, 0xfd, 0x18, 0x1a,
	0x4e, 0x68, 0xc6, 0xbb, 0x38, 0x77, 0xa4, 0xeb, 0x0f, 0x4c, 0xee, 0xb1, 0x33, 0x97, 0xdb, 0x8d,
	0xea, 0x46, 0x66, 0xb3, 0xbc, 0x57, 0xe8, 0x33, 0x37, 0xe4, 0xc6, 0x6d, 0x27, 0x3c, 0x41, 0xaa,
	0xc7, 0x48, 0xd4, 0xd1, 0x34, 0xf4, 0x5d, 0xa0, 0xcc, 0x75, 0xfd, 0xaf, 0x4d, 0x27, 0x78, 0xf6,
	0x9e, 0x29, 0x05, 0xeb, 0xf7, 0x1d, 0xab, 0x51, 0x4b, 0x73, 0x12, 0x24, 0xe8, 0x06, 0xcf, 0xde,
	0x3b, 0xd5, 0x68, 0xfa, 0x3a, 0xe0, 0x86, 0xcd, 0x73, 0x16, 0x9e, 0x9b, 0xcf, 0x98, 0x1b, 0xf1,
	0xc6, 0x32, 0x3a, 0xad, 0xae, 0xc0, 0x8f, 0x59, 0x78, 0xfe, 0x85, 0x02, 0xd2, 0x1f, 0xc1, 0x5a,
	0xc8, 0xc5, 0x33, 0xc7, 0xe2, 0xe6, 0x40, 0xf8, 0x51, 0x80, 0xfe, 0x35, 0x5d, 0x27, 0x94, 0x8d,
	0xfa, 0x46, 0x6e, 0xb3, 0x62, 0xac, 0xc6, 0xe8, 0x47, 0x0a, 0xab, 0x9c, 0xfc, 0xc4, 0x09, 0xa5,
	0x62, 0x63, 0xb6, 0x2d, 0x78, 0x18, 0x5e, 0x62, 0x5b, 0xd2, 0x6c, 0x31, 0xfa, 0x02, 0x5b, 0xf3,
	0x1f, 0x79, 0xb8, 0x37, 0xc7, 0x51, 0x2d, 0xc1, 0x99, 0xe4, 0xbd, 0x80, 0x5b, 0xdf, 0xb9, 0x98,
	0x4f, 0xc2, 0xb8, 0xf0, 0xbf, 0x08, 0xe3, 0xe2, 0x75, 0xc2, 0x58, 0xc5, 0x7c, 0xe1, 0xaa, 0x61,
	0x5c, 0x7e, 0x49, 0x18, 0x57, 0xbe, 0xdd, 0x30, 0x86, 0x1b, 0x87, 0x71, 0xf5, 0xda, 0x61, 0x5c,
	0x9b, 0x13, 0xc6, 0xcd, 0xdf, 0x17, 0xe6, 0x06, 0xd6, 0xd3, 0xc0, 0xfe, 0xae, 0x06, 0xd6, 0xce,
	0xc2, 0x62, 0xba, 0x97, 0x7d, 0xfb, 0xe1, 0x77, 0xbe, 0xa0, 0x16, 0xfe, 0x5f, 0x50, 0x1b, 0xf5,
	0x79, 0x91, 0x38, 0x80, 0x37, 0xe7, 0xf6, 0xf3, 0x33, 0x3f, 0xf2, 0xec, 0xe3, 0x48, 0xe2, 0xef,
	0x89, 0x2f, 0xa4, 0xc1, 0xbc, 0x01, 0xa7, 0xf7, 0x00, 0x42, 0xc9, 0x84, 0x34, 0x03, 0x5f, 0x48,
	0x0c, 0xce, 0x82, 0x51, 0x41, 0x88, 0xa2, 0xa1, 0x77, 0xa1, 0xcc, 0x3d, 0x5b, 0x23, 0xb3, 0x88,
	0x2c, 0x71, 0xcd, 0xde, 0xfc, 0x15, 0x6c, 0xbf, 0x5c, 0x51, 0xd7, 0x1a, 0x05, 0x2a, 0xdc, 0x5a,
	0xea, 0xe8, 0x5f, 0x81, 0x8a, 0x63, 0x8d, 0x02, 0x1d, 0xba, 0x5a, 0x55, 0xd9, 0x89, 0x09, 0x26,
	0x48, 0x4b, 0xc5, 0x58, 0x76, 0x8a, 0x54, 0x9c, 0xcd, 0xbf, 0x97, 0xa0, 0xf9, 0x72, 0x65, 0xf4,
	0x1b, 0x58, 0x0b, 0x38, 0x17, 0x66, 0x18, 0x70, 0xcb, 0xe9, 0x3b, 0x16, 0x66, 0xcc, 0x54, 0xdd,
	0xd2, 0xee, 0x07, 0x57, 0x3a, 0xe6, 0x19, 0xb1, 0xca, 0xbc, 0xbd, 0xca, 0x50, 0xfd, 0x1c, 0xf9,
	0x1e, 0x37, 0x6e, 0x2b, 0x1d, 0xbd, 0xb4, 0x0a, 0xdc, 0xc0, 0x5b, 0x40, 0x2d, 0x26, 0xf9, 0xc0,
	0x17, 0xe3, 0x54, 0x37, 0xca, 0x62, 0x37, 0x22, 0x09, 0x66, 0xd2, 0xc0, 0xd4, 0x76, 0x03, 0x33,
	0x8c, 0xce, 0x3c, 0x2e, 0xe3, 0x2c, 0x2f, 0x3b, 0x41, 0x0f, 0xd7, 0xd4, 0x84, 0x32, 0x4e, 0x67,
	0x96, 0xef, 0xc6, 0x29, 0xfe, 0x93, 0x9b, 0x18, 0x7e, 0x12, 0xcb, 0xd8, 0x2b, 0x0c, 0xd1, 0xf0,
	0x89, 0x50, 0xea, 0xc2, 0x8a, 0xb4, 0x02, 0x3c, 0x56, 0x53, 0xa8, 0x38, 0xd0, 0xc6, 0x16, 0x36,
	0x72, 0x9b, 0xd5, 0xdd, 0x8f, 0x6e, 0xa4, 0x2b, 0x89, 0x28, 0x83, 0x48, 0x2b, 0x98, 0xac, 0x70,
	0xaf, 0x2e, 0xac, 0x44, 0xf6, 0x65, 0x6d, 0xc5, 0x6f, 0x45, 0x5b, 0x64, 0xcf, 0x68, 0xf3, 0x61,
	0x65, 0x12, 0x65, 0x18, 0x4d, 0x5a, 0x5b, 0x09, 0xb5, 0x7d, 0x72, 0x13, 0x6d, 0xe9, 0x20, 0x36,
	0x88, 0x93, 0x5a, 0xa1, 0xc2, 0x8f, 0xe0, 0x15, 0x4f, 0xcb, 0x30, 0xfb, 0x91, 0x67, 0x61, 0xcc,
	0x59, 0xe7, 0xcc, 0xf1, 0x74, 0x69, 0x2b, 0xe3, 0xe1, 0x36, 0x62, 0x92, 0x83, 0x98, 0xa2, 0xa5,
	0x08, 0xb0, 0xc4, 0x3d, 0x84, 0x55, 0xfe, 0x3c, 0x70, 0x44, 0x1c, 0xac, 0x93, 0x5a, 0x5c, 0x41,
	0xbe, 0x95, 0x29, 0x6e, 0x5a, 0x8a, 0x5f, 0x30, 0x34, 0xc1, 0x0b, 0x86, 0xa6, 0x0d, 0xa8, 0xda,
	0x3c, 0xb4, 0x84, 0x13, 0x60, 0x6f, 0xa9, 0xa2, 0x82, 0x34, 0xe8, 0x45, 0x63, 0x55, 0x6d, 0xf1,
	0x58, 0x45, 0xd7, 0xa0, 0x84, 0xb5, 0xc9, 0xb1, 0xb1, 0x26, 0xd5, 0x8d, 0xa2, 0x5a, 0x76, 0xed,
	0xe6, 0x7f, 0xb2, 0x70, 0x7f, 0x5e, 0x2b, 0x62, 0x62, 0xc0, 0x25, 0xca, 0xa0, 0xd1, 0xcb, 0x72,
	0xf6, 0x87, 0x57, 0xeb, 0x6e, 0x53, 0x91, 0x98, 0xaf, 0xa5, 0xa1, 0xee, 0x22, 0x8b, 0xb2, 0x75,
	0x0f, 0xee, 0xda, 0x3c, 0x70, 0xfd, 0xf1, 0x48, 0x35, 0x0a, 0xc1, 0xfb, 0x5c, 0x70, 0xcf, 0xe2,
	0xfa, 0xc8, 0x74, 0x3f, 0x5e, 0x9b, 0x12, 0x18, 0x09, 0x1e, 0x4f, 0x6c, 0x7e, 0xa6, 0xe7, 0x16,
	0x64, 0x7a, 0x04, 0xc4, 0xe6, 0x7d, 0x16, 0xb9, 0xd2, 0x74, 0x3c, 0xc9, 0x85, 0xc7, 0x92, 0xa4,
	0xfe, 0xe9, 0x75, 0x77, 0xd6, 0xd6, 0x72, 0xba, 0xb1, 0x98, 0xbd, 0xca, 0x70, 0x5f, 0xb5, 0x89,
	0x7d, 0xd7, 0x35, 0x96, 0xed, 0x8b, 0xb8, 0xe6, 0x9f, 0x72, 0xb0, 0x32, 0x47, 0x1a, 0xed, 0x41,
	0x4d, 0xa2, 0x44, 0x7d, 0xc2, 0xe8, 0xe4, 0xea, 0xee, 0x3b, 0xd7, 0x35, 0xc5, 0xa8, 0xca, 0xd4,
	0x21, 0x7e, 0x09, 0x35, 0x47, 0xe7, 0xcc, 0xb4, 0xea, 0x55, 0xaf, 0x78, 0x72, 0x33, 0xc9, 0x66,
	0x54, 0x63, 0x49, 0xe8, 0xbc, 0xaf, 0xa0, 0xee, 0xc7, 0x88, 0xa9, 0x97, 0x6f, 0x2a, 0xb9, 0x96,
	0x88, 0x42, 0xd1, 0xef, 0x43, 0xa3, 0xef, 0x88, 0x50, 0x9a, 0xdc, 0x93, 0x8e, 0x9c, 0x8c, 0x23,
	0xa8, 0x25, 0x8f, 0x67, 0x79, 0x1b, 0xf1, 0x1d, 0x44, 0xeb, 0x68, 0x42, 0xc6, 0x0f, 0xe1, 0x6e,
	0xc8, 0x2d, 0xdf, 0xb3, 0xe7, 0x71, 0x16, 0x90, 0xf3, 0x8e, 0x26, 0x98, 0x65, 0x6d, 0xee, 0x41,
	0xed, 0x84, 0x8d, 0x5d, 0x9f, 0xd9, 0xfa, 0xf6, 0x73, 0x07, 0x8a, 0x7e, 0xbf, 0x1f, 0x72, 0xdd,
	0x79, 0xf3, 0x46, 0xbc, 0x52, 0x83, 0x61, 0xe8, 0xfc, 0x46, 0xf7, 0xc1, 0xbc, 0x81, 0xdf, 0x4d,
	0x0f, 0xee, 0xc4, 0xbc, 0xc7, 0xa2, 0x33, 0x3a, 0xe3, 0xb6, 0xcd, 0x63, 0x29, 0x1f, 0x40, 0x29,
	0xd0, 0x98, 0xf8, 0x34, 0xef, 0x5f, 0x76, 0x4f, 0x5a, 0xad, 0x91, 0x90, 0xd3, 0x75, 0x28, 0xf3,
	0x58, 0x14, 0xea, 0xaa, 0x19, 0x93, 0x75, 0xf3, 0x0f, 0x19, 0xa8, 0x1e, 0x72, 0xc9, 0x0c, 0xfe,
	0xeb, 0x88, 0x87, 0x92, 0x3e, 0x80, 0xea, 0x88, 0xcb, 0x73, 0xdf, 0x36, 0x71, 0x66, 0xd5, 0x73,
	0x2c, 0x68, 0xd0, 0x91, 0x9a, 0x5c, 0xf7, 0x20, 0xc7, 0xc4, 0x00, 0xe5, 0x54, 0x77, 0x37, 0x17,
	0x9a, 0x30, 0x63, 0xbd, 0xa1, 0x98, 0xe8, 0xf7, 0xa0, 0xd2, 0xf7, 0xc5, 0xd7, 0x4c, 0x28, 0x4b,
	0x54, 0x3b, 0x2c, 0x1b, 0x53, 0x40, 0xf3, 0x6f, 0x19, 0xa8, 0x69, 0x53, 0xc2, 0xc0, 0xf7, 0x42,
	0x4e, 0x5b, 0x00, 0xf8, 0xc0, 0xa1, 0xa7, 0x05, 0x5d, 0x27, 0x5e, 0xbb, 0xac, 0xf1, 0x30, 0xfe,
	0xe8, 0xe0, 0x63, 0x08, 0x0e, 0xc0, 0x15, 0xe4, 0xc3, 0x71, 0xe4, 0x55, 0xa8, 0x69, 0x21, 0x36,
	0x97, 0xcc, 0x71, 0xe3, 0xac, 0xaf, 0x22, 0xac, 0x8d, 0x20, 0xb5, 0x25, 0x11, 0xf7, 0xe7, 0x6b,
	0x6d, 0x49, 0x70, 0xd9, 0xfc, 0x57, 0x15, 0xf2, 0xa7, 0x2c, 0x1c, 0x5e, 0x98, 0xfc, 0x6b, 0xf1,
	0xe4, 0xff, 0x3e, 0x94, 0x84, 0xf6, 0x6b, 0xec, 0xaf, 0x7b, 0x73, 0xac, 0x9f, 0x3a, 0xdf, 0x48,
	0xa8, 0xe9, 0x1e, 0x94, 0x45, 0xec, 0x85, 0xd8, 0xac, 0xfb, 0x8b, 0x38, 0x35, 0x95, 0x31, 0xa1,
	0x57, 0x27, 0x68, 0xe1, 0x4d, 0x17, 0xbb, 0x0c, 0x16, 0xa1, 0xa2, 0x01, 0x1a, 0xa4, 0x9a, 0xcb,
	0x74, 0x18, 0x44, 0x7c, 0x01, 0xf1, 0x7a, 0x18, 0x44, 0xf4, 0xf7, 0xa1, 0xae, 0x66, 0x6b, 0x97,
	0x27, 0x12, 0x8a, 0x48, 0x51, 0x4b, 0x80, 0x48, 0xb4, 0x05, 0xb7, 0x5c, 0x16, 0x4a, 0x33, 0xc2,
	0xab, 0x8f, 0xad, 0x09, 0x4b, 0x48, 0xb8, 0xac, 0x10, 0xfa, 0x4a, 0x64, 0x23, 0xed, 0x27, 0x50,
	0x8d, 0x53, 0x08, 0x73, 0xa7, 0x8c, 0xb9, 0xfd, 0xe0, 0xf2, 0x7e, 0x94, 0x1b, 0xb7, 0x75, 0x32,
	0x75, 0x6d, 0x03, 0x34, 0x0f, 0xe6, 0xe2, 0x67, 0xb0, 0xe4, 0x07, 0x5c, 0xa4, 0x9a, 0x46, 0x65,
	0x51, 0x30, 0xa0, 0x90, 0xe3, 0x84, 0x18, 0x83, 0xa1, 0xee, 0xa7, 0x97, 0xb4, 0x01, 0xa5, 0x11,
	0x0f, 0x43, 0x36, 0xd0, 0xb7, 0x82, 0x8a, 0x91, 0x2c, 0xe9, 0x0e, 0xac, 0x04, 0x5c, 0x58, 0xdc,
	0x93, 0x6c, 0xa0, 0x2f, 0x18, 0x6a, 0xbf, 0xd8, 0x41, 0x0b, 0x06, 0x9d, 0xa2, 0x5a, 0x31, 0x86,
	0x1e, 0xc0, 0x72, 0x20, 0xfc, 0x01, 0x76, 0xd2, 0x50, 0x32, 0x19, 0x85, 0x38, 0xdf, 0x2f, 0xcd,
	0x3b, 0x67, 0x34, 0xac, 0x87, 0x44, 0xc6, 0x52, 0xc2, 0xa5, 0xd7, 0x74, 0x13, 0x48, 0xc0, 0x84,
	0x6a, 0x51, 0x92, 0x85, 0x43, 0xdd, 0x9d, 0xea, 0x18, 0x47, 0x4b, 0x1a, 0xae, 0x98, 0x93, 0x9b,
	0x52, 0x18, 0x9d, 0x4d, 0xa8, 0xa6, 0x6f, 0x21, 0x35, 0x63, 0x39, 0x46, 0x4c, 0x5a, 0xd2, 0x16,
	0xd4, 0x93, 0x56, 0x84, 0x72, 0xf1, 0x69, 0x66, 0x72, 0xf7, 0xa8, 0x25, 0x38, 0x8c, 0xde, 0x57,
	0xa1, 0x6c, 0x31, 0xcf, 0xe2, 0xea, 0x72, 0x43, 0xd2, 0x64, 0x13, 0xb0, 0x4a, 0x24, 0xdb, 0x09,
	0x03, 0x97, 0x8d, 0x75, 0x69, 0xb8, 0x15, 0x0f, 0x16, 0x1a, 0x86, 0xb5, 0x61, 0x1b, 0x56, 0x12,
	0xeb, 0x42, 0x15, 0xc9, 0xaa, 0xd5, 0x3a, 0x76, 0x83, 0x62, 0x7d, 0x4b, 0x0c, 0xef, 0xc5, 0x98,
	0xae, 0x4d, 0x77, 0x80, 0x24, 0x22, 0xfb, 0xcc, 0x71, 0x23, 0xc1, 0xc3, 0xc6, 0x0a, 0x6a, 0xcf,
	0x4b, 0x11, 0x71, 0x63, 0x39, 0xc6, 0x1e, 0xc4, 0x48, 0xda, 0x81, 0x9a, 0xc5, 0x02, 0x76, 0xe6,
	0xb8, 0x8e, 0x74, 0x78, 0xd8, 0x58, 0xdd, 0xc8, 0x6d, 0x2e, 0xed, 0xbe, 0xba, 0xc0, 0xdb, 0xad,
	0x84, 0x74, 0x6c, 0x5c, 0x60, 0xa3, 0x8f, 0x60, 0x39, 0xce, 0x34, 0xd3, 0xf2, 0x3d, 0xc9, 0x9f,
	0xcb, 0xc6, 0xed, 0x99, 0x2c, 0xf3, 0xb8, 0xdc, 0x36, 0x02, 0x2b, 0xce, 0xcc, 0x96, 0xa6, 0x32,
	0x96, 0xc4, 0x85, 0xb5, 0xda, 0x40, 0x14, 0x72, 0x33, 0x1c, 0x7b, 0x96, 0x79, 0xc6, 0x84, 0x70,
	0xb8, 0x68, 0xdc, 0x49, 0xbb, 0x6f, 0x29, 0x0a, 0x79, 0x6f, 0xec, 0x59, 0x9f, 0x6a, 0xe4, 0xfa,
	0x6f, 0xa1, 0x9c, 0x44, 0xf8, 0xdc, 0x8a, 0xf1, 0xf1, 0x24, 0x57, 0x30, 0xcc, 0xb3, 0x2f, 0x8c,
	0x26, 0x2d, 0x29, 0xc9, 0x14, 0x0c, 0xee, 0x07, 0x13, 0x7e, 0x3c, 0xa3, 0xf8, 0x61, 0x41, 0x83,
	0xd4, 0x11, 0x35, 0x9b, 0x50, 0xd4, 0x6c, 0xb4, 0x01, 0xab, 0xc3, 0x39, 0xed, 0x94, 0x64, 0x9a,
	0x7f, 0xcc, 0x40, 0xfd, 0x42, 0x0a, 0xd1, 0xfb, 0xb0, 0x3e, 0x5c, 0xf8, 0xa2, 0x46, 0x32, 0x8b,
	0xf0, 0xba, 0x0a, 0x90, 0xec, 0x22, 0x7c, 0x9b, 0xab, 0x34, 0x22, 0xb9, 0x45, 0xf8, 0xee, 0x48,
	0xdd, 0x26, 0x48, 0xbe, 0x79, 0x04, 0xc5, 0x38, 0x55, 0xaa, 0x50, 0x1a, 0x7e, 0x1e, 0xf1, 0x88,
	0xdb, 0x24, 0x43, 0x6b, 0x50, 0x1e, 0x1a, 0x91, 0xe7, 0x39, 0xde, 0x80, 0x64, 0xe9, 0x12, 0xc0,
	0xb0, 0x17, 0x59, 0x16, 0xe7, 0x36, 0xb7, 0x49, 0x0e, 0xb1, 0xfb, 0x67, 0xbe, 0x90, 0xdc, 0x26,
	0x79, 0x64, 0x54, 0x71, 0xc4, 0x6d, 0x52, 0x68, 0xee, 0x00, 0x4c, 0x83, 0x83, 0x12, 0xa8, 0x0d,
	0x95, 0x43, 0x7b, 0x51, 0x18, 0x70, 0x4f, 0x09, 0x5e, 0x86, 0x2a, 0x42, 0x5a, 0x18, 0xfc, 0x24,
	0xdb, 0xfc, 0x6b, 0x7e, 0xee, 0x88, 0x1b, 0x76, 0x9e, 0x2b, 0x0b, 0xdb, 0x4c, 0x32, 0xfa, 0x1e,
	0xdc, 0xe6, 0xb8, 0x32, 0xfb, 0xbe, 0x18, 0x31, 0x69, 0x3e, 0xe3, 0x22, 0x54, 0x13, 0x38, 0xde,
	0x81, 0xf7, 0xb2, 0x0f, 0xdf, 0xc1, 0x31, 0xdf, 0x17, 0xf2, 0x00, 0xf1, 0x5f, 0x68, 0xb4, 0x2a,
	0xc7, 0xa9, 0xdb, 0xbe, 0xee, 0xcf, 0x95, 0xf3, 0xc9, 0xd3, 0x29, 0x85, 0xbc, 0xcd, 0x24, 0xc3,
	0xa3, 0xac, 0x19, 0xf8, 0x4d, 0xdf, 0x04, 0xca, 0x6c, 0x53, 0x7d, 0xa6, 0x1f, 0x0a, 0xf2, 0x48,
	0xb1, 0xcc, 0x6c, 0x65, 0xce, 0xf4, 0xed, 0x75, 0x0d, 0x4a, 0x31, 0x31, 0xd6, 0xfa, 0x9a, 0x51,
	0xd4, 0x14, 0x6a, 0xc0, 0xbd, 0x78, 0xbf, 0x40, 0x9a, 0x22, 0xd2, 0x90, 0xf4, 0xd5, 0x02, 0xa9,
	0x3f, 0x81, 0x7b, 0x97, 0xa9, 0xd3, 0xea, 0x4b, 0xc8, 0x78, 0x77, 0x96, 0x71, 0x6a, 0xc8, 0x5b,
	0xca, 0xea, 0xf4, 0xb5, 0x03, 0xf5, 0x95, 0xb5, 0xbe, 0xf4, 0x8d, 0x23, 0xd1, 0x77, 0x99, 0x3a,
	0xad, 0xaf, 0xa2, 0xf5, 0xcd, 0x32, 0x4e, 0xdf, 0x48, 0xbe, 0x81, 0x95, 0xce, 0x1c, 0x7f, 0x53,
	0x58, 0x1a, 0xc6, 0xdf, 0xe6, 0x81, 0x1a, 0xfd, 0x08, 0xd0, 0x15, 0x58, 0x9e, 0xc0, 0x7a, 0x38,
	0xd4, 0x91, 0xd5, 0x0b, 0x84, 0xa7, 0xe7, 0x8e, 0xb0, 0xc9, 0xfd, 0x0b, 0x84, 0x07, 0x7e, 0x24,
	0xe4, 0x39, 0xd9, 0x9c, 0x91, 0xd8, 0x97, 0xe7, 0x64, 0xb7, 0xf9, 0xcf, 0x1c, 0x3c, 0x58, 0x1c,
	0x30, 0x78, 0x67, 0xa7, 0x26, 0xd4, 0x27, 0x37, 0x0c, 0x2c, 0xe4, 0x19, 0x6c, 0x8d, 0x7b, 0x57,
	0x1a, 0x7b, 0xd3, 0x92, 0xb6, 0x5b, 0xb1, 0x18, 0x55, 0xe7, 0xf4, 0x17, 0x76, 0x80, 0xdf, 0x65,
	0x16, 0x5e, 0x5a, 0x53, 0x03, 0xfc, 0xc1, 0xf5, 0xf5, 0x1d, 0xcd, 0xb9, 0xe6, 0xce, 0xbf, 0xfc,
	0xa2, 0x1d, 0x3f, 0x83, 0x6a, 0xfc, 0x8e, 0x96, 0x9a, 0xee, 0xdf, 0xb8, 0xe2, 0x74, 0xdf, 0xf7,
	0x0d, 0xd0, 0xdc, 0x4a, 0xd6, 0xfa, 0x63, 0x28, 0x27, 0xbb, 0xbd, 0xf2, 0x6b, 0xeb, 0x2a, 0x14,
	0x74, 0xcc, 0xe8, 0x7a, 0xa8, 0x17, 0xeb, 0x1f, 0xc3, 0xea, 0xbc, 0x7d, 0x5c, 0x55, 0x6a, 0xf3,
	0xcf, 0x79, 0x68, 0xcc, 0x73, 0x54, 0xdb, 0xe9, 0xf7, 0xa9, 0x71, 0x71, 0xe8, 0xd1, 0x27, 0xfb,
	0xf0, 0x6a, 0x9e, 0x56, 0x02, 0x66, 0x8a, 0x3b, 0x6e, 0xfd, 0x2f, 0xb9, 0x49, 0xf1, 0xfe, 0xc5,
	0xc5, 0x3e, 0x91, 0xb9, 0xc6, 0xf3, 0x51, 0x5a, 0x7c, 0xfc, 0x83, 0x63, 0xd2, 0x0b, 0xda, 0x48,
	0x76, 0xb6, 0x8d, 0xd0, 0x00, 0x68, 0x4c, 0xa0, 0x27, 0x40, 0x6d, 0x46, 0x0e, 0xcd, 0xf8, 0xf4,
	0xa6, 0x66, 0xe8, 0x76, 0x81, 0xc6, 0x10, 0x3e, 0x03, 0x69, 0x0e, 0x01, 0xa6, 0xc6, 0xd2, 0x3a,
	0x54, 0x86, 0xad, 0xfd, 0xd3, 0xce, 0xa3, 0x63, 0xe3, 0x2b, 0x92, 0xa1, 0xaf, 0xc0, 0xda, 0xf0,
	0xa8, 0x73, 0xfa, 0xe5, 0xb1, 0xf1, 0x99, 0x79, 0xf0, 0xf4, 0xa8, 0x75, 0xda, 0x3d, 0x3e, 0x32,
	0x5b, 0x8f, 0xf7, 0xbb, 0x47, 0x24, 0x8b, 0x95, 0xff, 0xe4, 0xf8, 0x49, 0xb7, 0xf5, 0x15, 0xc9,
	0xd1, 0x5b, 0x50, 0x1f, 0xf6, 0x3a, 0xc6, 0x17, 0xdd, 0x56, 0xe7, 0x91, 0x71, 0xfc, 0xf4, 0x84,
	0xe4, 0x11, 0xb4, 0xdf, 0x6e, 0x1b, 0x9d, 0x5e, 0x4f, 0x83, 0x0a, 0xcd, 0x1f, 0x03, 0x99, 0x35,
	0x89, 0x02, 0x14, 0x15, 0x59, 0xa7, 0x1d, 0x37, 0x9e, 0x76, 0xe7, 0x49, 0xe7, 0xb4, 0xd3, 0x26,
	0x59, 0x34, 0xe6, 0xf0, 0xb8, 0xdd, 0x3d, 0xe8, 0x76, 0xda, 0x24, 0xb7, 0x75, 0x38, 0xf7, 0xbf,
	0x56, 0x94, 0x51, 0x86, 0xfc, 0x70, 0x3f, 0x08, 0x48, 0x06, 0x9b, 0x55, 0x37, 0xf4, 0x5d, 0xec,
	0xb1, 0x24, 0x8b, 0x1d, 0xe7, 0xf3, 0x88, 0x09, 0xe6, 0x49, 0xc7, 0x53, 0x2d, 0xb1, 0x04, 0xb9,
	0xe1, 0xbe, 0x4d, 0xf2, 0x5b, 0xef, 0xce, 0x15, 0x77, 0xa8, 0xee, 0x36, 0xca, 0x8c, 0x43, 0xdf,
	0x73, 0xa4, 0x2f, 0x48, 0x46, 0x1b, 0x18, 0x04, 0xee, 0x98, 0x64, 0xb7, 0x1c, 0x78, 0xfd, 0x6a,
	0x4f, 0x9e, 0x28, 0x43, 0x7d, 0xec, 0xbb, 0x6e, 0xd2, 0xf8, 0xc6, 0x01, 0xd7, 0xb7, 0x59, 0x92,
	0x45, 0xe7, 0x28, 0x40, 0xf7, 0x44, 0xbf, 0x5a, 0x92, 0x1c, 0x6e, 0x37, 0x79, 0x26, 0x25, 0xf9,
	0xad, 0x5f, 0xc2, 0xd6, 0xd5, 0x1f, 0x29, 0xb5, 0x07, 0x50, 0x55, 0x05, 0x0a, 0xc3, 0x6e, 0xeb,
	0xf0, 0x84, 0x64, 0x11, 0x78, 0xda, 0x3a, 0x21, 0x39, 0xfc, 0x7a, 0xda, 0x56, 0xa7, 0xa2, 0xd0,
	0xa8, 0xa1, 0xb0, 0xf5, 0xd9, 0xdc, 0x67, 0xe1, 0x99, 0xb7, 0x20, 0x9c, 0x67, 0xda, 0x97, 0xdf,
	0x72, 0x48, 0x46, 0xb7, 0xfe, 0x78, 0x43, 0x5b, 0x4f, 0xe0, 0xed, 0x6b, 0x3d, 0xbf, 0xe0, 0x76,
	0x93, 0x07, 0x98, 0xe4, 0xe8, 0xb9, 0x37, 0x56, 0xab, 0xec, 0xd6, 0x21, 0xbc, 0xb6, 0x70, 0xee,
	0x89, 0x67, 0x47, 0x34, 0x4e, 0xf9, 0x35, 0x35, 0x11, 0x65, 0xe8, 0x2a, 0x90, 0xa1, 0xa1, 0x3a,
	0x8d, 0xe5, 0x4c, 0xe7, 0xa4, 0x4f, 0x37, 0x60, 0xd5, 0xf2, 0x47, 0x97, 0xf2, 0xe7, 0xe7, 0xe5,
	0xe4, 0xeb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x2a, 0x90, 0x03, 0x36, 0x20, 0x00, 0x00,
}
