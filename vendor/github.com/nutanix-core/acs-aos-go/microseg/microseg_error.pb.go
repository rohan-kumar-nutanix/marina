// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microseg/microseg_error.proto

package microseg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MicrosegError_Type int32

const (
	MicrosegError_kNoError                  MicrosegError_Type = 0
	MicrosegError_kCasError                 MicrosegError_Type = 1
	MicrosegError_kExists                   MicrosegError_Type = 2
	MicrosegError_kInvalidArgument          MicrosegError_Type = 3
	MicrosegError_kLogicalTimestampMismatch MicrosegError_Type = 4
	MicrosegError_kNotFound                 MicrosegError_Type = 5
	MicrosegError_kNotMaster                MicrosegError_Type = 6
	MicrosegError_kNotSupported             MicrosegError_Type = 7
	MicrosegError_kRetry                    MicrosegError_Type = 8
	MicrosegError_kRuleNotFound             MicrosegError_Type = 9
	MicrosegError_kTimeout                  MicrosegError_Type = 10
	MicrosegError_kUncaughtException        MicrosegError_Type = 11
	MicrosegError_kReconcile                MicrosegError_Type = 12
)

var MicrosegError_Type_name = map[int32]string{
	0:  "kNoError",
	1:  "kCasError",
	2:  "kExists",
	3:  "kInvalidArgument",
	4:  "kLogicalTimestampMismatch",
	5:  "kNotFound",
	6:  "kNotMaster",
	7:  "kNotSupported",
	8:  "kRetry",
	9:  "kRuleNotFound",
	10: "kTimeout",
	11: "kUncaughtException",
	12: "kReconcile",
}

var MicrosegError_Type_value = map[string]int32{
	"kNoError":                  0,
	"kCasError":                 1,
	"kExists":                   2,
	"kInvalidArgument":          3,
	"kLogicalTimestampMismatch": 4,
	"kNotFound":                 5,
	"kNotMaster":                6,
	"kNotSupported":             7,
	"kRetry":                    8,
	"kRuleNotFound":             9,
	"kTimeout":                  10,
	"kUncaughtException":        11,
	"kReconcile":                12,
}

func (x MicrosegError_Type) Enum() *MicrosegError_Type {
	p := new(MicrosegError_Type)
	*p = x
	return p
}

func (x MicrosegError_Type) String() string {
	return proto.EnumName(MicrosegError_Type_name, int32(x))
}

func (x *MicrosegError_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MicrosegError_Type_value, data, "MicrosegError_Type")
	if err != nil {
		return err
	}
	*x = MicrosegError_Type(value)
	return nil
}

func (MicrosegError_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2870914fe5218f4f, []int{0, 0}
}

type MicrosegError struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MicrosegError) Reset()         { *m = MicrosegError{} }
func (m *MicrosegError) String() string { return proto.CompactTextString(m) }
func (*MicrosegError) ProtoMessage()    {}
func (*MicrosegError) Descriptor() ([]byte, []int) {
	return fileDescriptor_2870914fe5218f4f, []int{0}
}

func (m *MicrosegError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrosegError.Unmarshal(m, b)
}
func (m *MicrosegError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrosegError.Marshal(b, m, deterministic)
}
func (m *MicrosegError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrosegError.Merge(m, src)
}
func (m *MicrosegError) XXX_Size() int {
	return xxx_messageInfo_MicrosegError.Size(m)
}
func (m *MicrosegError) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrosegError.DiscardUnknown(m)
}

var xxx_messageInfo_MicrosegError proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("nutanix.microseg.MicrosegError_Type", MicrosegError_Type_name, MicrosegError_Type_value)
	proto.RegisterType((*MicrosegError)(nil), "nutanix.microseg.MicrosegError")
}

func init() { proto.RegisterFile("microseg/microseg_error.proto", fileDescriptor_2870914fe5218f4f) }

var fileDescriptor_2870914fe5218f4f = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0x73, 0x31,
	0x10, 0xc5, 0xbf, 0x7e, 0xd6, 0xfe, 0x99, 0xb6, 0x32, 0x86, 0x22, 0xb8, 0xe8, 0xa6, 0x0f, 0x50,
	0x37, 0xbe, 0x80, 0x95, 0x0a, 0x82, 0x2d, 0x52, 0xeb, 0xc6, 0x8d, 0x84, 0x74, 0xb8, 0x0d, 0xb9,
	0x37, 0x13, 0x92, 0x89, 0xb4, 0xef, 0xec, 0x33, 0x88, 0xdc, 0xab, 0x15, 0x74, 0x37, 0xbf, 0x39,
	0xc3, 0x39, 0xc3, 0x81, 0x49, 0x65, 0x4d, 0xe4, 0x44, 0xc5, 0xd5, 0x71, 0x78, 0xa5, 0x18, 0x39,
	0xce, 0x42, 0x64, 0x61, 0x85, 0x3e, 0x8b, 0xf6, 0x76, 0x3f, 0x3b, 0xaa, 0xd3, 0x8f, 0x16, 0x8c,
	0x96, 0xdf, 0xb0, 0xa8, 0x2f, 0xa7, 0xef, 0x2d, 0x68, 0x6f, 0x0e, 0x81, 0xd4, 0x10, 0x7a, 0x6e,
	0xc5, 0xcd, 0x12, 0xff, 0xa9, 0x11, 0xf4, 0xdd, 0xad, 0x4e, 0x5f, 0xd8, 0x52, 0x03, 0xe8, 0xba,
	0xc5, 0xde, 0x26, 0x49, 0xf8, 0x5f, 0x8d, 0x01, 0xdd, 0xbd, 0x7f, 0xd3, 0xa5, 0xdd, 0xde, 0xc4,
	0x22, 0x57, 0xe4, 0x05, 0x4f, 0xd4, 0x04, 0x2e, 0xdd, 0x03, 0x17, 0xd6, 0xe8, 0x72, 0x63, 0x2b,
	0x4a, 0xa2, 0xab, 0xb0, 0xb4, 0xa9, 0xd2, 0x62, 0x76, 0xd8, 0x6e, 0x0c, 0x57, 0x2c, 0x77, 0x9c,
	0xfd, 0x16, 0x4f, 0xd5, 0x19, 0x40, 0x8d, 0x4b, 0x9d, 0x84, 0x22, 0x76, 0xd4, 0x39, 0x8c, 0x6a,
	0x7e, 0xca, 0x21, 0x70, 0x14, 0xda, 0x62, 0x57, 0x01, 0x74, 0xdc, 0x9a, 0x24, 0x1e, 0xb0, 0xd7,
	0xc8, 0xeb, 0x5c, 0xd2, 0x8f, 0x43, 0xbf, 0xf9, 0xb7, 0x0e, 0xe2, 0x2c, 0x08, 0xea, 0x02, 0x94,
	0x7b, 0xf6, 0x46, 0xe7, 0x62, 0x27, 0x8b, 0xbd, 0xa1, 0x20, 0x96, 0x3d, 0x0e, 0x9a, 0x9c, 0x35,
	0x19, 0xf6, 0xc6, 0x96, 0x84, 0xc3, 0xf9, 0x35, 0x8c, 0x0d, 0x57, 0xb3, 0xbf, 0xc5, 0xcc, 0xd5,
	0xaf, 0x56, 0x1e, 0xeb, 0xfa, 0x5e, 0x7a, 0x47, 0xf5, 0x33, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xe5,
	0xd5, 0x1b, 0x68, 0x01, 0x00, 0x00,
}
