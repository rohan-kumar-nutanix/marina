// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microseg/microseg_interface.proto

package microseg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/nutanix-core/acs-aos-go/nutanix/util-slbufs/util/sl_bufs/net"
	math "math"
)

import (
	"errors"
	util_net "github.com/nutanix-core/acs-aos-go/nutanix/util-go/net"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Mode of operation of Flow, currently used for reservation of memory.
type MicrosegConfigSpec_MicrosegConfigMode int32

const (
	MicrosegConfigSpec_kDefault MicrosegConfigSpec_MicrosegConfigMode = 1
	MicrosegConfigSpec_kFlow    MicrosegConfigSpec_MicrosegConfigMode = 2
)

var MicrosegConfigSpec_MicrosegConfigMode_name = map[int32]string{
	1: "kDefault",
	2: "kFlow",
}

var MicrosegConfigSpec_MicrosegConfigMode_value = map[string]int32{
	"kDefault": 1,
	"kFlow":    2,
}

func (x MicrosegConfigSpec_MicrosegConfigMode) Enum() *MicrosegConfigSpec_MicrosegConfigMode {
	p := new(MicrosegConfigSpec_MicrosegConfigMode)
	*p = x
	return p
}

func (x MicrosegConfigSpec_MicrosegConfigMode) String() string {
	return proto.EnumName(MicrosegConfigSpec_MicrosegConfigMode_name, int32(x))
}

func (x *MicrosegConfigSpec_MicrosegConfigMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MicrosegConfigSpec_MicrosegConfigMode_value, data, "MicrosegConfigSpec_MicrosegConfigMode")
	if err != nil {
		return err
	}
	*x = MicrosegConfigSpec_MicrosegConfigMode(value)
	return nil
}

func (MicrosegConfigSpec_MicrosegConfigMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{11, 0}
}

type NetworkSecurityRulesImportArg_RequestType int32

const (
	// Apply the imported policy.
	NetworkSecurityRulesImportArg_kAPPLY NetworkSecurityRulesImportArg_RequestType = 1
	// Return what will change if the policy will be imported.
	NetworkSecurityRulesImportArg_kDRYRUN NetworkSecurityRulesImportArg_RequestType = 2
)

var NetworkSecurityRulesImportArg_RequestType_name = map[int32]string{
	1: "kAPPLY",
	2: "kDRYRUN",
}

var NetworkSecurityRulesImportArg_RequestType_value = map[string]int32{
	"kAPPLY":  1,
	"kDRYRUN": 2,
}

func (x NetworkSecurityRulesImportArg_RequestType) Enum() *NetworkSecurityRulesImportArg_RequestType {
	p := new(NetworkSecurityRulesImportArg_RequestType)
	*p = x
	return p
}

func (x NetworkSecurityRulesImportArg_RequestType) String() string {
	return proto.EnumName(NetworkSecurityRulesImportArg_RequestType_name, int32(x))
}

func (x *NetworkSecurityRulesImportArg_RequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkSecurityRulesImportArg_RequestType_value, data, "NetworkSecurityRulesImportArg_RequestType")
	if err != nil {
		return err
	}
	*x = NetworkSecurityRulesImportArg_RequestType(value)
	return nil
}

func (NetworkSecurityRulesImportArg_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{18, 0}
}

type NetworkSecurityRuleCreateArg struct {
	// Network security rule spec used to create the network security rule.
	Spec *NetworkSecurityRuleCreateSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	// Task UUID. This is used as an idempotence token.
	TaskUuid             []byte   `protobuf:"bytes,2,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleCreateArg) Reset()         { *m = NetworkSecurityRuleCreateArg{} }
func (m *NetworkSecurityRuleCreateArg) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleCreateArg) ProtoMessage()    {}
func (*NetworkSecurityRuleCreateArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{0}
}

func (m *NetworkSecurityRuleCreateArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleCreateArg.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleCreateArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleCreateArg.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleCreateArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleCreateArg.Merge(m, src)
}
func (m *NetworkSecurityRuleCreateArg) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleCreateArg.Size(m)
}
func (m *NetworkSecurityRuleCreateArg) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleCreateArg.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleCreateArg proto.InternalMessageInfo

func (m *NetworkSecurityRuleCreateArg) GetSpec() *NetworkSecurityRuleCreateSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *NetworkSecurityRuleCreateArg) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

type NetworkSecurityRuleCreateRet struct {
	// A task to poll for completion. On success, the task will contain a
	// NetworkSecurityRuleCreateTaskRet.
	TaskUuid             []byte   `protobuf:"bytes,1,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleCreateRet) Reset()         { *m = NetworkSecurityRuleCreateRet{} }
func (m *NetworkSecurityRuleCreateRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleCreateRet) ProtoMessage()    {}
func (*NetworkSecurityRuleCreateRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{1}
}

func (m *NetworkSecurityRuleCreateRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleCreateRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleCreateRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleCreateRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleCreateRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleCreateRet.Merge(m, src)
}
func (m *NetworkSecurityRuleCreateRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleCreateRet.Size(m)
}
func (m *NetworkSecurityRuleCreateRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleCreateRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleCreateRet proto.InternalMessageInfo

func (m *NetworkSecurityRuleCreateRet) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

type NetworkSecurityRuleCreateTaskRet struct {
	// Newly created network security rule UUID.
	NetworkSecurityRuleUuid []byte   `protobuf:"bytes,1,opt,name=network_security_rule_uuid,json=networkSecurityRuleUuid" json:"network_security_rule_uuid,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *NetworkSecurityRuleCreateTaskRet) Reset()         { *m = NetworkSecurityRuleCreateTaskRet{} }
func (m *NetworkSecurityRuleCreateTaskRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleCreateTaskRet) ProtoMessage()    {}
func (*NetworkSecurityRuleCreateTaskRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{2}
}

func (m *NetworkSecurityRuleCreateTaskRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleCreateTaskRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleCreateTaskRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleCreateTaskRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleCreateTaskRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleCreateTaskRet.Merge(m, src)
}
func (m *NetworkSecurityRuleCreateTaskRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleCreateTaskRet.Size(m)
}
func (m *NetworkSecurityRuleCreateTaskRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleCreateTaskRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleCreateTaskRet proto.InternalMessageInfo

func (m *NetworkSecurityRuleCreateTaskRet) GetNetworkSecurityRuleUuid() []byte {
	if m != nil {
		return m.NetworkSecurityRuleUuid
	}
	return nil
}

type NetworkSecurityRuleUpdateArg struct {
	// UUID of the network security rule to update.
	NetworkSecurityRuleUuid []byte `protobuf:"bytes,1,opt,name=network_security_rule_uuid,json=networkSecurityRuleUuid" json:"network_security_rule_uuid,omitempty"`
	// Network security rule spec used to update the network security rule.
	Spec *NetworkSecurityRuleUpdateSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Current logical timestamp of the network security rule.
	LogicalTimestamp *int64 `protobuf:"varint,3,opt,name=logical_timestamp,json=logicalTimestamp,def=-1" json:"logical_timestamp,omitempty"`
	// Task UUID. This is used as an idempotence token.
	TaskUuid             []byte   `protobuf:"bytes,4,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleUpdateArg) Reset()         { *m = NetworkSecurityRuleUpdateArg{} }
func (m *NetworkSecurityRuleUpdateArg) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleUpdateArg) ProtoMessage()    {}
func (*NetworkSecurityRuleUpdateArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{3}
}

func (m *NetworkSecurityRuleUpdateArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleUpdateArg.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleUpdateArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleUpdateArg.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleUpdateArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleUpdateArg.Merge(m, src)
}
func (m *NetworkSecurityRuleUpdateArg) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleUpdateArg.Size(m)
}
func (m *NetworkSecurityRuleUpdateArg) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleUpdateArg.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleUpdateArg proto.InternalMessageInfo

const Default_NetworkSecurityRuleUpdateArg_LogicalTimestamp int64 = -1

func (m *NetworkSecurityRuleUpdateArg) GetNetworkSecurityRuleUuid() []byte {
	if m != nil {
		return m.NetworkSecurityRuleUuid
	}
	return nil
}

func (m *NetworkSecurityRuleUpdateArg) GetSpec() *NetworkSecurityRuleUpdateSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *NetworkSecurityRuleUpdateArg) GetLogicalTimestamp() int64 {
	if m != nil && m.LogicalTimestamp != nil {
		return *m.LogicalTimestamp
	}
	return Default_NetworkSecurityRuleUpdateArg_LogicalTimestamp
}

func (m *NetworkSecurityRuleUpdateArg) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

type NetworkSecurityRuleUpdateRet struct {
	// A task to poll for completion. On success, the task will contain a
	// NetworkSecurityRuleUpdateTaskRet.
	TaskUuid             []byte   `protobuf:"bytes,1,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleUpdateRet) Reset()         { *m = NetworkSecurityRuleUpdateRet{} }
func (m *NetworkSecurityRuleUpdateRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleUpdateRet) ProtoMessage()    {}
func (*NetworkSecurityRuleUpdateRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{4}
}

func (m *NetworkSecurityRuleUpdateRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleUpdateRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleUpdateRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleUpdateRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleUpdateRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleUpdateRet.Merge(m, src)
}
func (m *NetworkSecurityRuleUpdateRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleUpdateRet.Size(m)
}
func (m *NetworkSecurityRuleUpdateRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleUpdateRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleUpdateRet proto.InternalMessageInfo

func (m *NetworkSecurityRuleUpdateRet) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

type NetworkSecurityRuleUpdateTaskRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleUpdateTaskRet) Reset()         { *m = NetworkSecurityRuleUpdateTaskRet{} }
func (m *NetworkSecurityRuleUpdateTaskRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleUpdateTaskRet) ProtoMessage()    {}
func (*NetworkSecurityRuleUpdateTaskRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{5}
}

func (m *NetworkSecurityRuleUpdateTaskRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleUpdateTaskRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleUpdateTaskRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleUpdateTaskRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleUpdateTaskRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleUpdateTaskRet.Merge(m, src)
}
func (m *NetworkSecurityRuleUpdateTaskRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleUpdateTaskRet.Size(m)
}
func (m *NetworkSecurityRuleUpdateTaskRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleUpdateTaskRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleUpdateTaskRet proto.InternalMessageInfo

type NetworkSecurityRuleGetArg struct {
	// List of network security rule UUIDs to lookup.
	NetworkSecurityRuleUuidList [][]byte `protobuf:"bytes,1,rep,name=network_security_rule_uuid_list,json=networkSecurityRuleUuidList" json:"network_security_rule_uuid_list,omitempty"`
	// List of network security rule types to use as a filter.
	NetworkSecurityRuleTypeList []NetworkSecurityRuleType `protobuf:"varint,2,rep,name=network_security_rule_type_list,json=networkSecurityRuleTypeList,enum=nutanix.microseg.NetworkSecurityRuleType" json:"network_security_rule_type_list,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                  `json:"-"`
	XXX_unrecognized            []byte                    `json:"-"`
	XXX_sizecache               int32                     `json:"-"`
}

func (m *NetworkSecurityRuleGetArg) Reset()         { *m = NetworkSecurityRuleGetArg{} }
func (m *NetworkSecurityRuleGetArg) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleGetArg) ProtoMessage()    {}
func (*NetworkSecurityRuleGetArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{6}
}

func (m *NetworkSecurityRuleGetArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleGetArg.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleGetArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleGetArg.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleGetArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleGetArg.Merge(m, src)
}
func (m *NetworkSecurityRuleGetArg) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleGetArg.Size(m)
}
func (m *NetworkSecurityRuleGetArg) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleGetArg.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleGetArg proto.InternalMessageInfo

func (m *NetworkSecurityRuleGetArg) GetNetworkSecurityRuleUuidList() [][]byte {
	if m != nil {
		return m.NetworkSecurityRuleUuidList
	}
	return nil
}

func (m *NetworkSecurityRuleGetArg) GetNetworkSecurityRuleTypeList() []NetworkSecurityRuleType {
	if m != nil {
		return m.NetworkSecurityRuleTypeList
	}
	return nil
}

type NetworkSecurityRuleGetRet struct {
	// List of network security rule objects.
	NetworkSecurityRuleList []*NetworkSecurityRuleInfo `protobuf:"bytes,1,rep,name=network_security_rule_list,json=networkSecurityRuleList" json:"network_security_rule_list,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                   `json:"-"`
	XXX_unrecognized        []byte                     `json:"-"`
	XXX_sizecache           int32                      `json:"-"`
}

func (m *NetworkSecurityRuleGetRet) Reset()         { *m = NetworkSecurityRuleGetRet{} }
func (m *NetworkSecurityRuleGetRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleGetRet) ProtoMessage()    {}
func (*NetworkSecurityRuleGetRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{7}
}

func (m *NetworkSecurityRuleGetRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleGetRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleGetRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleGetRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleGetRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleGetRet.Merge(m, src)
}
func (m *NetworkSecurityRuleGetRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleGetRet.Size(m)
}
func (m *NetworkSecurityRuleGetRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleGetRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleGetRet proto.InternalMessageInfo

func (m *NetworkSecurityRuleGetRet) GetNetworkSecurityRuleList() []*NetworkSecurityRuleInfo {
	if m != nil {
		return m.NetworkSecurityRuleList
	}
	return nil
}

type NetworkSecurityRuleDeleteArg struct {
	// UUID of the network security rule to delete.
	NetworkSecurityRuleUuid []byte `protobuf:"bytes,1,opt,name=network_security_rule_uuid,json=networkSecurityRuleUuid" json:"network_security_rule_uuid,omitempty"`
	// Current logical timestamp of the network security rule.
	LogicalTimestamp *int64 `protobuf:"varint,2,opt,name=logical_timestamp,json=logicalTimestamp,def=-1" json:"logical_timestamp,omitempty"`
	// Task UUID. This is used as an idempotence token.
	TaskUuid             []byte   `protobuf:"bytes,3,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleDeleteArg) Reset()         { *m = NetworkSecurityRuleDeleteArg{} }
func (m *NetworkSecurityRuleDeleteArg) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleDeleteArg) ProtoMessage()    {}
func (*NetworkSecurityRuleDeleteArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{8}
}

func (m *NetworkSecurityRuleDeleteArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleDeleteArg.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleDeleteArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleDeleteArg.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleDeleteArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleDeleteArg.Merge(m, src)
}
func (m *NetworkSecurityRuleDeleteArg) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleDeleteArg.Size(m)
}
func (m *NetworkSecurityRuleDeleteArg) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleDeleteArg.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleDeleteArg proto.InternalMessageInfo

const Default_NetworkSecurityRuleDeleteArg_LogicalTimestamp int64 = -1

func (m *NetworkSecurityRuleDeleteArg) GetNetworkSecurityRuleUuid() []byte {
	if m != nil {
		return m.NetworkSecurityRuleUuid
	}
	return nil
}

func (m *NetworkSecurityRuleDeleteArg) GetLogicalTimestamp() int64 {
	if m != nil && m.LogicalTimestamp != nil {
		return *m.LogicalTimestamp
	}
	return Default_NetworkSecurityRuleDeleteArg_LogicalTimestamp
}

func (m *NetworkSecurityRuleDeleteArg) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

type NetworkSecurityRuleDeleteRet struct {
	// A task to poll for completion. On success, the task will contain a
	// NetworkSecurityRuleDeleteTaskRet.
	TaskUuid             []byte   `protobuf:"bytes,1,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleDeleteRet) Reset()         { *m = NetworkSecurityRuleDeleteRet{} }
func (m *NetworkSecurityRuleDeleteRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleDeleteRet) ProtoMessage()    {}
func (*NetworkSecurityRuleDeleteRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{9}
}

func (m *NetworkSecurityRuleDeleteRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleDeleteRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleDeleteRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleDeleteRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleDeleteRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleDeleteRet.Merge(m, src)
}
func (m *NetworkSecurityRuleDeleteRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleDeleteRet.Size(m)
}
func (m *NetworkSecurityRuleDeleteRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleDeleteRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleDeleteRet proto.InternalMessageInfo

func (m *NetworkSecurityRuleDeleteRet) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

type NetworkSecurityRuleDeleteTaskRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRuleDeleteTaskRet) Reset()         { *m = NetworkSecurityRuleDeleteTaskRet{} }
func (m *NetworkSecurityRuleDeleteTaskRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRuleDeleteTaskRet) ProtoMessage()    {}
func (*NetworkSecurityRuleDeleteTaskRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{10}
}

func (m *NetworkSecurityRuleDeleteTaskRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRuleDeleteTaskRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRuleDeleteTaskRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRuleDeleteTaskRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRuleDeleteTaskRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRuleDeleteTaskRet.Merge(m, src)
}
func (m *NetworkSecurityRuleDeleteTaskRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRuleDeleteTaskRet.Size(m)
}
func (m *NetworkSecurityRuleDeleteTaskRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRuleDeleteTaskRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRuleDeleteTaskRet proto.InternalMessageInfo

type MicrosegConfigSpec struct {
	// Microseg feature is enabled or disabled.
	Enable *bool `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	// Mode in which the feature is enabled. Default mode reserves the memory
	// for Microseg and Cadmus. Flow mode reserves the memory for unified hash
	// table, Policy Hit logging, IPFix and other Flow features.
	Mode *MicrosegConfigSpec_MicrosegConfigMode `protobuf:"varint,2,opt,name=mode,enum=nutanix.microseg.MicrosegConfigSpec_MicrosegConfigMode,def=1" json:"mode,omitempty"`
	// UUID of the host, on which microseg should be disabled.
	HostUuidForRemoval   []byte   `protobuf:"bytes,3,opt,name=host_uuid_for_removal,json=hostUuidForRemoval" json:"host_uuid_for_removal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MicrosegConfigSpec) Reset()         { *m = MicrosegConfigSpec{} }
func (m *MicrosegConfigSpec) String() string { return proto.CompactTextString(m) }
func (*MicrosegConfigSpec) ProtoMessage()    {}
func (*MicrosegConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{11}
}

func (m *MicrosegConfigSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrosegConfigSpec.Unmarshal(m, b)
}
func (m *MicrosegConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrosegConfigSpec.Marshal(b, m, deterministic)
}
func (m *MicrosegConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrosegConfigSpec.Merge(m, src)
}
func (m *MicrosegConfigSpec) XXX_Size() int {
	return xxx_messageInfo_MicrosegConfigSpec.Size(m)
}
func (m *MicrosegConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrosegConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MicrosegConfigSpec proto.InternalMessageInfo

const Default_MicrosegConfigSpec_Mode MicrosegConfigSpec_MicrosegConfigMode = MicrosegConfigSpec_kDefault

func (m *MicrosegConfigSpec) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

func (m *MicrosegConfigSpec) GetMode() MicrosegConfigSpec_MicrosegConfigMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_MicrosegConfigSpec_Mode
}

func (m *MicrosegConfigSpec) GetHostUuidForRemoval() []byte {
	if m != nil {
		return m.HostUuidForRemoval
	}
	return nil
}

type MicrosegConfigGetArg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MicrosegConfigGetArg) Reset()         { *m = MicrosegConfigGetArg{} }
func (m *MicrosegConfigGetArg) String() string { return proto.CompactTextString(m) }
func (*MicrosegConfigGetArg) ProtoMessage()    {}
func (*MicrosegConfigGetArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{12}
}

func (m *MicrosegConfigGetArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrosegConfigGetArg.Unmarshal(m, b)
}
func (m *MicrosegConfigGetArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrosegConfigGetArg.Marshal(b, m, deterministic)
}
func (m *MicrosegConfigGetArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrosegConfigGetArg.Merge(m, src)
}
func (m *MicrosegConfigGetArg) XXX_Size() int {
	return xxx_messageInfo_MicrosegConfigGetArg.Size(m)
}
func (m *MicrosegConfigGetArg) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrosegConfigGetArg.DiscardUnknown(m)
}

var xxx_messageInfo_MicrosegConfigGetArg proto.InternalMessageInfo

type MicrosegConfigGetRet struct {
	// Microseg config parameters.
	Config               *MicrosegConfigSpec `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MicrosegConfigGetRet) Reset()         { *m = MicrosegConfigGetRet{} }
func (m *MicrosegConfigGetRet) String() string { return proto.CompactTextString(m) }
func (*MicrosegConfigGetRet) ProtoMessage()    {}
func (*MicrosegConfigGetRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{13}
}

func (m *MicrosegConfigGetRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrosegConfigGetRet.Unmarshal(m, b)
}
func (m *MicrosegConfigGetRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrosegConfigGetRet.Marshal(b, m, deterministic)
}
func (m *MicrosegConfigGetRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrosegConfigGetRet.Merge(m, src)
}
func (m *MicrosegConfigGetRet) XXX_Size() int {
	return xxx_messageInfo_MicrosegConfigGetRet.Size(m)
}
func (m *MicrosegConfigGetRet) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrosegConfigGetRet.DiscardUnknown(m)
}

var xxx_messageInfo_MicrosegConfigGetRet proto.InternalMessageInfo

func (m *MicrosegConfigGetRet) GetConfig() *MicrosegConfigSpec {
	if m != nil {
		return m.Config
	}
	return nil
}

type MicrosegConfigSetArg struct {
	// Microseg config parameters.
	Config               *MicrosegConfigSpec `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MicrosegConfigSetArg) Reset()         { *m = MicrosegConfigSetArg{} }
func (m *MicrosegConfigSetArg) String() string { return proto.CompactTextString(m) }
func (*MicrosegConfigSetArg) ProtoMessage()    {}
func (*MicrosegConfigSetArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{14}
}

func (m *MicrosegConfigSetArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrosegConfigSetArg.Unmarshal(m, b)
}
func (m *MicrosegConfigSetArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrosegConfigSetArg.Marshal(b, m, deterministic)
}
func (m *MicrosegConfigSetArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrosegConfigSetArg.Merge(m, src)
}
func (m *MicrosegConfigSetArg) XXX_Size() int {
	return xxx_messageInfo_MicrosegConfigSetArg.Size(m)
}
func (m *MicrosegConfigSetArg) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrosegConfigSetArg.DiscardUnknown(m)
}

var xxx_messageInfo_MicrosegConfigSetArg proto.InternalMessageInfo

func (m *MicrosegConfigSetArg) GetConfig() *MicrosegConfigSpec {
	if m != nil {
		return m.Config
	}
	return nil
}

type MicrosegConfigSetRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MicrosegConfigSetRet) Reset()         { *m = MicrosegConfigSetRet{} }
func (m *MicrosegConfigSetRet) String() string { return proto.CompactTextString(m) }
func (*MicrosegConfigSetRet) ProtoMessage()    {}
func (*MicrosegConfigSetRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{15}
}

func (m *MicrosegConfigSetRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrosegConfigSetRet.Unmarshal(m, b)
}
func (m *MicrosegConfigSetRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrosegConfigSetRet.Marshal(b, m, deterministic)
}
func (m *MicrosegConfigSetRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrosegConfigSetRet.Merge(m, src)
}
func (m *MicrosegConfigSetRet) XXX_Size() int {
	return xxx_messageInfo_MicrosegConfigSetRet.Size(m)
}
func (m *MicrosegConfigSetRet) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrosegConfigSetRet.DiscardUnknown(m)
}

var xxx_messageInfo_MicrosegConfigSetRet proto.InternalMessageInfo

type NetworkSecurityRulesExportArg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRulesExportArg) Reset()         { *m = NetworkSecurityRulesExportArg{} }
func (m *NetworkSecurityRulesExportArg) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesExportArg) ProtoMessage()    {}
func (*NetworkSecurityRulesExportArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{16}
}

func (m *NetworkSecurityRulesExportArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesExportArg.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesExportArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesExportArg.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesExportArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesExportArg.Merge(m, src)
}
func (m *NetworkSecurityRulesExportArg) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesExportArg.Size(m)
}
func (m *NetworkSecurityRulesExportArg) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesExportArg.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesExportArg proto.InternalMessageInfo

type NetworkSecurityRulesExportRet struct {
	// Response status. kNoError means the rpc was successful, any other error
	// code means that the rpc failed.
	ErrorCode *MicrosegError_Type `protobuf:"varint,1,opt,name=error_code,json=errorCode,enum=nutanix.microseg.MicrosegError_Type" json:"error_code,omitempty"`
	// String message describing the error.
	ErrorDetails *string `protobuf:"bytes,2,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	// If successful then contains the binary exported data.
	ExportData           []byte   `protobuf:"bytes,3,opt,name=export_data,json=exportData" json:"export_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRulesExportRet) Reset()         { *m = NetworkSecurityRulesExportRet{} }
func (m *NetworkSecurityRulesExportRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesExportRet) ProtoMessage()    {}
func (*NetworkSecurityRulesExportRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{17}
}

func (m *NetworkSecurityRulesExportRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesExportRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesExportRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesExportRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesExportRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesExportRet.Merge(m, src)
}
func (m *NetworkSecurityRulesExportRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesExportRet.Size(m)
}
func (m *NetworkSecurityRulesExportRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesExportRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesExportRet proto.InternalMessageInfo

func (m *NetworkSecurityRulesExportRet) GetErrorCode() MicrosegError_Type {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return MicrosegError_kNoError
}

func (m *NetworkSecurityRulesExportRet) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

func (m *NetworkSecurityRulesExportRet) GetExportData() []byte {
	if m != nil {
		return m.ExportData
	}
	return nil
}

type NetworkSecurityRulesImportArg struct {
	// (Required) : Type of import request.
	RequestType *NetworkSecurityRulesImportArg_RequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,enum=nutanix.microseg.NetworkSecurityRulesImportArg_RequestType" json:"request_type,omitempty"`
	// Binary policy data for import.
	ImportData           []byte   `protobuf:"bytes,2,opt,name=import_data,json=importData" json:"import_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRulesImportArg) Reset()         { *m = NetworkSecurityRulesImportArg{} }
func (m *NetworkSecurityRulesImportArg) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesImportArg) ProtoMessage()    {}
func (*NetworkSecurityRulesImportArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{18}
}

func (m *NetworkSecurityRulesImportArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesImportArg.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesImportArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesImportArg.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesImportArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesImportArg.Merge(m, src)
}
func (m *NetworkSecurityRulesImportArg) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesImportArg.Size(m)
}
func (m *NetworkSecurityRulesImportArg) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesImportArg.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesImportArg proto.InternalMessageInfo

func (m *NetworkSecurityRulesImportArg) GetRequestType() NetworkSecurityRulesImportArg_RequestType {
	if m != nil && m.RequestType != nil {
		return *m.RequestType
	}
	return NetworkSecurityRulesImportArg_kAPPLY
}

func (m *NetworkSecurityRulesImportArg) GetImportData() []byte {
	if m != nil {
		return m.ImportData
	}
	return nil
}

type NetworkSecurityRulesImportRet struct {
	// Response status. kNoError means the rpc was successful, any other error
	// code means that the rpc failed.
	ErrorCode *MicrosegError_Type `protobuf:"varint,1,opt,name=error_code,json=errorCode,enum=nutanix.microseg.MicrosegError_Type" json:"error_code,omitempty"`
	// String message describing the error.
	ErrorDetails *string `protobuf:"bytes,2,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	// In case of DRYRUN, this will be filled with data on what the impact of
	// import will be.
	DiffData *NetworkSecurityRulesDiff `protobuf:"bytes,3,opt,name=diff_data,json=diffData" json:"diff_data,omitempty"`
	// In case of APPLY, the task uuid is returned.
	TaskUuid             []byte   `protobuf:"bytes,4,opt,name=task_uuid,json=taskUuid" json:"task_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSecurityRulesImportRet) Reset()         { *m = NetworkSecurityRulesImportRet{} }
func (m *NetworkSecurityRulesImportRet) String() string { return proto.CompactTextString(m) }
func (*NetworkSecurityRulesImportRet) ProtoMessage()    {}
func (*NetworkSecurityRulesImportRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_814d71f0335545b9, []int{19}
}

func (m *NetworkSecurityRulesImportRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSecurityRulesImportRet.Unmarshal(m, b)
}
func (m *NetworkSecurityRulesImportRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSecurityRulesImportRet.Marshal(b, m, deterministic)
}
func (m *NetworkSecurityRulesImportRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSecurityRulesImportRet.Merge(m, src)
}
func (m *NetworkSecurityRulesImportRet) XXX_Size() int {
	return xxx_messageInfo_NetworkSecurityRulesImportRet.Size(m)
}
func (m *NetworkSecurityRulesImportRet) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSecurityRulesImportRet.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSecurityRulesImportRet proto.InternalMessageInfo

func (m *NetworkSecurityRulesImportRet) GetErrorCode() MicrosegError_Type {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return MicrosegError_kNoError
}

func (m *NetworkSecurityRulesImportRet) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

func (m *NetworkSecurityRulesImportRet) GetDiffData() *NetworkSecurityRulesDiff {
	if m != nil {
		return m.DiffData
	}
	return nil
}

func (m *NetworkSecurityRulesImportRet) GetTaskUuid() []byte {
	if m != nil {
		return m.TaskUuid
	}
	return nil
}

func init() {
	proto.RegisterEnum("nutanix.microseg.MicrosegConfigSpec_MicrosegConfigMode", MicrosegConfigSpec_MicrosegConfigMode_name, MicrosegConfigSpec_MicrosegConfigMode_value)
	proto.RegisterEnum("nutanix.microseg.NetworkSecurityRulesImportArg_RequestType", NetworkSecurityRulesImportArg_RequestType_name, NetworkSecurityRulesImportArg_RequestType_value)
	proto.RegisterType((*NetworkSecurityRuleCreateArg)(nil), "nutanix.microseg.NetworkSecurityRuleCreateArg")
	proto.RegisterType((*NetworkSecurityRuleCreateRet)(nil), "nutanix.microseg.NetworkSecurityRuleCreateRet")
	proto.RegisterType((*NetworkSecurityRuleCreateTaskRet)(nil), "nutanix.microseg.NetworkSecurityRuleCreateTaskRet")
	proto.RegisterType((*NetworkSecurityRuleUpdateArg)(nil), "nutanix.microseg.NetworkSecurityRuleUpdateArg")
	proto.RegisterType((*NetworkSecurityRuleUpdateRet)(nil), "nutanix.microseg.NetworkSecurityRuleUpdateRet")
	proto.RegisterType((*NetworkSecurityRuleUpdateTaskRet)(nil), "nutanix.microseg.NetworkSecurityRuleUpdateTaskRet")
	proto.RegisterType((*NetworkSecurityRuleGetArg)(nil), "nutanix.microseg.NetworkSecurityRuleGetArg")
	proto.RegisterType((*NetworkSecurityRuleGetRet)(nil), "nutanix.microseg.NetworkSecurityRuleGetRet")
	proto.RegisterType((*NetworkSecurityRuleDeleteArg)(nil), "nutanix.microseg.NetworkSecurityRuleDeleteArg")
	proto.RegisterType((*NetworkSecurityRuleDeleteRet)(nil), "nutanix.microseg.NetworkSecurityRuleDeleteRet")
	proto.RegisterType((*NetworkSecurityRuleDeleteTaskRet)(nil), "nutanix.microseg.NetworkSecurityRuleDeleteTaskRet")
	proto.RegisterType((*MicrosegConfigSpec)(nil), "nutanix.microseg.MicrosegConfigSpec")
	proto.RegisterType((*MicrosegConfigGetArg)(nil), "nutanix.microseg.MicrosegConfigGetArg")
	proto.RegisterType((*MicrosegConfigGetRet)(nil), "nutanix.microseg.MicrosegConfigGetRet")
	proto.RegisterType((*MicrosegConfigSetArg)(nil), "nutanix.microseg.MicrosegConfigSetArg")
	proto.RegisterType((*MicrosegConfigSetRet)(nil), "nutanix.microseg.MicrosegConfigSetRet")
	proto.RegisterType((*NetworkSecurityRulesExportArg)(nil), "nutanix.microseg.NetworkSecurityRulesExportArg")
	proto.RegisterType((*NetworkSecurityRulesExportRet)(nil), "nutanix.microseg.NetworkSecurityRulesExportRet")
	proto.RegisterType((*NetworkSecurityRulesImportArg)(nil), "nutanix.microseg.NetworkSecurityRulesImportArg")
	proto.RegisterType((*NetworkSecurityRulesImportRet)(nil), "nutanix.microseg.NetworkSecurityRulesImportRet")
}

func init() { proto.RegisterFile("microseg/microseg_interface.proto", fileDescriptor_814d71f0335545b9) }

var fileDescriptor_814d71f0335545b9 = []byte{
	// 963 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x41, 0x8f, 0xdb, 0x44,
	0x14, 0x66, 0x92, 0x65, 0x37, 0x79, 0x49, 0x57, 0xe9, 0xa8, 0x2c, 0xc1, 0x65, 0xb5, 0xc1, 0xa0,
	0x2a, 0x05, 0x35, 0x51, 0x73, 0x41, 0xea, 0x72, 0x59, 0x92, 0xb6, 0xaa, 0xd4, 0x56, 0x95, 0xb3,
	0x7b, 0x28, 0x07, 0x2c, 0xd7, 0x19, 0x07, 0x2b, 0xb6, 0xc7, 0x8c, 0xc7, 0x6d, 0x57, 0x5c, 0x22,
	0x71, 0x59, 0x71, 0xea, 0x0f, 0xe0, 0xc0, 0xa9, 0x12, 0xdc, 0xf7, 0x3f, 0x70, 0xe6, 0x3f, 0x20,
	0x71, 0x2a, 0x7f, 0x01, 0xcd, 0x8c, 0x93, 0xec, 0x26, 0x76, 0x3a, 0xa1, 0x88, 0x9b, 0x3d, 0xf3,
	0xde, 0xf7, 0xbe, 0xf7, 0xbd, 0x37, 0x6f, 0x06, 0x3e, 0x09, 0x7d, 0x97, 0xd1, 0x84, 0x8c, 0xbb,
	0xb3, 0x0f, 0xdb, 0x8f, 0x38, 0x61, 0x9e, 0xe3, 0x92, 0x4e, 0xcc, 0x28, 0xa7, 0xb8, 0x11, 0xa5,
	0xdc, 0x89, 0xfc, 0x97, 0x9d, 0x99, 0x85, 0xb1, 0xbf, 0xea, 0x44, 0x18, 0xa3, 0x4c, 0x39, 0xe4,
	0x6d, 0xf3, 0xd3, 0x98, 0x24, 0xd9, 0xb6, 0x91, 0x72, 0x3f, 0xe8, 0x26, 0x81, 0xfd, 0x2c, 0xf5,
	0x92, 0x6e, 0x44, 0x78, 0x97, 0xc5, 0xae, 0xda, 0x33, 0xa7, 0x08, 0x3e, 0x7e, 0x4c, 0xf8, 0x0b,
	0xca, 0x26, 0x43, 0xe2, 0xa6, 0xcc, 0xe7, 0xa7, 0x56, 0x1a, 0x90, 0x3e, 0x23, 0x0e, 0x27, 0x47,
	0x6c, 0x8c, 0xfb, 0xb0, 0x95, 0xc4, 0xc4, 0x6d, 0xa2, 0x16, 0x6a, 0xd7, 0x7a, 0xdd, 0xce, 0x32,
	0xb7, 0x4e, 0xa1, 0xf7, 0x30, 0x26, 0xae, 0x25, 0x9d, 0xf1, 0x75, 0xa8, 0x72, 0x27, 0x99, 0xd8,
	0x69, 0xea, 0x8f, 0x9a, 0xa5, 0x16, 0x6a, 0xd7, 0xad, 0x8a, 0x58, 0x38, 0x49, 0xfd, 0x91, 0x79,
	0xb8, 0x86, 0x81, 0x45, 0xf8, 0x65, 0x67, 0xb4, 0xe4, 0x6c, 0x43, 0xab, 0xd0, 0xf9, 0xd8, 0x49,
	0x26, 0x02, 0xe0, 0x10, 0x8c, 0x48, 0xd9, 0xd8, 0x49, 0x66, 0x64, 0xb3, 0x34, 0x20, 0x17, 0x11,
	0x3f, 0x8c, 0x56, 0x51, 0x64, 0x80, 0x37, 0xf9, 0x02, 0x9d, 0xc4, 0xa3, 0x4c, 0xa0, 0x77, 0x41,
	0x9f, 0xab, 0x5b, 0xda, 0x40, 0x5d, 0x15, 0xfa, 0x82, 0xba, 0x5d, 0xb8, 0x1a, 0xd0, 0xb1, 0xef,
	0x3a, 0x81, 0xcd, 0xfd, 0x90, 0x24, 0xdc, 0x09, 0xe3, 0x66, 0xb9, 0x85, 0xda, 0xe5, 0x3b, 0xa5,
	0x5b, 0xb7, 0xad, 0x46, 0xb6, 0x79, 0x3c, 0xdb, 0xbb, 0xac, 0xe8, 0x96, 0x56, 0x39, 0x54, 0xd0,
	0xb7, 0x96, 0xc3, 0xcc, 0x2d, 0x87, 0x72, 0xce, 0xca, 0x61, 0xfe, 0x81, 0xe0, 0xa3, 0x1c, 0xa3,
	0xfb, 0x84, 0x0b, 0x39, 0x07, 0x70, 0x50, 0x2c, 0xa7, 0x1d, 0xf8, 0x09, 0x6f, 0xa2, 0x56, 0xb9,
	0x5d, 0xb7, 0xae, 0x17, 0x68, 0xfa, 0xd0, 0x4f, 0x38, 0xa6, 0x45, 0x28, 0xe2, 0x5c, 0x28, 0x94,
	0x52, 0xab, 0xdc, 0xde, 0xed, 0xdd, 0xd4, 0x92, 0xfc, 0xf8, 0x34, 0x26, 0xb9, 0x01, 0xc5, 0x86,
	0x08, 0x68, 0xfe, 0x58, 0x98, 0x94, 0xd0, 0xcc, 0x2b, 0xea, 0x91, 0x79, 0x3e, 0x35, 0x4d, 0x26,
	0x0f, 0x22, 0x8f, 0xe6, 0xb6, 0x93, 0x64, 0xf1, 0x6b, 0x7e, 0xb3, 0x0e, 0x48, 0x40, 0xfe, 0x83,
	0x66, 0xcd, 0xed, 0xb3, 0x92, 0x6e, 0x9f, 0x95, 0xb5, 0xfa, 0x4c, 0x51, 0xfd, 0x97, 0x7d, 0xa6,
	0x9c, 0x67, 0x7d, 0xf6, 0x27, 0x02, 0xfc, 0x28, 0x93, 0xb2, 0x4f, 0x23, 0xcf, 0x1f, 0x8b, 0x33,
	0x83, 0xf7, 0x60, 0x9b, 0x44, 0xce, 0xb3, 0x80, 0x48, 0xd0, 0x8a, 0x95, 0xfd, 0xe1, 0x13, 0xd8,
	0x0a, 0xe9, 0x88, 0xc8, 0x84, 0x76, 0x7b, 0x5f, 0xae, 0x56, 0x63, 0x15, 0x6b, 0x69, 0xe9, 0x11,
	0x1d, 0x91, 0x3b, 0x95, 0xc9, 0x80, 0x78, 0x4e, 0x1a, 0x70, 0x4b, 0xc2, 0xe1, 0xdb, 0xf0, 0xc1,
	0x77, 0x34, 0xe1, 0xaa, 0x7d, 0x3d, 0xca, 0x6c, 0x46, 0x42, 0xfa, 0xdc, 0x09, 0x32, 0x3d, 0xb0,
	0xd8, 0x14, 0x29, 0xdd, 0xa3, 0xcc, 0x52, 0x3b, 0xe6, 0xad, 0x65, 0xde, 0x02, 0x18, 0xd7, 0x61,
	0x0e, 0xdd, 0x40, 0xb8, 0x0a, 0xef, 0x4f, 0xee, 0x05, 0xf4, 0x45, 0xa3, 0x64, 0xee, 0xc1, 0xb5,
	0xcb, 0xe6, 0xea, 0x24, 0x99, 0xc7, 0x39, 0xeb, 0x42, 0xd8, 0xaf, 0x60, 0xdb, 0x95, 0xff, 0xd9,
	0x4c, 0xff, 0x4c, 0x27, 0x55, 0x2b, 0xf3, 0x59, 0x45, 0x1d, 0xaa, 0x73, 0xfb, 0x6e, 0xa8, 0x7b,
	0x39, 0xa8, 0xa2, 0x86, 0x07, 0xb0, 0x9f, 0x53, 0xe7, 0xe4, 0xee, 0xcb, 0x98, 0x32, 0x99, 0xe4,
	0x6f, 0x68, 0x9d, 0x85, 0x48, 0xb7, 0x0f, 0x20, 0xef, 0x4a, 0xdb, 0x15, 0xd5, 0x45, 0xb2, 0xba,
	0x6b, 0xc8, 0xdd, 0x95, 0xf7, 0xaa, 0x3c, 0xf0, 0x55, 0xe9, 0xd7, 0x17, 0xe2, 0x7f, 0x0a, 0x57,
	0x14, 0xc8, 0x88, 0x70, 0xc7, 0x0f, 0x12, 0xd9, 0x25, 0x55, 0xab, 0x2e, 0x17, 0x07, 0x6a, 0x0d,
	0x1f, 0x40, 0x8d, 0xc8, 0xb0, 0xf6, 0xc8, 0xe1, 0x4e, 0x56, 0x60, 0x50, 0x4b, 0x03, 0x87, 0x3b,
	0xe6, 0xef, 0x05, 0x64, 0x1f, 0x84, 0x59, 0x3a, 0xf8, 0x5b, 0xa8, 0x33, 0xf2, 0x7d, 0x4a, 0x12,
	0x2e, 0x27, 0x55, 0x46, 0xf7, 0x50, 0x6b, 0x34, 0x2c, 0x60, 0x3a, 0x96, 0xc2, 0x90, 0x59, 0xd4,
	0xd8, 0xe2, 0x47, 0x50, 0xf4, 0xc3, 0x05, 0x45, 0x75, 0x15, 0x83, 0x5a, 0x92, 0x14, 0x6f, 0x40,
	0xed, 0x82, 0x33, 0x06, 0xd8, 0x9e, 0x1c, 0x3d, 0x79, 0xf2, 0xf0, 0x69, 0x03, 0xe1, 0x1a, 0xec,
	0x4c, 0x06, 0xd6, 0x53, 0xeb, 0xe4, 0x71, 0xa3, 0x64, 0xfe, 0xbd, 0x36, 0x95, 0xff, 0x57, 0xf7,
	0xfb, 0x50, 0x1d, 0xf9, 0x9e, 0xb7, 0x50, 0xbd, 0xd6, 0xfb, 0x5c, 0x4f, 0xb1, 0x81, 0xef, 0x79,
	0x56, 0x45, 0x38, 0x8b, 0xe4, 0xd7, 0xde, 0x8b, 0xbd, 0x37, 0x3b, 0xb0, 0x3b, 0x23, 0x6b, 0xc5,
	0xee, 0xf0, 0xb9, 0x8b, 0x7f, 0xc8, 0x9d, 0xf9, 0xea, 0xf1, 0x81, 0x3b, 0x1b, 0x3c, 0x95, 0x8e,
	0xd8, 0xd8, 0xd8, 0xc4, 0x5e, 0xe8, 0x9b, 0x1f, 0x5c, 0x5d, 0xb5, 0x9a, 0xc1, 0xe7, 0x8f, 0x18,
	0x63, 0x13, 0x7b, 0x11, 0x9c, 0xc1, 0x5e, 0xfe, 0x6d, 0x87, 0xbf, 0xd0, 0x42, 0x52, 0x23, 0xca,
	0xd0, 0x36, 0x2e, 0x4e, 0x58, 0xcd, 0x7c, 0xcd, 0x84, 0xe7, 0x17, 0xa1, 0xb1, 0x89, 0xbd, 0x08,
	0xee, 0xc2, 0xd5, 0x95, 0x61, 0x8a, 0x6f, 0xbc, 0x6d, 0xc6, 0x65, 0x69, 0xea, 0xd8, 0xe5, 0x06,
	0x19, 0xea, 0x04, 0x19, 0x6a, 0x06, 0x51, 0x23, 0x15, 0xff, 0x84, 0xc0, 0x28, 0x9e, 0x98, 0x58,
	0xef, 0x0d, 0xba, 0x98, 0xc0, 0xc6, 0x46, 0x0e, 0x62, 0xa6, 0xc3, 0xf4, 0xf5, 0xfe, 0x2f, 0x3f,
	0xa3, 0xb3, 0xd7, 0xfb, 0xef, 0x15, 0x92, 0x51, 0x63, 0x44, 0x97, 0xcc, 0x7c, 0xf0, 0x19, 0x1b,
	0x39, 0x2c, 0x91, 0x31, 0xae, 0x4c, 0xcf, 0x9b, 0x7f, 0xed, 0x9c, 0x9d, 0x37, 0x4b, 0xaf, 0xce,
	0x9b, 0xe8, 0xeb, 0x9b, 0x70, 0xcd, 0xa5, 0xe1, 0x0a, 0xe0, 0x37, 0x95, 0xd9, 0xd7, 0x14, 0xa1,
	0x33, 0x84, 0x5e, 0x21, 0xf4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xed, 0x35, 0x75, 0x66, 0xd5,
	0x0d, 0x00, 0x00,
}

//Generated by ntnx_rpc plugin

// Service MicrosegRpcSvc
type IMicrosegRpcSvc interface {
	BeforeRpcCall(rpc *util_net.ProtobufRpc, arg interface{}, ret interface{}) error
	AfterRpcCall(rpc *util_net.ProtobufRpc, arg interface{}, ret interface{}, err error) error

	NetworkSecurityRuleCreate(*NetworkSecurityRuleCreateArg, *NetworkSecurityRuleCreateRet) error
	NetworkSecurityRuleUpdate(*NetworkSecurityRuleUpdateArg, *NetworkSecurityRuleUpdateRet) error
	NetworkSecurityRuleGet(*NetworkSecurityRuleGetArg, *NetworkSecurityRuleGetRet) error
	NetworkSecurityRuleDelete(*NetworkSecurityRuleDeleteArg, *NetworkSecurityRuleDeleteRet) error
	MicrosegConfigGet(*MicrosegConfigGetArg, *MicrosegConfigGetRet) error
	MicrosegConfigSet(*MicrosegConfigSetArg, *MicrosegConfigSetRet) error
	NetworkSecurityRulesExport(*NetworkSecurityRulesExportArg, *NetworkSecurityRulesExportRet) error
	NetworkSecurityRulesImport(*NetworkSecurityRulesImportArg, *NetworkSecurityRulesImportRet) error
}

func _MicrosegRpcSvc_NetworkSecurityRuleCreate_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(NetworkSecurityRuleCreateArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &NetworkSecurityRuleCreateRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.NetworkSecurityRuleCreate(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_NetworkSecurityRuleUpdate_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(NetworkSecurityRuleUpdateArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &NetworkSecurityRuleUpdateRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.NetworkSecurityRuleUpdate(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_NetworkSecurityRuleGet_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(NetworkSecurityRuleGetArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &NetworkSecurityRuleGetRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.NetworkSecurityRuleGet(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_NetworkSecurityRuleDelete_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(NetworkSecurityRuleDeleteArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &NetworkSecurityRuleDeleteRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.NetworkSecurityRuleDelete(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_MicrosegConfigGet_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(MicrosegConfigGetArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &MicrosegConfigGetRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.MicrosegConfigGet(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_MicrosegConfigSet_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(MicrosegConfigSetArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &MicrosegConfigSetRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.MicrosegConfigSet(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_NetworkSecurityRulesExport_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(NetworkSecurityRulesExportArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &NetworkSecurityRulesExportRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.NetworkSecurityRulesExport(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

func _MicrosegRpcSvc_NetworkSecurityRulesImport_Handler(rpc *util_net.ProtobufRpc, handlers interface{}) error {
	handler, ok := handlers.(IMicrosegRpcSvc)
	if !ok {
		return util_net.ErrMethod
	}
	arg := new(NetworkSecurityRulesImportArg)
	err := proto.Unmarshal(rpc.RequestPayload, arg)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Failed to unmarshal request"))
	}
	ret := &NetworkSecurityRulesImportRet{}
	err = handler.BeforeRpcCall(rpc, arg, ret)
	if err != nil {
		return err
	}
	err = handler.NetworkSecurityRulesImport(arg, ret)
	err = handler.AfterRpcCall(rpc, arg, ret, err)
	if err != nil {
		return err
	}
	rpc.ResponsePayload, err = proto.Marshal(ret)
	if err != nil {
		return util_net.ErrTransport.SetCause(
			errors.New("Error in marshaling response"))
	}
	return nil
}

var _MicrosegRpcSvcDesc = util_net.ServiceDesc{
	Name: "nutanix.microseg.MicrosegRpcSvc",
	Methods: map[string]util_net.ServiceMethodFn{
		"NetworkSecurityRuleCreate":  _MicrosegRpcSvc_NetworkSecurityRuleCreate_Handler,
		"NetworkSecurityRuleUpdate":  _MicrosegRpcSvc_NetworkSecurityRuleUpdate_Handler,
		"NetworkSecurityRuleGet":     _MicrosegRpcSvc_NetworkSecurityRuleGet_Handler,
		"NetworkSecurityRuleDelete":  _MicrosegRpcSvc_NetworkSecurityRuleDelete_Handler,
		"MicrosegConfigGet":          _MicrosegRpcSvc_MicrosegConfigGet_Handler,
		"MicrosegConfigSet":          _MicrosegRpcSvc_MicrosegConfigSet_Handler,
		"NetworkSecurityRulesExport": _MicrosegRpcSvc_NetworkSecurityRulesExport_Handler,
		"NetworkSecurityRulesImport": _MicrosegRpcSvc_NetworkSecurityRulesImport_Handler,
	},
}

func NewMicrosegRpcSvc(impl IMicrosegRpcSvc) *util_net.Service {
	return &util_net.Service{
		Desc: &_MicrosegRpcSvcDesc,
		Impl: impl,
	}
}

type IMicrosegRpcClient interface {
	NetworkSecurityRuleCreate(*NetworkSecurityRuleCreateArg) (*NetworkSecurityRuleCreateRet, error)
	NetworkSecurityRuleUpdate(*NetworkSecurityRuleUpdateArg) (*NetworkSecurityRuleUpdateRet, error)
	NetworkSecurityRuleGet(*NetworkSecurityRuleGetArg) (*NetworkSecurityRuleGetRet, error)
	NetworkSecurityRuleDelete(*NetworkSecurityRuleDeleteArg) (*NetworkSecurityRuleDeleteRet, error)
	MicrosegConfigGet(*MicrosegConfigGetArg) (*MicrosegConfigGetRet, error)
	MicrosegConfigSet(*MicrosegConfigSetArg) (*MicrosegConfigSetRet, error)
	NetworkSecurityRulesExport(*NetworkSecurityRulesExportArg) (*NetworkSecurityRulesExportRet, error)
	NetworkSecurityRulesImport(*NetworkSecurityRulesImportArg) (*NetworkSecurityRulesImportRet, error)
}

type MicrosegRpcClient struct {
	Impl util_net.ProtobufRPCClientIfc
}

func NewMicrosegRpcClient(impl util_net.ProtobufRPCClientIfc) IMicrosegRpcClient {
	return &MicrosegRpcClient{
		Impl: impl,
	}
}

func (client *MicrosegRpcClient) NetworkSecurityRuleCreate(
	arg *NetworkSecurityRuleCreateArg) (
	*NetworkSecurityRuleCreateRet, error) {

	ret := &NetworkSecurityRuleCreateRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "NetworkSecurityRuleCreate", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) NetworkSecurityRuleUpdate(
	arg *NetworkSecurityRuleUpdateArg) (
	*NetworkSecurityRuleUpdateRet, error) {

	ret := &NetworkSecurityRuleUpdateRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "NetworkSecurityRuleUpdate", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) NetworkSecurityRuleGet(
	arg *NetworkSecurityRuleGetArg) (
	*NetworkSecurityRuleGetRet, error) {

	ret := &NetworkSecurityRuleGetRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "NetworkSecurityRuleGet", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) NetworkSecurityRuleDelete(
	arg *NetworkSecurityRuleDeleteArg) (
	*NetworkSecurityRuleDeleteRet, error) {

	ret := &NetworkSecurityRuleDeleteRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "NetworkSecurityRuleDelete", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) MicrosegConfigGet(
	arg *MicrosegConfigGetArg) (
	*MicrosegConfigGetRet, error) {

	ret := &MicrosegConfigGetRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "MicrosegConfigGet", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) MicrosegConfigSet(
	arg *MicrosegConfigSetArg) (
	*MicrosegConfigSetRet, error) {

	ret := &MicrosegConfigSetRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "MicrosegConfigSet", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) NetworkSecurityRulesExport(
	arg *NetworkSecurityRulesExportArg) (
	*NetworkSecurityRulesExportRet, error) {

	ret := &NetworkSecurityRulesExportRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "NetworkSecurityRulesExport", arg, ret, 0)
	return ret, err
}

func (client *MicrosegRpcClient) NetworkSecurityRulesImport(
	arg *NetworkSecurityRulesImportArg) (
	*NetworkSecurityRulesImportRet, error) {

	ret := &NetworkSecurityRulesImportRet{}
	err := client.Impl.CallMethodSync(
		"nutanix.microseg.MicrosegRpcSvc", "NetworkSecurityRulesImport", arg, ret, 0)
	return ret, err
}
