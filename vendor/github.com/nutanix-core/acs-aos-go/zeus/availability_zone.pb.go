// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zeus/availability_zone.proto

package zeus

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AvailabilityZonePhysicalType_Type int32

const (
	AvailabilityZonePhysicalType_kPC AvailabilityZonePhysicalType_Type = 0
	AvailabilityZonePhysicalType_kXi AvailabilityZonePhysicalType_Type = 1
	// In order to account for self-AZs.
	AvailabilityZonePhysicalType_kLocal AvailabilityZonePhysicalType_Type = 2
)

var AvailabilityZonePhysicalType_Type_name = map[int32]string{
	0: "kPC",
	1: "kXi",
	2: "kLocal",
}

var AvailabilityZonePhysicalType_Type_value = map[string]int32{
	"kPC":    0,
	"kXi":    1,
	"kLocal": 2,
}

func (x AvailabilityZonePhysicalType_Type) Enum() *AvailabilityZonePhysicalType_Type {
	p := new(AvailabilityZonePhysicalType_Type)
	*p = x
	return p
}

func (x AvailabilityZonePhysicalType_Type) String() string {
	return proto.EnumName(AvailabilityZonePhysicalType_Type_name, int32(x))
}

func (x *AvailabilityZonePhysicalType_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AvailabilityZonePhysicalType_Type_value, data, "AvailabilityZonePhysicalType_Type")
	if err != nil {
		return err
	}
	*x = AvailabilityZonePhysicalType_Type(value)
	return nil
}

func (AvailabilityZonePhysicalType_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{0, 0}
}

type AvailabilityZonePhysicalType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailabilityZonePhysicalType) Reset()         { *m = AvailabilityZonePhysicalType{} }
func (m *AvailabilityZonePhysicalType) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZonePhysicalType) ProtoMessage()    {}
func (*AvailabilityZonePhysicalType) Descriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{0}
}

func (m *AvailabilityZonePhysicalType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZonePhysicalType.Unmarshal(m, b)
}
func (m *AvailabilityZonePhysicalType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZonePhysicalType.Marshal(b, m, deterministic)
}
func (m *AvailabilityZonePhysicalType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZonePhysicalType.Merge(m, src)
}
func (m *AvailabilityZonePhysicalType) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZonePhysicalType.Size(m)
}
func (m *AvailabilityZonePhysicalType) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZonePhysicalType.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZonePhysicalType proto.InternalMessageInfo

// This maps to an actual data center or a physical endpoint
type AvailabilityZonePhysical struct {
	// Unique identifier for the AvailabilityZone
	Uuid *string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// Required - Availability zone name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Required - Availability zone type.
	Type *AvailabilityZonePhysicalType_Type `protobuf:"varint,3,opt,name=type,enum=nutanix.zeus.AvailabilityZonePhysicalType_Type" json:"type,omitempty"`
	// Required - URL endpoint for the Availability zone
	Url *string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	// Optional - Region string. Required for AWS and Xi. e.g. us-west
	Region *string `protobuf:"bytes,5,opt,name=region" json:"region,omitempty"`
	// Required - Credentials of an availability zone except for Local types.
	Credentials *AvailabilityZonePhysical_Credentials `protobuf:"bytes,6,opt,name=credentials" json:"credentials,omitempty"`
	// Optional - tenant uuid for Xi
	TenantUuid *string `protobuf:"bytes,8,opt,name=tenant_uuid,json=tenantUuid" json:"tenant_uuid,omitempty"`
	// Optional - Reference to the cloud trust uuid
	// Valid only for AZs formed as part of cloud pairing operation
	CloudTrustUuid *string `protobuf:"bytes,9,opt,name=cloud_trust_uuid,json=cloudTrustUuid" json:"cloud_trust_uuid,omitempty"`
	// Optional - Display name
	DisplayName          *string  `protobuf:"bytes,10,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailabilityZonePhysical) Reset()         { *m = AvailabilityZonePhysical{} }
func (m *AvailabilityZonePhysical) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZonePhysical) ProtoMessage()    {}
func (*AvailabilityZonePhysical) Descriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{1}
}

func (m *AvailabilityZonePhysical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZonePhysical.Unmarshal(m, b)
}
func (m *AvailabilityZonePhysical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZonePhysical.Marshal(b, m, deterministic)
}
func (m *AvailabilityZonePhysical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZonePhysical.Merge(m, src)
}
func (m *AvailabilityZonePhysical) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZonePhysical.Size(m)
}
func (m *AvailabilityZonePhysical) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZonePhysical.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZonePhysical proto.InternalMessageInfo

func (m *AvailabilityZonePhysical) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *AvailabilityZonePhysical) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AvailabilityZonePhysical) GetType() AvailabilityZonePhysicalType_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AvailabilityZonePhysicalType_kPC
}

func (m *AvailabilityZonePhysical) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *AvailabilityZonePhysical) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *AvailabilityZonePhysical) GetCredentials() *AvailabilityZonePhysical_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *AvailabilityZonePhysical) GetTenantUuid() string {
	if m != nil && m.TenantUuid != nil {
		return *m.TenantUuid
	}
	return ""
}

func (m *AvailabilityZonePhysical) GetCloudTrustUuid() string {
	if m != nil && m.CloudTrustUuid != nil {
		return *m.CloudTrustUuid
	}
	return ""
}

func (m *AvailabilityZonePhysical) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

type AvailabilityZonePhysical_Credentials struct {
	// Optional - UUID of the remote connection for AZ communication.
	RemoteConnectionUuid *string  `protobuf:"bytes,6,opt,name=remote_connection_uuid,json=remoteConnectionUuid" json:"remote_connection_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailabilityZonePhysical_Credentials) Reset()         { *m = AvailabilityZonePhysical_Credentials{} }
func (m *AvailabilityZonePhysical_Credentials) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZonePhysical_Credentials) ProtoMessage()    {}
func (*AvailabilityZonePhysical_Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{1, 0}
}

func (m *AvailabilityZonePhysical_Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZonePhysical_Credentials.Unmarshal(m, b)
}
func (m *AvailabilityZonePhysical_Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZonePhysical_Credentials.Marshal(b, m, deterministic)
}
func (m *AvailabilityZonePhysical_Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZonePhysical_Credentials.Merge(m, src)
}
func (m *AvailabilityZonePhysical_Credentials) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZonePhysical_Credentials.Size(m)
}
func (m *AvailabilityZonePhysical_Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZonePhysical_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZonePhysical_Credentials proto.InternalMessageInfo

func (m *AvailabilityZonePhysical_Credentials) GetRemoteConnectionUuid() string {
	if m != nil && m.RemoteConnectionUuid != nil {
		return *m.RemoteConnectionUuid
	}
	return ""
}

// This is the logical view seen by the user
type AvailabilityZonePhysicalPerRegion struct {
	// Logical availability zone name e.g. us-west-bay-area
	AvailabilityZonePhysicalIdList []string `protobuf:"bytes,1,rep,name=availability_zone_physical_id_list,json=availabilityZonePhysicalIdList" json:"availability_zone_physical_id_list,omitempty"`
	// Region string
	Region *string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	// Required uuid
	Uuid                 *string  `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailabilityZonePhysicalPerRegion) Reset()         { *m = AvailabilityZonePhysicalPerRegion{} }
func (m *AvailabilityZonePhysicalPerRegion) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZonePhysicalPerRegion) ProtoMessage()    {}
func (*AvailabilityZonePhysicalPerRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{2}
}

func (m *AvailabilityZonePhysicalPerRegion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZonePhysicalPerRegion.Unmarshal(m, b)
}
func (m *AvailabilityZonePhysicalPerRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZonePhysicalPerRegion.Marshal(b, m, deterministic)
}
func (m *AvailabilityZonePhysicalPerRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZonePhysicalPerRegion.Merge(m, src)
}
func (m *AvailabilityZonePhysicalPerRegion) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZonePhysicalPerRegion.Size(m)
}
func (m *AvailabilityZonePhysicalPerRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZonePhysicalPerRegion.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZonePhysicalPerRegion proto.InternalMessageInfo

func (m *AvailabilityZonePhysicalPerRegion) GetAvailabilityZonePhysicalIdList() []string {
	if m != nil {
		return m.AvailabilityZonePhysicalIdList
	}
	return nil
}

func (m *AvailabilityZonePhysicalPerRegion) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *AvailabilityZonePhysicalPerRegion) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

// This is the logical view seen by the user
type AvailabilityZoneLogicalPerRegion struct {
	// Required Logical availability zone name e.g. us-west-bay-area
	AvailabilityZoneList []string `protobuf:"bytes,1,rep,name=availability_zone_list,json=availabilityZoneList" json:"availability_zone_list,omitempty"`
	// Required Region string
	Region *string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	// Required uuid
	Uuid                 *string  `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailabilityZoneLogicalPerRegion) Reset()         { *m = AvailabilityZoneLogicalPerRegion{} }
func (m *AvailabilityZoneLogicalPerRegion) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZoneLogicalPerRegion) ProtoMessage()    {}
func (*AvailabilityZoneLogicalPerRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{3}
}

func (m *AvailabilityZoneLogicalPerRegion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZoneLogicalPerRegion.Unmarshal(m, b)
}
func (m *AvailabilityZoneLogicalPerRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZoneLogicalPerRegion.Marshal(b, m, deterministic)
}
func (m *AvailabilityZoneLogicalPerRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZoneLogicalPerRegion.Merge(m, src)
}
func (m *AvailabilityZoneLogicalPerRegion) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZoneLogicalPerRegion.Size(m)
}
func (m *AvailabilityZoneLogicalPerRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZoneLogicalPerRegion.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZoneLogicalPerRegion proto.InternalMessageInfo

func (m *AvailabilityZoneLogicalPerRegion) GetAvailabilityZoneList() []string {
	if m != nil {
		return m.AvailabilityZoneList
	}
	return nil
}

func (m *AvailabilityZoneLogicalPerRegion) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *AvailabilityZoneLogicalPerRegion) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

// This is the Xi topology map. It contains a list of all regions and
// physical availability_zone's
type XiPortalTopology struct {
	// List of regions and their AvailabilityZone's
	RegionList           []*AvailabilityZonePhysicalPerRegion `protobuf:"bytes,1,rep,name=region_list,json=regionList" json:"region_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *XiPortalTopology) Reset()         { *m = XiPortalTopology{} }
func (m *XiPortalTopology) String() string { return proto.CompactTextString(m) }
func (*XiPortalTopology) ProtoMessage()    {}
func (*XiPortalTopology) Descriptor() ([]byte, []int) {
	return fileDescriptor_14abe972673ea609, []int{4}
}

func (m *XiPortalTopology) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XiPortalTopology.Unmarshal(m, b)
}
func (m *XiPortalTopology) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XiPortalTopology.Marshal(b, m, deterministic)
}
func (m *XiPortalTopology) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XiPortalTopology.Merge(m, src)
}
func (m *XiPortalTopology) XXX_Size() int {
	return xxx_messageInfo_XiPortalTopology.Size(m)
}
func (m *XiPortalTopology) XXX_DiscardUnknown() {
	xxx_messageInfo_XiPortalTopology.DiscardUnknown(m)
}

var xxx_messageInfo_XiPortalTopology proto.InternalMessageInfo

func (m *XiPortalTopology) GetRegionList() []*AvailabilityZonePhysicalPerRegion {
	if m != nil {
		return m.RegionList
	}
	return nil
}

func init() {
	proto.RegisterEnum("nutanix.zeus.AvailabilityZonePhysicalType_Type", AvailabilityZonePhysicalType_Type_name, AvailabilityZonePhysicalType_Type_value)
	proto.RegisterType((*AvailabilityZonePhysicalType)(nil), "nutanix.zeus.AvailabilityZonePhysicalType")
	proto.RegisterType((*AvailabilityZonePhysical)(nil), "nutanix.zeus.AvailabilityZonePhysical")
	proto.RegisterType((*AvailabilityZonePhysical_Credentials)(nil), "nutanix.zeus.AvailabilityZonePhysical.Credentials")
	proto.RegisterType((*AvailabilityZonePhysicalPerRegion)(nil), "nutanix.zeus.AvailabilityZonePhysicalPerRegion")
	proto.RegisterType((*AvailabilityZoneLogicalPerRegion)(nil), "nutanix.zeus.AvailabilityZoneLogicalPerRegion")
	proto.RegisterType((*XiPortalTopology)(nil), "nutanix.zeus.XiPortalTopology")
}

func init() { proto.RegisterFile("zeus/availability_zone.proto", fileDescriptor_14abe972673ea609) }

var fileDescriptor_14abe972673ea609 = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x41, 0x6f, 0x94, 0x40,
	0x14, 0x96, 0x05, 0x57, 0xf7, 0xd1, 0x34, 0x64, 0x52, 0x37, 0x68, 0x1a, 0xa5, 0xc4, 0x03, 0x27,
	0x9a, 0x6c, 0x7a, 0xf0, 0x6a, 0xf1, 0xa2, 0xd9, 0x18, 0x42, 0xd6, 0xa4, 0xe9, 0x85, 0x4c, 0x61,
	0x5c, 0x27, 0x9d, 0x9d, 0x47, 0x60, 0x30, 0xd2, 0xb3, 0xff, 0xc2, 0x7f, 0xe2, 0xaf, 0x33, 0x33,
	0x60, 0x97, 0xed, 0x66, 0x4d, 0xbd, 0xc0, 0xe3, 0x7b, 0xdf, 0xfb, 0xde, 0xf7, 0x66, 0x1e, 0x70,
	0x7a, 0xc7, 0xda, 0xe6, 0x9c, 0x7e, 0xa7, 0x5c, 0xd0, 0x1b, 0x2e, 0xb8, 0xea, 0xf2, 0x3b, 0x94,
	0x2c, 0xae, 0x6a, 0x54, 0x48, 0x8e, 0x64, 0xab, 0xa8, 0xe4, 0x3f, 0x62, 0xcd, 0x0a, 0x3f, 0xc0,
	0xe9, 0xfb, 0x11, 0xf1, 0x1a, 0x25, 0x4b, 0xbf, 0x75, 0x0d, 0x2f, 0xa8, 0x58, 0x75, 0x15, 0x0b,
	0xdf, 0x82, 0xa3, 0xdf, 0xe4, 0x19, 0xd8, 0xb7, 0x69, 0xe2, 0x3d, 0x31, 0xc1, 0x15, 0xf7, 0x2c,
	0x02, 0x30, 0xbd, 0x5d, 0x62, 0x41, 0x85, 0x37, 0x09, 0x7f, 0xdb, 0xe0, 0x1f, 0x92, 0x21, 0x04,
	0x9c, 0xb6, 0xe5, 0xa5, 0x6f, 0x05, 0x56, 0x34, 0xcb, 0x4c, 0xac, 0x31, 0x49, 0x37, 0xcc, 0x9f,
	0xf4, 0x98, 0x8e, 0x49, 0x02, 0x8e, 0xea, 0x2a, 0xe6, 0xdb, 0x81, 0x15, 0x1d, 0x2f, 0xce, 0xe3,
	0xb1, 0xcf, 0xf8, 0x5f, 0x26, 0x63, 0xfd, 0xc8, 0x4c, 0x31, 0xf1, 0xc0, 0x6e, 0x6b, 0xe1, 0x3b,
	0x46, 0x57, 0x87, 0x64, 0x0e, 0xd3, 0x9a, 0xad, 0x39, 0x4a, 0xff, 0xa9, 0x01, 0x87, 0x2f, 0xb2,
	0x02, 0xb7, 0xa8, 0x59, 0xc9, 0xa4, 0xe2, 0x54, 0x34, 0xfe, 0x34, 0xb0, 0x22, 0x77, 0xb1, 0x78,
	0x5c, 0xd7, 0x38, 0xd9, 0x56, 0x66, 0x63, 0x19, 0xf2, 0x06, 0x5c, 0xc5, 0x24, 0x95, 0x2a, 0x37,
	0x33, 0x3f, 0x37, 0x2d, 0xa1, 0x87, 0xbe, 0xe8, 0xc9, 0x23, 0xf0, 0x0a, 0x81, 0x6d, 0x99, 0xab,
	0xba, 0x6d, 0x06, 0xd6, 0xcc, 0xb0, 0x8e, 0x0d, 0xbe, 0xd2, 0xb0, 0x61, 0x9e, 0xc1, 0x51, 0xc9,
	0x9b, 0x4a, 0xd0, 0x2e, 0x37, 0x67, 0x05, 0x86, 0xe5, 0x0e, 0xd8, 0x67, 0xba, 0x61, 0xaf, 0x12,
	0x70, 0x47, 0x4e, 0xc8, 0x05, 0xcc, 0x6b, 0xb6, 0x41, 0xc5, 0xf2, 0x02, 0xa5, 0x64, 0x85, 0xe2,
	0x28, 0xfb, 0x0e, 0x53, 0x53, 0x7b, 0xd2, 0x67, 0x93, 0xfb, 0xa4, 0xee, 0x13, 0xfe, 0xb2, 0xe0,
	0xec, 0xd0, 0xa0, 0x29, 0xab, 0xb3, 0xfe, 0xb8, 0x3e, 0x41, 0xb8, 0xb7, 0x51, 0x79, 0x35, 0xd0,
	0x72, 0x5e, 0xe6, 0x82, 0x37, 0xca, 0xb7, 0x02, 0x3b, 0x9a, 0x65, 0xaf, 0xe9, 0x01, 0xb9, 0x8f,
	0xe5, 0x92, 0x37, 0x6a, 0x74, 0x25, 0x93, 0x9d, 0x2b, 0xf9, 0xbb, 0x29, 0xf6, 0x76, 0x53, 0xc2,
	0x9f, 0x16, 0x04, 0x0f, 0xdd, 0x2d, 0x71, 0xbd, 0x6b, 0xee, 0x02, 0xe6, 0xfb, 0xe6, 0x46, 0x86,
	0x4e, 0x1e, 0x1a, 0xfa, 0x6f, 0x1b, 0x25, 0x78, 0x57, 0x3c, 0xc5, 0x5a, 0x51, 0xb1, 0xc2, 0x0a,
	0x05, 0xae, 0x3b, 0x92, 0x82, 0xdb, 0x57, 0x6c, 0x5b, 0xb9, 0x8f, 0xdd, 0xdb, 0x7b, 0xef, 0x19,
	0xf4, 0x1a, 0xda, 0xd1, 0xe5, 0x3b, 0x78, 0x59, 0xe0, 0x66, 0x57, 0xc1, 0xfc, 0xb5, 0x37, 0xed,
	0xd7, 0xcb, 0x17, 0x7b, 0x5a, 0x3a, 0x73, 0xed, 0x68, 0xd6, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0x6e, 0x82, 0xd3, 0xf4, 0x03, 0x00, 0x00,
}
