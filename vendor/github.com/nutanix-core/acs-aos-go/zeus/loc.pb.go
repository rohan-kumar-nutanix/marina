// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zeus/loc.proto

package zeus

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// NOTE: While modifying 'LogicalOperationClock', update the following files.
//       - stargate/nfs_adapter/master_WAL_printer.cc
type LogicalOperationClock struct {
	ComponentId          *int64   `protobuf:"varint,1,req,name=component_id,json=componentId" json:"component_id,omitempty"`
	IncarnationId        *int64   `protobuf:"varint,2,req,name=incarnation_id,json=incarnationId" json:"incarnation_id,omitempty"`
	OperationId          *int64   `protobuf:"varint,3,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	OperationTimestamp   *int64   `protobuf:"varint,4,opt,name=operation_timestamp,json=operationTimestamp" json:"operation_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicalOperationClock) Reset()         { *m = LogicalOperationClock{} }
func (m *LogicalOperationClock) String() string { return proto.CompactTextString(m) }
func (*LogicalOperationClock) ProtoMessage()    {}
func (*LogicalOperationClock) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d7a8d5b8a39f558, []int{0}
}

func (m *LogicalOperationClock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalOperationClock.Unmarshal(m, b)
}
func (m *LogicalOperationClock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalOperationClock.Marshal(b, m, deterministic)
}
func (m *LogicalOperationClock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalOperationClock.Merge(m, src)
}
func (m *LogicalOperationClock) XXX_Size() int {
	return xxx_messageInfo_LogicalOperationClock.Size(m)
}
func (m *LogicalOperationClock) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalOperationClock.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalOperationClock proto.InternalMessageInfo

func (m *LogicalOperationClock) GetComponentId() int64 {
	if m != nil && m.ComponentId != nil {
		return *m.ComponentId
	}
	return 0
}

func (m *LogicalOperationClock) GetIncarnationId() int64 {
	if m != nil && m.IncarnationId != nil {
		return *m.IncarnationId
	}
	return 0
}

func (m *LogicalOperationClock) GetOperationId() int64 {
	if m != nil && m.OperationId != nil {
		return *m.OperationId
	}
	return 0
}

func (m *LogicalOperationClock) GetOperationTimestamp() int64 {
	if m != nil && m.OperationTimestamp != nil {
		return *m.OperationTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*LogicalOperationClock)(nil), "nutanix.zeus.LogicalOperationClock")
}

func init() { proto.RegisterFile("zeus/loc.proto", fileDescriptor_5d7a8d5b8a39f558) }

var fileDescriptor_5d7a8d5b8a39f558 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xab, 0x4a, 0x2d, 0x2d,
	0xd6, 0xcf, 0xc9, 0x4f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc9, 0x2b, 0x2d, 0x49,
	0xcc, 0xcb, 0xac, 0xd0, 0x03, 0x89, 0x2b, 0x6d, 0x65, 0xe4, 0x12, 0xf5, 0xc9, 0x4f, 0xcf, 0x4c,
	0x4e, 0xcc, 0xf1, 0x2f, 0x48, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x73, 0xce, 0xc9, 0x4f, 0xce,
	0x16, 0x52, 0xe4, 0xe2, 0x49, 0xce, 0xcf, 0x2d, 0xc8, 0xcf, 0x4b, 0xcd, 0x2b, 0x89, 0xcf, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd2, 0x60, 0x0e, 0xe2, 0x86, 0x8b, 0x79, 0xa6, 0x08, 0xa9, 0x72, 0xf1,
	0x65, 0xe6, 0x25, 0x27, 0x16, 0xe5, 0x81, 0xb5, 0x81, 0x14, 0x31, 0x81, 0x15, 0xf1, 0x22, 0x89,
	0x7a, 0xa6, 0x80, 0x4c, 0xca, 0x87, 0x99, 0x0d, 0x52, 0xc4, 0x0c, 0x31, 0x09, 0x2e, 0xe6, 0x99,
	0x22, 0xa4, 0xcf, 0x25, 0x8c, 0x50, 0x52, 0x92, 0x99, 0x9b, 0x5a, 0x5c, 0x92, 0x98, 0x5b, 0x20,
	0xc1, 0xa2, 0xc0, 0xa8, 0xc1, 0x1c, 0x24, 0x04, 0x97, 0x0a, 0x81, 0xc9, 0x38, 0xd9, 0x72, 0x49,
	0x26, 0xe7, 0xe7, 0xea, 0x21, 0xfb, 0x05, 0xe2, 0xbf, 0xa4, 0xd2, 0x34, 0x27, 0x29, 0xac, 0x3e,
	0x0a, 0x00, 0x49, 0x47, 0xb1, 0x80, 0x94, 0x02, 0x02, 0x00, 0x00, 0xff, 0xff, 0x36, 0x47, 0xa9,
	0x99, 0x15, 0x01, 0x00, 0x00,
}
