#!/bin/bash -e

##############################################
# Author      : shreyash.turkar@nutanix.com
# Description : Setup script for adding dev PC.
# Written for : MacOS.
##############################################

PC_IP=$1
# Directory where this script is present is assumed to be workspace dir.
WORKSPACE_DIR_PATH=$( dirname -- "$0"; )

# /etc/hosts related constants.
HOST_FILE_PATH=/etc/hosts
HOST_FILE_START_SECTION="# Added by Marina PC setup script on"
HOST_FILE_END_SECTION="# End of section added by Marina PC setup script"


# certs related constants.
REMOTE_CERT_FOLDER_PATH=/home/certs
LOCAL_CERT_FOLDER_PATH=$WORKSPACE_DIR_PATH/certs
CERTS_FILES_TO_COPY=("ca.pem" "ica.crt")
CERTS_FOLDERS_TO_COPY=("CatalogService")

# zookeeper related constants.
FACTORY_CONFIG_PATH=("/etc/nutanix/factory_config.json")
LOCAL_FACTORY_CONFIG_PATH=("/etc/nutanix")

function guide() {
    echo "Example:
          sudo $0 1.1.1.1"
}

function print_step () {
  echo \
"--------------------------------------------------------
 ${1}
--------------------------------------------------------"
}

function delete_existing_entries () {
  print_step "Deleting existing entries from $HOST_FILE_PATH"
  sed -i -e "/$HOST_FILE_START_SECTION .*/ d;
             /.* pcip/ d;
             /.* iam-proxy.ntnx-base/ d;
             /$HOST_FILE_END_SECTION/ d" $HOST_FILE_PATH
}

function add_new_entry() {
  print_step "Adding $PC_IP to $HOST_FILE_PATH"
  {
    echo "$HOST_FILE_START_SECTION $(date)"
    echo "$PC_IP pcip"
    echo "$PC_IP iam-proxy.ntnx-base"
    echo "$HOST_FILE_END_SECTION"
  } >> $HOST_FILE_PATH
}

function copy_certs() {
  print_step "Copy certificates from PC to local."

  rm -rf $LOCAL_CERT_FOLDER_PATH

# Copy cert folders
  for folder in ${CERTS_FOLDERS_TO_COPY[*]}
  do
    echo "Transferring: $folder"
expect <<EOS
    spawn rsync -va nutanix@$PC_IP:$REMOTE_CERT_FOLDER_PATH/$folder $LOCAL_CERT_FOLDER_PATH
    expect {
      "continue" { send "yes\n"; exp_continue }
      "password:" { send "nutanix/4u\n"; exp_continue}
    }
EOS
  ls $LOCAL_CERT_FOLDER_PATH/$folder >>/dev/null 2>&1 || (print_step "Failed to transfer $REMOTE_CERT_FOLDER_PATH/$folder" && exit 1)
  done

# Copy cert files.
  for file in ${CERTS_FILES_TO_COPY[*]}
  do
    echo "Transferring: $file"
expect <<EOS
    spawn rsync -v nutanix@$PC_IP:$REMOTE_CERT_FOLDER_PATH/$file $LOCAL_CERT_FOLDER_PATH
    expect {
      "continue" { send "yes\n"; exp_continue }
      "password:" { send "nutanix/4u\n"; exp_continue}
    }
EOS
  ls $LOCAL_CERT_FOLDER_PATH/$file >>/dev/null 2>&1 || (print_step "Failed to transfer $REMOTE_CERT_FOLDER_PATH/$file" && exit 1)
  done

# Change permission for user to view.
  chmod -R 555 $LOCAL_CERT_FOLDER_PATH
}

function add_factory_config () {
  print_step "Adding factory config $FACTORY_CONFIG_PATH"
  mkdir -p /etc/nutanix

expect <<EOS
    spawn rsync -va nutanix@$PC_IP:$FACTORY_CONFIG_PATH $LOCAL_FACTORY_CONFIG_PATH
    expect {
      "continue" { send "yes\n"; exp_continue }
      "password:" { send "nutanix/4u\n"; exp_continue}
    }
EOS
  ls $LOCAL_FACTORY_CONFIG_PATH >>/dev/null 2>&1 || (print_step "Failed to transfer $FACTORY_CONFIG_PATH" && exit 1)
}

if [[ $EUID -ne 0 ]]; then
  echo "Please run as root / sudo."
  guide
  exit 1
fi

if [[ $# -ne 1 ]]; then
  echo "Please pass PC IP."
  guide
  exit 1
fi

delete_existing_entries
add_new_entry
copy_certs
add_factory_config
print_step "Successful."
